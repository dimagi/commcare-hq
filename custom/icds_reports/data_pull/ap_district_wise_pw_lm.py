"""
read from two files that were generated by using some COPY command, read information of that and generate district wise breakdown
0 case_id,
1 awc_id,
2 person_name,
3 mobile_number,
4 person_case_id,
5 awc_name,
6 supervisor_name,
7 block_name,
8 district_name
"""

import csv
from dimagi.utils.chunked import chunked
from corehq.apps.es import CaseES
from corehq.elastic import ES_EXPORT_INSTANCE

with open('/home/cchq/ap_pw_nh.csv') as pw:
    out_files = {}
    reader = csv.reader(pw)
    for lines in chunked(reader, 1000):
        person_ids = []
        person_cases_by_id = {}
        for row in lines:
            person_ids.append(row[4]) # person_case_id
        person_cases = CaseES(es_instance_alias=ES_EXPORT_INSTANCE).case_ids(person_ids).run()
        for p in person_cases.hits:
            person_cases_by_id[p['_id']] = p
        for row in lines:
            writer = out_files.get(row[8])
            if not writer:
                out = open('/home/cchq/ap_pw_files/pw_{}.csv'.format(row[8]), 'w')
                writer = csv.writer(out)
                writer.writerow(
                    ['District', 'Project', 'Sector', 'AWC', 'Beneficiary Name', 'PW/LM', 'Husband Name',
                     'Mother Phone Number', 'RCH Number'])
                out_files[row[8]] = writer
            writer.writerow([row[8], # District
                            row[7], # Project
                            row[6], # Sector
                            row[5], # AWC
                            row[2], # Beneficiary Name
                            'PW', # PW/LM
                            person_cases_by_id[row[4]].get('husband_name', ''), # Husband's Name
                            row[3], # Mobile number
                            person_cases_by_id[row[4]].get('rch_id')]) # RCH Number



with open('/home/cchq/ap_lm_nh.csv') as lm:
    out_files = {}
    reader = csv.reader(lm)
    for lines in chunked(reader, 1000):
        person_ids = []
        person_cases_by_id = {}
        for row in lines:
            person_ids.append(row[4]) # person_case_id
        person_cases = CaseES(es_instance_alias=ES_EXPORT_INSTANCE).case_ids(person_ids).run()
        for p in person_cases.hits:
            person_cases_by_id[p['_id']] = p
        for row in lines:
            writer = out_files.get(row[8])
            if not writer:
                out = open('/home/cchq/ap_lm_files/lm_{}.csv'.format(row[8]), 'w')
                writer = csv.writer(out)
                writer.writerow(
                    ['District', 'Project', 'Sector', 'AWC', 'Beneficiary Name', 'PW/LM', 'Husband Name',
                     'Mother Phone Number', 'RCH Number'])
                out_files[row[8]] = writer
            writer.writerow([row[8], # District
                            row[7], # Project
                            row[6], # Sector
                            row[5], # AWC
                            row[2], # Beneficiary Name
                            'LM', # PW/LM
                            person_cases_by_id[row[4]].get('husband_name', ''), # Husband's Name
                            row[3], # Mobile Number
                            person_cases_by_id[row[4]].get('rch_id')]) # RCH Number

