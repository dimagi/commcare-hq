
        INSERT INTO "tmp_child_health_monthly_2019-01-01_st1" (
            awc_id, case_id, supervisor_id, month, sex, age_tranche, caste, disabled, minority, resident, dob, age_in_months, open_in_month, alive_in_month, born_in_month, bf_at_birth_born_in_month, low_birth_weight_born_in_month, fully_immunized_eligible, fully_immunized_on_time, fully_immunized_late, has_aadhar_id, valid_in_month, valid_all_registered_in_month, person_name, mother_name, pse_eligible, pse_days_attended, lunch_count, ebf_eligible, ebf_in_month, ebf_not_breastfeeding_reason, ebf_drinking_liquid, ebf_eating, ebf_no_bf_no_milk, ebf_no_bf_pregnant_again, ebf_no_bf_child_too_old, ebf_no_bf_mother_sick, counsel_adequate_bf, ebf_no_info_recorded, counsel_ebf, pnc_eligible, counsel_increase_food_bf, counsel_manage_breast_problems, counsel_skin_to_skin, wer_eligible, nutrition_status_last_recorded, current_month_nutrition_status, nutrition_status_weighed, recorded_weight, recorded_height, height_measured_in_month, current_month_stunting, stunting_last_recorded, wasting_last_recorded, current_month_wasting, zscore_grading_hfa, zscore_grading_hfa_recorded_in_month, zscore_grading_wfh, zscore_grading_wfh_recorded_in_month, muac_grading, muac_grading_recorded_in_month, cf_eligible, cf_initiation_eligible, cf_in_month, cf_diet_diversity, cf_diet_quantity, cf_handwashing, cf_demo, counsel_pediatric_ifa, counsel_comp_feeding_vid, cf_initiation_in_month, thr_eligible, num_rations_distributed, days_ration_given_child, immunization_in_month, mother_phone_number, date_death, mother_case_id, state_id
        ) (SELECT
            child_health.awc_id, child_health.doc_id, child_health.supervisor_id, '2019-01-01', child_health.sex, CASE WHEN ('2019-01-31'::date - person_cases.dob)::integer <= 28 THEN 0      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6 THEN 6      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 12 THEN 12      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24 THEN 24      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 36 THEN 36      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 48 THEN 48      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60 THEN 60      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72 THEN 72 ELSE NULL END, child_health.caste, child_health.disabled, child_health.minority, child_health.resident, person_cases.dob, trunc((('2019-01-31'::date - person_cases.dob)::integer / 30.4 )), CASE WHEN (('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) THEN 1 ELSE 0 END, CASE WHEN (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) THEN 1 ELSE 0 END, CASE WHEN ((child_health.is_availing = 1 AND child_health.is_migrated = 0) AND person_cases.dob BETWEEN '2019-01-01'::date AND '2019-01-31'::date) THEN 1 ELSE 0 END, CASE WHEN ((child_health.is_availing = 1 AND child_health.is_migrated = 0) AND person_cases.dob BETWEEN '2019-01-01'::date AND '2019-01-31'::date) AND child_health.bf_at_birth = 'yes' THEN 1 ELSE 0 END, CASE WHEN ((child_health.is_availing = 1 AND child_health.is_migrated = 0) AND person_cases.dob BETWEEN '2019-01-01'::date AND '2019-01-31'::date) AND child_health.lbw_open_count = 1 THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) > 12) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) > 12) AND (child_tasks.immun_one_year_date - person_cases.dob) <= 365 AND (child_tasks.immun_one_year_date < '2019-01-31'::date) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) > 12) AND (child_tasks.immun_one_year_date - person_cases.dob) > 365 AND (child_tasks.immun_one_year_date < '2019-01-31'::date) THEN 1 ELSE 0 END, CASE WHEN person_cases.aadhar_date < '2019-01-31'::date THEN  1 ELSE 0 END, CASE WHEN ((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) THEN 1 ELSE 0 END, CASE WHEN (('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72 AND child_health.is_migrated = 0 THEN 1 ELSE 0 END, child_health.person_name, child_health.mother_name, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 36) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 36) THEN COALESCE(df.sum_attended_child_ids, 0) ELSE NULL END, COALESCE(df.lunch_count, 0), CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN COALESCE(pnc.is_ebf, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN pnc.not_breastfeeding ELSE NULL END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN GREATEST(pnc.water_or_milk, pnc.other_milk_to_child, pnc.tea_other, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN COALESCE(pnc.eating, 0) ELSE 0 END, 0, 0, 0, 0, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN COALESCE(pnc.counsel_adequate_bf, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) AND date_trunc('MONTH', pnc.latest_time_end_processed) = %(start_date)s THEN 0 ELSE (CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN 1 ELSE 0 END) END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN GREATEST(pnc.counsel_exclusive_bf, pnc.counsel_only_milk, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN COALESCE(pnc.counsel_increase_food_bf, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN COALESCE(pnc.counsel_breast, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN COALESCE(pnc.skin_to_skin, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN 1 ELSE 0 END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN gm.zscore_grading_wfa = 1 THEN 'severely_underweight' WHEN gm.zscore_grading_wfa = 2 THEN 'moderately_underweight' WHEN gm.zscore_grading_wfa IN (3, 4) THEN 'normal' ELSE 'unknown' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.zscore_grading_wfa_last_recorded) != %(start_date)s THEN 'unweighed' WHEN gm.zscore_grading_wfa = 1 THEN 'severely_underweight' WHEN gm.zscore_grading_wfa = 2 THEN 'moderately_underweight' WHEN gm.zscore_grading_wfa IN (3, 4) THEN 'normal' ELSE 'unweighed' END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) AND date_trunc('MONTH', gm.zscore_grading_wfa_last_recorded) = %(start_date)s THEN 1 ELSE 0 END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.weight_child_last_recorded) = %(start_date)s THEN gm.weight_child ELSE NULL END, CASE WHEN date_trunc('MONTH', gm.height_child_last_recorded) = %(start_date)s THEN gm.height_child ELSE NULL END, CASE WHEN date_trunc('MONTH', gm.height_child_last_recorded) = %(start_date)s AND (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN 1 ELSE 0 END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.zscore_grading_hfa_last_recorded) != %(start_date)s    THEN 'unmeasured' WHEN gm.zscore_grading_hfa = 1 THEN 'severe' WHEN gm.zscore_grading_hfa = 2 THEN 'moderate' WHEN gm.zscore_grading_hfa = 3 THEN 'normal' ELSE 'unmeasured' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN gm.zscore_grading_hfa = 1 THEN 'severe' WHEN gm.zscore_grading_hfa = 2 THEN 'moderate' WHEN gm.zscore_grading_hfa = 3 THEN 'normal' ELSE 'unknown' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN gm.zscore_grading_wfh = 1 THEN 'severe' WHEN gm.zscore_grading_wfh = 2 THEN 'moderate' WHEN gm.zscore_grading_wfh = 3 THEN 'normal' ELSE 'unknown' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.zscore_grading_wfh_last_recorded) != %(start_date)s    THEN 'unmeasured' WHEN gm.zscore_grading_wfh = 1 THEN 'severe' WHEN gm.zscore_grading_wfh = 2 THEN 'moderate' WHEN gm.zscore_grading_wfh = 3 THEN 'normal' ELSE 'unmeasured' END, gm.zscore_grading_hfa, CASE WHEN (date_trunc('MONTH', gm.zscore_grading_hfa_last_recorded) = %(start_date)s) THEN 1 ELSE 0 END, gm.zscore_grading_wfh, CASE WHEN (date_trunc('MONTH', gm.zscore_grading_wfh_last_recorded) = %(start_date)s) THEN 1 ELSE 0 END, gm.muac_grading, CASE WHEN (date_trunc('MONTH', gm.muac_grading_last_recorded) = %(start_date)s) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 8) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.comp_feeding_latest, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.diet_diversity, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.diet_quantity, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.hand_wash, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.demo_comp_feeding, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.counselled_pediatric_ifa, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.play_comp_feeding_vid, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 8) THEN COALESCE(cf.comp_feeding_ever, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 36) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 36) THEN COALESCE(thr.days_ration_given_child, 0) ELSE NULL END, thr.days_ration_given_child, 
                  CASE WHEN
                      date_trunc('MONTH', child_tasks.due_list_date_1g_dpt_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_dpt_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_dpt_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_dpt_booster) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_dpt_booster1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_7gdpt_booster_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_0g_hep_b_0) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_1g_hep_b_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_hep_b_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_hep_b_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_ipv) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_4g_je_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_je_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_measles_booster) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_4g_measles) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_1g_penta_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_penta_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_penta_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_1g_rv_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_rv_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_rv_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_4g_vit_a_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_vit_a_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_4) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_5) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_6) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_7) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_8) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_7g_vit_a_9) = %(start_date)s
                  THEN 1 ELSE NULL END
            , child_health.mother_phone_number, child_health.date_death, child_health.mother_case_id, child_health.state_id
            FROM "ucr_icds-cas_static-child_health_cases_a46c129f" child_health
            LEFT OUTER JOIN "ucr_icds-cas_static-child_tasks_cases_3548e54b" child_tasks ON
              child_health.doc_id = child_tasks.child_health_case_id
              AND child_health.state_id = child_tasks.state_id
              AND child_health.supervisor_id = child_tasks.supervisor_id
            LEFT OUTER JOIN "ucr_icds-cas_static-person_cases_v3_2ae0879a" person_cases ON child_health.mother_id = person_cases.doc_id
              AND child_health.state_id = person_cases.state_id
              AND child_health.supervisor_id = person_cases.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_comp_feed_form" cf ON child_health.doc_id = cf.case_id AND cf.month = %(start_date)s
              AND child_health.state_id = cf.state_id
              AND child_health.supervisor_id = cf.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_child_health_thr_forms" thr ON child_health.doc_id = thr.case_id
              AND thr.month = %(start_date)s
              AND child_health.state_id = thr.state_id
              AND child_health.supervisor_id = thr.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_growth_monitoring_forms" gm ON child_health.doc_id = gm.case_id
              AND gm.month = %(start_date)s
              AND child_health.state_id = gm.state_id
              AND child_health.supervisor_id = gm.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_child_health_postnatal_forms" pnc ON child_health.doc_id = pnc.case_id
              AND pnc.month = %(start_date)s
              AND child_health.state_id = pnc.state_id
              AND child_health.supervisor_id = pnc.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_daily_feeding_forms" df ON child_health.doc_id = df.case_id
              AND df.month = %(start_date)s
              AND child_health.state_id = df.state_id
              AND child_health.supervisor_id = df.supervisor_id
            WHERE child_health.doc_id IS NOT NULL
              AND child_health.state_id = %(state_id)s
              AND (('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0)
            ORDER BY child_health.supervisor_id, child_health.awc_id
        )
        
{"next_month": "2019-02-01", "start_date": "2019-01-01T00:00:00", "state_id": "st1"}

        INSERT INTO "tmp_child_health_monthly_2019-01-01_st2" (
            awc_id, case_id, supervisor_id, month, sex, age_tranche, caste, disabled, minority, resident, dob, age_in_months, open_in_month, alive_in_month, born_in_month, bf_at_birth_born_in_month, low_birth_weight_born_in_month, fully_immunized_eligible, fully_immunized_on_time, fully_immunized_late, has_aadhar_id, valid_in_month, valid_all_registered_in_month, person_name, mother_name, pse_eligible, pse_days_attended, lunch_count, ebf_eligible, ebf_in_month, ebf_not_breastfeeding_reason, ebf_drinking_liquid, ebf_eating, ebf_no_bf_no_milk, ebf_no_bf_pregnant_again, ebf_no_bf_child_too_old, ebf_no_bf_mother_sick, counsel_adequate_bf, ebf_no_info_recorded, counsel_ebf, pnc_eligible, counsel_increase_food_bf, counsel_manage_breast_problems, counsel_skin_to_skin, wer_eligible, nutrition_status_last_recorded, current_month_nutrition_status, nutrition_status_weighed, recorded_weight, recorded_height, height_measured_in_month, current_month_stunting, stunting_last_recorded, wasting_last_recorded, current_month_wasting, zscore_grading_hfa, zscore_grading_hfa_recorded_in_month, zscore_grading_wfh, zscore_grading_wfh_recorded_in_month, muac_grading, muac_grading_recorded_in_month, cf_eligible, cf_initiation_eligible, cf_in_month, cf_diet_diversity, cf_diet_quantity, cf_handwashing, cf_demo, counsel_pediatric_ifa, counsel_comp_feeding_vid, cf_initiation_in_month, thr_eligible, num_rations_distributed, days_ration_given_child, immunization_in_month, mother_phone_number, date_death, mother_case_id, state_id
        ) (SELECT
            child_health.awc_id, child_health.doc_id, child_health.supervisor_id, '2019-01-01', child_health.sex, CASE WHEN ('2019-01-31'::date - person_cases.dob)::integer <= 28 THEN 0      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6 THEN 6      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 12 THEN 12      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24 THEN 24      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 36 THEN 36      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 48 THEN 48      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60 THEN 60      WHEN (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72 THEN 72 ELSE NULL END, child_health.caste, child_health.disabled, child_health.minority, child_health.resident, person_cases.dob, trunc((('2019-01-31'::date - person_cases.dob)::integer / 30.4 )), CASE WHEN (('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) THEN 1 ELSE 0 END, CASE WHEN (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) THEN 1 ELSE 0 END, CASE WHEN ((child_health.is_availing = 1 AND child_health.is_migrated = 0) AND person_cases.dob BETWEEN '2019-01-01'::date AND '2019-01-31'::date) THEN 1 ELSE 0 END, CASE WHEN ((child_health.is_availing = 1 AND child_health.is_migrated = 0) AND person_cases.dob BETWEEN '2019-01-01'::date AND '2019-01-31'::date) AND child_health.bf_at_birth = 'yes' THEN 1 ELSE 0 END, CASE WHEN ((child_health.is_availing = 1 AND child_health.is_migrated = 0) AND person_cases.dob BETWEEN '2019-01-01'::date AND '2019-01-31'::date) AND child_health.lbw_open_count = 1 THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) > 12) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) > 12) AND (child_tasks.immun_one_year_date - person_cases.dob) <= 365 AND (child_tasks.immun_one_year_date < '2019-01-31'::date) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) > 12) AND (child_tasks.immun_one_year_date - person_cases.dob) > 365 AND (child_tasks.immun_one_year_date < '2019-01-31'::date) THEN 1 ELSE 0 END, CASE WHEN person_cases.aadhar_date < '2019-01-31'::date THEN  1 ELSE 0 END, CASE WHEN ((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) THEN 1 ELSE 0 END, CASE WHEN (('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72 AND child_health.is_migrated = 0 THEN 1 ELSE 0 END, child_health.person_name, child_health.mother_name, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 36) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 36) THEN COALESCE(df.sum_attended_child_ids, 0) ELSE NULL END, COALESCE(df.lunch_count, 0), CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN COALESCE(pnc.is_ebf, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN pnc.not_breastfeeding ELSE NULL END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN GREATEST(pnc.water_or_milk, pnc.other_milk_to_child, pnc.tea_other, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN COALESCE(pnc.eating, 0) ELSE 0 END, 0, 0, 0, 0, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN COALESCE(pnc.counsel_adequate_bf, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) AND date_trunc('MONTH', pnc.latest_time_end_processed) = %(start_date)s THEN 0 ELSE (CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN 1 ELSE 0 END) END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 6) THEN GREATEST(pnc.counsel_exclusive_bf, pnc.counsel_only_milk, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN COALESCE(pnc.counsel_increase_food_bf, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN COALESCE(pnc.counsel_breast, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND '2019-01-31'::date - person_cases.dob > 0 AND '2019-01-01'::date - person_cases.dob <= 20) THEN COALESCE(pnc.skin_to_skin, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN 1 ELSE 0 END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN gm.zscore_grading_wfa = 1 THEN 'severely_underweight' WHEN gm.zscore_grading_wfa = 2 THEN 'moderately_underweight' WHEN gm.zscore_grading_wfa IN (3, 4) THEN 'normal' ELSE 'unknown' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.zscore_grading_wfa_last_recorded) != %(start_date)s THEN 'unweighed' WHEN gm.zscore_grading_wfa = 1 THEN 'severely_underweight' WHEN gm.zscore_grading_wfa = 2 THEN 'moderately_underweight' WHEN gm.zscore_grading_wfa IN (3, 4) THEN 'normal' ELSE 'unweighed' END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) AND date_trunc('MONTH', gm.zscore_grading_wfa_last_recorded) = %(start_date)s THEN 1 ELSE 0 END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.weight_child_last_recorded) = %(start_date)s THEN gm.weight_child ELSE NULL END, CASE WHEN date_trunc('MONTH', gm.height_child_last_recorded) = %(start_date)s THEN gm.height_child ELSE NULL END, CASE WHEN date_trunc('MONTH', gm.height_child_last_recorded) = %(start_date)s AND (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN 1 ELSE 0 END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.zscore_grading_hfa_last_recorded) != %(start_date)s    THEN 'unmeasured' WHEN gm.zscore_grading_hfa = 1 THEN 'severe' WHEN gm.zscore_grading_hfa = 2 THEN 'moderate' WHEN gm.zscore_grading_hfa = 3 THEN 'normal' ELSE 'unmeasured' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN gm.zscore_grading_hfa = 1 THEN 'severe' WHEN gm.zscore_grading_hfa = 2 THEN 'moderate' WHEN gm.zscore_grading_hfa = 3 THEN 'normal' ELSE 'unknown' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN gm.zscore_grading_wfh = 1 THEN 'severe' WHEN gm.zscore_grading_wfh = 2 THEN 'moderate' WHEN gm.zscore_grading_wfh = 3 THEN 'normal' ELSE 'unknown' END, CASE WHEN NOT (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 60) THEN NULL WHEN date_trunc('MONTH', gm.zscore_grading_wfh_last_recorded) != %(start_date)s    THEN 'unmeasured' WHEN gm.zscore_grading_wfh = 1 THEN 'severe' WHEN gm.zscore_grading_wfh = 2 THEN 'moderate' WHEN gm.zscore_grading_wfh = 3 THEN 'normal' ELSE 'unmeasured' END, gm.zscore_grading_hfa, CASE WHEN (date_trunc('MONTH', gm.zscore_grading_hfa_last_recorded) = %(start_date)s) THEN 1 ELSE 0 END, gm.zscore_grading_wfh, CASE WHEN (date_trunc('MONTH', gm.zscore_grading_wfh_last_recorded) = %(start_date)s) THEN 1 ELSE 0 END, gm.muac_grading, CASE WHEN (date_trunc('MONTH', gm.muac_grading_last_recorded) = %(start_date)s) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 8) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.comp_feeding_latest, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.diet_diversity, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.diet_quantity, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.hand_wash, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.demo_comp_feeding, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.counselled_pediatric_ifa, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 24) THEN COALESCE(cf.play_comp_feeding_vid, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 8) THEN COALESCE(cf.comp_feeding_ever, 0) ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 36) THEN 1 ELSE 0 END, CASE WHEN (((('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0) AND (child_health.date_death IS NULL OR child_health.date_death - '2019-01-01'::date >= 0) AND (child_health.is_availing = 1 AND child_health.is_migrated = 0) AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 72) AND (('2019-01-31'::date - person_cases.dob)::integer / 30.4 ) > 6 AND (('2019-01-01'::date - person_cases.dob) / 30.4 ) <= 36) THEN COALESCE(thr.days_ration_given_child, 0) ELSE NULL END, thr.days_ration_given_child, 
                  CASE WHEN
                      date_trunc('MONTH', child_tasks.due_list_date_1g_dpt_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_dpt_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_dpt_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_dpt_booster) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_dpt_booster1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_7gdpt_booster_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_0g_hep_b_0) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_1g_hep_b_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_hep_b_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_hep_b_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_ipv) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_4g_je_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_je_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_measles_booster) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_4g_measles) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_1g_penta_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_penta_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_penta_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_1g_rv_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_2g_rv_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_3g_rv_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_4g_vit_a_1) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_5g_vit_a_2) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_3) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_4) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_5) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_6) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_7) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_6g_vit_a_8) = %(start_date)s OR
                      date_trunc('MONTH', child_tasks.due_list_date_7g_vit_a_9) = %(start_date)s
                  THEN 1 ELSE NULL END
            , child_health.mother_phone_number, child_health.date_death, child_health.mother_case_id, child_health.state_id
            FROM "ucr_icds-cas_static-child_health_cases_a46c129f" child_health
            LEFT OUTER JOIN "ucr_icds-cas_static-child_tasks_cases_3548e54b" child_tasks ON
              child_health.doc_id = child_tasks.child_health_case_id
              AND child_health.state_id = child_tasks.state_id
              AND child_health.supervisor_id = child_tasks.supervisor_id
            LEFT OUTER JOIN "ucr_icds-cas_static-person_cases_v3_2ae0879a" person_cases ON child_health.mother_id = person_cases.doc_id
              AND child_health.state_id = person_cases.state_id
              AND child_health.supervisor_id = person_cases.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_comp_feed_form" cf ON child_health.doc_id = cf.case_id AND cf.month = %(start_date)s
              AND child_health.state_id = cf.state_id
              AND child_health.supervisor_id = cf.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_child_health_thr_forms" thr ON child_health.doc_id = thr.case_id
              AND thr.month = %(start_date)s
              AND child_health.state_id = thr.state_id
              AND child_health.supervisor_id = thr.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_growth_monitoring_forms" gm ON child_health.doc_id = gm.case_id
              AND gm.month = %(start_date)s
              AND child_health.state_id = gm.state_id
              AND child_health.supervisor_id = gm.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_child_health_postnatal_forms" pnc ON child_health.doc_id = pnc.case_id
              AND pnc.month = %(start_date)s
              AND child_health.state_id = pnc.state_id
              AND child_health.supervisor_id = pnc.supervisor_id
            LEFT OUTER JOIN "icds_dashboard_daily_feeding_forms" df ON child_health.doc_id = df.case_id
              AND df.month = %(start_date)s
              AND child_health.state_id = df.state_id
              AND child_health.supervisor_id = df.supervisor_id
            WHERE child_health.doc_id IS NOT NULL
              AND child_health.state_id = %(state_id)s
              AND (('2019-01-31'::date - child_health.opened_on::date)::integer >= 0) AND (child_health.closed = 0 OR (child_health.closed_on::date - '2019-01-01'::date)::integer > 0)
            ORDER BY child_health.supervisor_id, child_health.awc_id
        )
        
{"next_month": "2019-02-01", "start_date": "2019-01-01T00:00:00", "state_id": "st2"}
DELETE FROM "child_health_monthly" WHERE month=%(month)s
{"month": "2019-01-01T00:00:00"}
INSERT INTO "child_health_monthly" (SELECT * FROM "tmp_child_health_monthly_2019-01-01")
{}
CREATE INDEX IF NOT EXISTS chm_case_idx ON "child_health_monthly" (case_id)
{}
CREATE INDEX IF NOT EXISTS chm_awc_idx ON "child_health_monthly" (awc_id)
{}
CREATE INDEX IF NOT EXISTS chm_mother_dob ON "child_health_monthly" (mother_case_id, dob)
{}
CREATE INDEX IF NOT EXISTS chm_month_supervisor_id ON "child_health_monthly" (month, supervisor_id)
{}