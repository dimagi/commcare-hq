# Generated by Django 1.11.20 on 2019-04-03 14:17

import uuid

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.db.migrations.operations.special
from django.db import migrations, models

from architect.commands import partition

from corehq.sql_db.operations import RawSQLMigration
from custom.icds_reports.utils.migrations import (
    get_composite_primary_key_migrations,
)

migrator = RawSQLMigration(('custom', 'icds_reports', 'migrations', 'sql_templates'))


def add_partitions(apps, schema_editor):
    partition.run({'module': 'custom.icds_reports.models.util'})


class Migration(migrations.Migration):

    replaces = [('icds_reports', '0001_initial'), ('icds_reports', '0002_fix_functions'), ('icds_reports', '0003_auto_20161208_2204'), ('icds_reports', '0004_fix_agg_awc'), ('icds_reports', '0005_add_columns'), ('icds_reports', '0006_fix_functions'), ('icds_reports', '0007_20170128'), ('icds_reports', '0007_20170215'), ('icds_reports', '0008_update_functions'), ('icds_reports', '0009_add_new_indicators'), ('icds_reports', '0010_change_active_definition'), ('icds_reports', '0011_add_trained_indicators'), ('icds_reports', '0012_extend_monthly_case_tables'), ('icds_reports', '0013_change_training_indicator'), ('icds_reports', '0014_add_datasource_views'), ('icds_reports', '0015_add_aggregation_level'), ('icds_reports', '0016_aggawcmonthly_aggccsrecordmonthly_aggchildhealthmonthly_aggdailyusageview_aggthrmonthly_awclocation_'), ('icds_reports', '0017_add_v2_indicators'), ('icds_reports', '0018_partition_on_aggregation'), ('icds_reports', '0019_add_location_indexes'), ('icds_reports', '0020_combine_person_query'), ('icds_reports', '0021_remove_categories'), ('icds_reports', '0022_fix_aggregation'), ('icds_reports', '0023_fix_view'), ('icds_reports', '0024_fix_aadhaar_beneficiary_indicator'), ('icds_reports', '0025_add_fully_immunized_to_view'), ('icds_reports', '0026_add_map_location_name'), ('icds_reports', '0027_add_location_ids_to_child_health_view'), ('icds_reports', '0028_auto_20171204_1922'), ('icds_reports', '0029_add_add_and_dob_to_intermediate_tables'), ('icds_reports', '0030_auto_20171128_0042'), ('icds_reports', '0031_agg_child_health_definitions'), ('icds_reports', '0032_create_datasource_views'), ('icds_reports', '0033_add_new_aadhaar_indicators'), ('icds_reports', '0034_aggregatecomplementaryfeedingforms'), ('icds_reports', '0035_add_pnc_aggregate_models'), ('icds_reports', '0035_auto_20180317_0645'), ('icds_reports', '0036_allow_null_for_pnc_tables'), ('icds_reports', '0037_add_new_infra_data'), ('icds_reports', '0038_new_issnip_indicators'), ('icds_reports', '0039_add_agg_thr_forms_table'), ('icds_reports', '0040_add_days_ration_column'), ('icds_reports', '0041_added_num_anc_visits_to_agg_awc_montlhy_view'), ('icds_reports', '0042_child_health_monthly_view'), ('icds_reports', '0042_aggregategrowthmonitoringforms'), ('icds_reports', '0043_merge_20180424_1426'), ('icds_reports', '0044_add_muac_grading'), ('icds_reports', '0045_add_new_wasting_stunting_to_chm'), ('icds_reports', '0046_aggregatesqlprofile'), ('icds_reports', '0047_added_new_wasting_and_stunting_columns_to_views'), ('icds_reports', '0048_added_person_name_and_mother_name_to_chm'), ('icds_reports', '0049_icdsauditentryrecord'), ('icds_reports', '0050_move_to_django'), ('icds_reports', '0051_added_zscore_grading_wfh_hfa_rec_in_month_to_agg_child_health'), ('icds_reports', '0052_inactiveawws_icdsfile'), ('icds_reports', '0053_aggregatechildhealthdailyfeedingforms'), ('icds_reports', '0054_aggregateawcinfrastructureforms'), ('icds_reports', '0054_add_pse_conducted_to_daily'), ('icds_reports', '0055_merge_20180719_1927'), ('icds_reports', '0056_agg_tables_back_in_django'), ('icds_reports', '0057_aggregateccsrecordpostnatalcareforms_is_ebf'), ('icds_reports', '0058_new_agg_ccs_columns'), ('icds_reports', '0059_update_blob_paths'), ('icds_reports', '0060_disha_indicators'), ('icds_reports', '0061_added_phone_number_to_views'), ('icds_reports', '0062_disha_indicators_create_view'), ('icds_reports', '0063_aggregatebirthpreparednesforms_anc_abnormalities'), ('icds_reports', '0064_aggregateccsrecordmontly_home_visit_date'), ('icds_reports', '0065_ccsrecordmonthlyview'), ('icds_reports', '0066_aggregatesqlprofile_last_included_doc_time'), ('icds_reports', '0067_ccsrecordmonthly_dob'), ('icds_reports', '0068_ccsrecordmonthlyview_add_lactating'), ('icds_reports', '0069_valid_visits'), ('icds_reports', '0070_aww_name_in_agg_ccs_view'), ('icds_reports', '0071_visits_not_vists'), ('icds_reports', '0071_disha_indicators_modify_view'), ('icds_reports', '0072_merge_20181029_1425'), ('icds_reports', '0073_ccsrecordmonthly_closed'), ('icds_reports', '0074_expected_decimal'), ('icds_reports', '0075_drop_agg_funcs'), ('icds_reports', '0076_awc_locations_test_columns'), ('icds_reports', '0077_drop_agg_funcs'), ('icds_reports', '0078_add_phone_number_to_child_health_monthly'), ('icds_reports', '0079_aggls_aggregatebeneficiaryform_aggregatelsawcvisitform_aggregatelsvhndform'), ('icds_reports', '0078_added_is_test_property'), ('icds_reports', '0080_merge_20181130_1818'), ('icds_reports', '0081_auto_20181204_1213'), ('icds_reports', '0082_ccs_record_monthly_closed'), ('icds_reports', '0083_ccs_record_monthly_pregnant_all'), ('icds_reports', '0084_anc_abnormalities'), ('icds_reports', '0085_disha_level_change'), ('icds_reports', '0086_disha_aggregate'), ('icds_reports', '0087_death_dates'), ('icds_reports', '0088_child_name'), ('icds_reports', '0089_death_date_in_css_record_monthly_view'), ('icds_reports', '0090_auto_20190205_0442'), ('icds_reports', '0091_lunch'), ('icds_reports', '0092_auto_20190129_0610'), ('icds_reports', '0093_pse_days_21'), ('icds_reports', '0094_cbe_vhnd_columns'), ('icds_reports', '0095_institutional_delivery_ccs_record_monthly'), ('icds_reports', '0096_valid_visits'), ('icds_reports', '0097_awwincentivereport_district_id'), ('icds_reports', '0098_drop_legacy_tables'), ('icds_reports', '0099_service_delivery_report'), ('icds_reports', '0100_add_supervisor_id'), ('icds_reports', '0101_add_supervisor_id'), ('icds_reports', '0102_drop_update_aggregate_awc_data'), ('icds_reports', '0103_aggregateccsrecordcomplementaryfeedingforms_supervisor_id'), ('icds_reports', '0104_agg_ls_monthly_ls_name'), ('icds_reports', '0105_aww_incentive_report_monthly'), ('icds_reports', '0106_left_join_service_delivery'), ('icds_reports', '0107_citus_composite_key'), ('icds_reports', '0108_child_cases_ccs_record_supervisor_id'), ('icds_reports', '0109_remove_ls_name_column'), ('icds_reports', '0110_aww_incentive_report_monthly')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrator.get_migration('setup.sql'),
        migrations.CreateModel(
            name='AggAwcMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('is_launched', models.TextField(blank=True, null=True)),
                ('num_awcs', models.IntegerField(blank=True, null=True)),
                ('awc_days_open', models.IntegerField(blank=True, null=True)),
                ('total_eligible_children', models.IntegerField(blank=True, null=True)),
                ('total_attended_children', models.IntegerField(blank=True, null=True)),
                ('pse_avg_attendance_percent', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('pse_full', models.IntegerField(blank=True, null=True)),
                ('pse_partial', models.IntegerField(blank=True, null=True)),
                ('pse_non', models.IntegerField(blank=True, null=True)),
                ('pse_score', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('awc_days_provided_breakfast', models.IntegerField(blank=True, null=True)),
                ('awc_days_provided_hotmeal', models.IntegerField(blank=True, null=True)),
                ('awc_days_provided_thr', models.IntegerField(blank=True, null=True)),
                ('awc_days_provided_pse', models.IntegerField(blank=True, null=True)),
                ('awc_not_open_holiday', models.IntegerField(blank=True, null=True)),
                ('awc_not_open_festival', models.IntegerField(blank=True, null=True)),
                ('awc_not_open_no_help', models.IntegerField(blank=True, null=True)),
                ('awc_not_open_department_work', models.IntegerField(blank=True, null=True)),
                ('awc_not_open_other', models.IntegerField(blank=True, null=True)),
                ('awc_num_open', models.IntegerField(blank=True, null=True)),
                ('awc_not_open_no_data', models.IntegerField(blank=True, null=True)),
                ('wer_weighed', models.IntegerField(blank=True, null=True)),
                ('wer_eligible', models.IntegerField(blank=True, null=True)),
                ('wer_score', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('thr_eligible_child', models.IntegerField(blank=True, null=True)),
                ('thr_rations_21_plus_distributed_child', models.IntegerField(blank=True, null=True)),
                ('thr_eligible_ccs', models.IntegerField(blank=True, null=True)),
                ('thr_rations_21_plus_distributed_ccs', models.IntegerField(blank=True, null=True)),
                ('thr_score', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('awc_score', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('num_awc_rank_functional', models.IntegerField(blank=True, null=True)),
                ('num_awc_rank_semi', models.IntegerField(blank=True, null=True)),
                ('num_awc_rank_non', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_pregnant', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_lactating', models.IntegerField(blank=True, null=True)),
                ('cases_child_health', models.IntegerField(blank=True, null=True)),
                ('usage_num_pse', models.IntegerField(blank=True, null=True)),
                ('usage_num_gmp', models.IntegerField(blank=True, null=True)),
                ('usage_num_thr', models.IntegerField(blank=True, null=True)),
                ('usage_num_home_visit', models.IntegerField(blank=True, null=True)),
                ('usage_num_bp_tri1', models.IntegerField(blank=True, null=True)),
                ('usage_num_bp_tri2', models.IntegerField(blank=True, null=True)),
                ('usage_num_bp_tri3', models.IntegerField(blank=True, null=True)),
                ('usage_num_pnc', models.IntegerField(blank=True, null=True)),
                ('usage_num_ebf', models.IntegerField(blank=True, null=True)),
                ('usage_num_cf', models.IntegerField(blank=True, null=True)),
                ('usage_num_delivery', models.IntegerField(blank=True, null=True)),
                ('usage_num_due_list_ccs', models.IntegerField(blank=True, null=True)),
                ('usage_num_due_list_child_health', models.IntegerField(blank=True, null=True)),
                ('usage_awc_num_active', models.IntegerField(blank=True, null=True)),
                ('usage_time_pse', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('usage_time_gmp', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('usage_time_bp', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('usage_time_pnc', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('usage_time_ebf', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('usage_time_cf', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('usage_time_of_day_pse', models.TimeField(blank=True, null=True)),
                ('usage_time_of_day_home_visit', models.TimeField(blank=True, null=True)),
                ('vhnd_immunization', models.IntegerField(blank=True, null=True)),
                ('vhnd_anc', models.IntegerField(blank=True, null=True)),
                ('vhnd_gmp', models.IntegerField(blank=True, null=True)),
                ('vhnd_num_pregnancy', models.IntegerField(blank=True, null=True)),
                ('vhnd_num_lactating', models.IntegerField(blank=True, null=True)),
                ('vhnd_num_mothers_6_12', models.IntegerField(blank=True, null=True)),
                ('vhnd_num_mothers_12', models.IntegerField(blank=True, null=True)),
                ('vhnd_num_fathers', models.IntegerField(blank=True, null=True)),
                ('ls_supervision_visit', models.IntegerField(blank=True, null=True)),
                ('ls_num_supervised', models.IntegerField(blank=True, null=True)),
                ('ls_awc_location_long', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('ls_awc_location_lat', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('ls_awc_present', models.IntegerField(blank=True, null=True)),
                ('ls_awc_open', models.IntegerField(blank=True, null=True)),
                ('ls_awc_not_open_aww_not_available', models.IntegerField(blank=True, null=True)),
                ('ls_awc_not_open_closed_early', models.IntegerField(blank=True, null=True)),
                ('ls_awc_not_open_holiday', models.IntegerField(blank=True, null=True)),
                ('ls_awc_not_open_unknown', models.IntegerField(blank=True, null=True)),
                ('ls_awc_not_open_other', models.IntegerField(blank=True, null=True)),
                ('infra_last_update_date', models.DateField(blank=True, null=True)),
                ('infra_type_of_building', models.TextField(blank=True, null=True)),
                ('infra_type_of_building_pucca', models.IntegerField(blank=True, null=True)),
                ('infra_type_of_building_semi_pucca', models.IntegerField(blank=True, null=True)),
                ('infra_type_of_building_kuccha', models.IntegerField(blank=True, null=True)),
                ('infra_type_of_building_partial_covered_space', models.IntegerField(blank=True, null=True)),
                ('infra_clean_water', models.IntegerField(blank=True, null=True)),
                ('infra_functional_toilet', models.IntegerField(blank=True, null=True)),
                ('infra_baby_weighing_scale', models.IntegerField(blank=True, null=True)),
                ('infra_flat_weighing_scale', models.IntegerField(blank=True, null=True)),
                ('infra_adult_weighing_scale', models.IntegerField(blank=True, null=True)),
                ('infra_cooking_utensils', models.IntegerField(blank=True, null=True)),
                ('infra_medicine_kits', models.IntegerField(blank=True, null=True)),
                ('infra_adequate_space_pse', models.IntegerField(blank=True, null=True)),
                ('usage_num_hh_reg', models.IntegerField(blank=True, null=True)),
                ('usage_num_add_person', models.IntegerField(blank=True, null=True)),
                ('usage_num_add_pregnancy', models.IntegerField(blank=True, null=True)),
                ('training_phase', models.IntegerField(blank=True, null=True)),
                ('trained_phase_1', models.IntegerField(blank=True, null=True)),
                ('trained_phase_2', models.IntegerField(blank=True, null=True)),
                ('trained_phase_3', models.IntegerField(blank=True, null=True)),
                ('trained_phase_4', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agg_awc_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggCcsRecordMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('ccs_status', models.TextField(blank=True, null=True)),
                ('trimester', models.TextField(blank=True, null=True)),
                ('caste', models.TextField(blank=True, null=True)),
                ('disabled', models.TextField(blank=True, null=True)),
                ('minority', models.TextField(blank=True, null=True)),
                ('resident', models.TextField(blank=True, null=True)),
                ('valid_in_month', models.IntegerField(blank=True, null=True)),
                ('lactating', models.IntegerField(blank=True, null=True)),
                ('pregnant', models.IntegerField(blank=True, null=True)),
                ('thr_eligible', models.IntegerField(blank=True, null=True)),
                ('rations_21_plus_distributed', models.IntegerField(blank=True, null=True)),
                ('tetanus_complete', models.IntegerField(blank=True, null=True)),
                ('delivered_in_month', models.IntegerField(blank=True, null=True)),
                ('anc1_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('anc2_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('anc3_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('anc4_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('registration_trimester_at_delivery', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('using_ifa', models.IntegerField(blank=True, null=True)),
                ('ifa_consumed_last_seven_days', models.IntegerField(blank=True, null=True)),
                ('anemic_normal', models.IntegerField(blank=True, null=True)),
                ('anemic_moderate', models.IntegerField(blank=True, null=True)),
                ('anemic_severe', models.IntegerField(blank=True, null=True)),
                ('anemic_unknown', models.IntegerField(blank=True, null=True)),
                ('extra_meal', models.IntegerField(blank=True, null=True)),
                ('resting_during_pregnancy', models.IntegerField(blank=True, null=True)),
                ('bp1_complete', models.IntegerField(blank=True, null=True)),
                ('bp2_complete', models.IntegerField(blank=True, null=True)),
                ('bp3_complete', models.IntegerField(blank=True, null=True)),
                ('pnc_complete', models.IntegerField(blank=True, null=True)),
                ('trimester_2', models.IntegerField(blank=True, null=True)),
                ('trimester_3', models.IntegerField(blank=True, null=True)),
                ('postnatal', models.IntegerField(blank=True, null=True)),
                ('counsel_bp_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_preparation', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_fp_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_conception', models.IntegerField(blank=True, null=True)),
                ('counsel_accessible_postpartum_fp', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agg_ccs_record_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggChildHealthMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('month_display', models.TextField(blank=True, null=True)),
                ('gender', models.TextField(blank=True, null=True)),
                ('age_tranche', models.TextField(blank=True, null=True)),
                ('caste', models.TextField(blank=True, null=True)),
                ('disabled', models.TextField(blank=True, null=True)),
                ('minority', models.TextField(blank=True, null=True)),
                ('resident', models.TextField(blank=True, null=True)),
                ('valid_in_month', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_weighed', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_unweighed', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_normal', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_moderately_underweight', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_severely_underweight', models.IntegerField(blank=True, null=True)),
                ('wer_eligible', models.IntegerField(blank=True, null=True)),
                ('thr_eligible', models.IntegerField(blank=True, null=True)),
                ('rations_21_plus_distributed', models.IntegerField(blank=True, null=True)),
                ('pse_eligible', models.IntegerField(blank=True, null=True)),
                ('pse_attended_16_days', models.IntegerField(blank=True, null=True)),
                ('born_in_month', models.IntegerField(blank=True, null=True)),
                ('low_birth_weight_in_month', models.IntegerField(blank=True, null=True)),
                ('bf_at_birth', models.IntegerField(blank=True, null=True)),
                ('ebf_eligible', models.IntegerField(blank=True, null=True)),
                ('ebf_in_month', models.IntegerField(blank=True, null=True)),
                ('cf_eligible', models.IntegerField(blank=True, null=True)),
                ('cf_in_month', models.IntegerField(blank=True, null=True)),
                ('cf_diet_diversity', models.IntegerField(blank=True, null=True)),
                ('cf_diet_quantity', models.IntegerField(blank=True, null=True)),
                ('cf_demo', models.IntegerField(blank=True, null=True)),
                ('cf_handwashing', models.IntegerField(blank=True, null=True)),
                ('counsel_increase_food_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_manage_breast_problems', models.IntegerField(blank=True, null=True)),
                ('counsel_ebf', models.IntegerField(blank=True, null=True)),
                ('counsel_adequate_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_pediatric_ifa', models.IntegerField(blank=True, null=True)),
                ('counsel_play_cf_video', models.IntegerField(blank=True, null=True)),
                ('fully_immunized_eligible', models.IntegerField(blank=True, null=True)),
                ('fully_immunized_on_time', models.IntegerField(blank=True, null=True)),
                ('fully_immunized_late', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agg_child_health_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggDailyUsageView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('daily_attendance_open', models.IntegerField(blank=True, null=True)),
                ('usage_num_forms', models.IntegerField(blank=True, null=True)),
                ('usage_num_home_visit', models.IntegerField(blank=True, null=True)),
                ('usage_num_gmp', models.IntegerField(blank=True, null=True)),
                ('usage_num_thr', models.IntegerField(blank=True, null=True)),
                ('awc_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agg_daily_usage_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggThrMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('beneficiary_type', models.TextField(blank=True, null=True)),
                ('caste', models.TextField(blank=True, null=True)),
                ('disabled', models.TextField(blank=True, null=True)),
                ('minority', models.TextField(blank=True, null=True)),
                ('resident', models.TextField(blank=True, null=True)),
                ('thr_eligible', models.IntegerField(blank=True, null=True)),
                ('rations_21_plus_distributed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agg_thr_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AwcLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_id', models.TextField()),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField()),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField()),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField()),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField()),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'awc_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AwcLocationMonths',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('month_display', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'awc_location_months',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DailyAttendanceView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('doc_id', models.TextField(blank=True, null=True)),
                ('pse_date', models.DateField(blank=True, null=True)),
                ('awc_open_count', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('eligible_children', models.IntegerField(blank=True, null=True)),
                ('attended_children', models.IntegerField(blank=True, null=True)),
                ('attended_children_percent', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('form_location', models.TextField(blank=True, null=True)),
                ('form_location_lat', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('form_location_long', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('image_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'daily_attendance_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggregateComplementaryFeedingForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('comp_feeding_ever', models.PositiveSmallIntegerField(help_text='Complementary feeding has ever occurred for this case', null=True)),
                ('demo_comp_feeding', models.PositiveSmallIntegerField(help_text='Demo of complementary feeding has ever occurred', null=True)),
                ('counselled_pediatric_ifa', models.PositiveSmallIntegerField(help_text='Once the child is over 1 year, has ever been counseled on pediatric IFA', null=True)),
                ('play_comp_feeding_vid', models.PositiveSmallIntegerField(help_text='Case has ever been counseled about complementary feeding with a video', null=True)),
                ('comp_feeding_latest', models.PositiveSmallIntegerField(help_text='Complementary feeding occurred for this case in the latest form', null=True)),
                ('diet_diversity', models.PositiveSmallIntegerField(help_text='Diet diversity occurred for this case in the latest form', null=True)),
                ('diet_quantity', models.PositiveSmallIntegerField(help_text='Diet quantity occurred for this case in the latest form', null=True)),
                ('hand_wash', models.PositiveSmallIntegerField(help_text='Hand washing occurred for this case in the latest form', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_comp_feed_form',
            },
        ),
        migrations.CreateModel(
            name='AggregateCcsRecordPostnatalCareForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('counsel_methods', models.PositiveSmallIntegerField(help_text='Counseling about family planning methods has ever occurred')),
            ],
            options={
                'db_table': 'icds_dashboard_ccs_record_postnatal_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateChildHealthPostnatalCareForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('counsel_increase_food_bf', models.PositiveSmallIntegerField(help_text='Counseling on increasing food intake has ever been completed')),
                ('counsel_breast', models.PositiveSmallIntegerField(help_text='Counseling on managing breast problems has ever been completed')),
                ('skin_to_skin', models.PositiveSmallIntegerField(help_text='Counseling on skin to skin care has ever been completed')),
                ('is_ebf', models.PositiveSmallIntegerField(help_text='is_ebf set in the last form submitted this month')),
                ('water_or_milk', models.PositiveSmallIntegerField(help_text='Child given water or milk in the last form submitted this month')),
                ('other_milk_to_child', models.PositiveSmallIntegerField(help_text='Child given something other than milk in the last form submitted this month')),
                ('tea_other', models.PositiveSmallIntegerField(help_text='Child given tea or other liquid in the last form submitted this month')),
                ('eating', models.PositiveSmallIntegerField(help_text='Child given something to eat in the last form submitted this month')),
                ('counsel_exclusive_bf', models.PositiveSmallIntegerField(help_text='Counseling about exclusive breastfeeding has ever occurred')),
                ('counsel_only_milk', models.PositiveSmallIntegerField(help_text='Counseling about avoiding other than breast milk has ever occurred')),
                ('counsel_adequate_bf', models.PositiveSmallIntegerField(help_text='Counseling about adequate breastfeeding has ever occurred')),
                ('not_breastfeeding', models.CharField(help_text='The reason the mother is not able to breastfeed', max_length=126)),
            ],
            options={
                'db_table': 'icds_dashboard_child_health_postnatal_forms',
            },
        ),
        migrations.AlterField(
            model_name='aggregateccsrecordpostnatalcareforms',
            name='counsel_methods',
            field=models.PositiveSmallIntegerField(help_text='Counseling about family planning methods has ever occurred', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='counsel_adequate_bf',
            field=models.PositiveSmallIntegerField(help_text='Counseling about adequate breastfeeding has ever occurred', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='counsel_breast',
            field=models.PositiveSmallIntegerField(help_text='Counseling on managing breast problems has ever been completed', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='counsel_exclusive_bf',
            field=models.PositiveSmallIntegerField(help_text='Counseling about exclusive breastfeeding has ever occurred', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='counsel_increase_food_bf',
            field=models.PositiveSmallIntegerField(help_text='Counseling on increasing food intake has ever been completed', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='counsel_only_milk',
            field=models.PositiveSmallIntegerField(help_text='Counseling about avoiding other than breast milk has ever occurred', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='eating',
            field=models.PositiveSmallIntegerField(help_text='Child given something to eat in the last form submitted this month', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='is_ebf',
            field=models.PositiveSmallIntegerField(help_text='is_ebf set in the last form submitted this month', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='not_breastfeeding',
            field=models.CharField(help_text='The reason the mother is not able to breastfeed', max_length=126, null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='other_milk_to_child',
            field=models.PositiveSmallIntegerField(help_text='Child given something other than milk in the last form submitted this month', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='skin_to_skin',
            field=models.PositiveSmallIntegerField(help_text='Counseling on skin to skin care has ever been completed', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='tea_other',
            field=models.PositiveSmallIntegerField(help_text='Child given tea or other liquid in the last form submitted this month', null=True),
        ),
        migrations.AlterField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='water_or_milk',
            field=models.PositiveSmallIntegerField(help_text='Child given water or milk in the last form submitted this month', null=True),
        ),
        migrations.CreateModel(
            name='AggregateChildHealthTHRForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('days_ration_given_child', models.PositiveSmallIntegerField(help_text='Number of days the child has been given rations this month', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_child_health_thr_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateGrowthMonitoringForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('weight_child', models.DecimalField(decimal_places=16, help_text='Last recorded weight_child case property', max_digits=64, null=True)),
                ('weight_child_last_recorded', models.DateTimeField(help_text='Time when weight_child was last recorded', null=True)),
                ('height_child', models.DecimalField(decimal_places=16, help_text='Last recorded height_child case property', max_digits=64, null=True)),
                ('height_child_last_recorded', models.DateTimeField(help_text='Time when height_child was last recorded', null=True)),
                ('zscore_grading_wfa', models.PositiveSmallIntegerField(help_text='Last recorded zscore_grading_wfa before end of this month', null=True)),
                ('zscore_grading_wfa_last_recorded', models.DateTimeField(help_text='Time when zscore_grading_wfa was last recorded', null=True)),
                ('zscore_grading_hfa', models.PositiveSmallIntegerField(help_text='Last recorded zscore_grading_hfa before end of this month', null=True)),
                ('zscore_grading_hfa_last_recorded', models.DateTimeField(help_text='Time when zscore_grading_hfa was last recorded', null=True)),
                ('zscore_grading_wfh', models.PositiveSmallIntegerField(help_text='Last recorded zscore_grading_wfh before end of this month', null=True)),
                ('zscore_grading_wfh_last_recorded', models.DateTimeField(help_text='Time when zscore_grading_wfh was last recorded', null=True)),
                ('muac_grading', models.PositiveSmallIntegerField(help_text='Last recorded muac_grading before end of this month', null=True)),
                ('muac_grading_last_recorded', models.DateTimeField(help_text='Time when muac_grading was last recorded', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_growth_monitoring_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateSQLProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('date', models.DateField(auto_now=True)),
                ('duration', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UcrTableNameMapping',
            fields=[
                ('table_type', models.TextField(primary_key=True)),
                ('table_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ucr_table_name_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ICDSAuditEntryRecord',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, unique=True)),
                ('username', models.EmailField(db_index=True, max_length=254)),
                ('assigned_location_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), null=True, size=None)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('url', models.TextField()),
                ('post_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('get_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('session_key', models.CharField(max_length=32)),
                ('time_of_use', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'icds_audit_entry_record',
            },
        ),
        migrations.RunPython(
            code=add_partitions,
        ),
        migrations.CreateModel(
            name='AggAwc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_id', models.TextField()),
                ('district_id', models.TextField()),
                ('block_id', models.TextField()),
                ('supervisor_id', models.TextField()),
                ('awc_id', models.TextField()),
                ('month', models.DateField()),
                ('num_awcs', models.SmallIntegerField()),
                ('awc_days_open', models.SmallIntegerField(null=True)),
                ('total_eligible_children', models.SmallIntegerField(null=True)),
                ('total_attended_children', models.SmallIntegerField(null=True)),
                ('pse_avg_attendance_percent', models.DecimalField(decimal_places=20, max_digits=64, null=True)),
                ('pse_full', models.IntegerField(null=True)),
                ('pse_partial', models.IntegerField(null=True)),
                ('pse_non', models.IntegerField(null=True)),
                ('pse_score', models.DecimalField(decimal_places=20, max_digits=64, null=True)),
                ('awc_days_provided_breakfast', models.IntegerField(null=True)),
                ('awc_days_provided_hotmeal', models.IntegerField(null=True)),
                ('awc_days_provided_thr', models.IntegerField(null=True)),
                ('awc_days_provided_pse', models.IntegerField(null=True)),
                ('awc_not_open_holiday', models.IntegerField(null=True)),
                ('awc_not_open_festival', models.IntegerField(null=True)),
                ('awc_not_open_no_help', models.IntegerField(null=True)),
                ('awc_not_open_department_work', models.IntegerField(null=True)),
                ('awc_not_open_other', models.IntegerField(null=True)),
                ('awc_num_open', models.IntegerField(null=True)),
                ('awc_not_open_no_data', models.IntegerField(null=True)),
                ('wer_weighed', models.IntegerField(null=True)),
                ('wer_eligible', models.IntegerField(null=True)),
                ('wer_score', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('thr_eligible_child', models.IntegerField(null=True)),
                ('thr_rations_21_plus_distributed_child', models.IntegerField(null=True)),
                ('thr_eligible_ccs', models.IntegerField(null=True)),
                ('thr_rations_21_plus_distributed_ccs', models.IntegerField(null=True)),
                ('thr_score', models.DecimalField(decimal_places=20, max_digits=64, null=True)),
                ('awc_score', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('num_awc_rank_functional', models.IntegerField(null=True)),
                ('num_awc_rank_semi', models.IntegerField(null=True)),
                ('num_awc_rank_non', models.IntegerField(null=True)),
                ('cases_ccs_pregnant', models.IntegerField(null=True)),
                ('cases_ccs_lactating', models.IntegerField(null=True)),
                ('cases_child_health', models.IntegerField(null=True)),
                ('usage_num_pse', models.IntegerField(null=True)),
                ('usage_num_gmp', models.IntegerField(null=True)),
                ('usage_num_thr', models.IntegerField(null=True)),
                ('usage_num_home_visit', models.IntegerField(null=True)),
                ('usage_num_bp_tri1', models.IntegerField(null=True)),
                ('usage_num_bp_tri2', models.IntegerField(null=True)),
                ('usage_num_bp_tri3', models.IntegerField(null=True)),
                ('usage_num_pnc', models.IntegerField(null=True)),
                ('usage_num_ebf', models.IntegerField(null=True)),
                ('usage_num_cf', models.IntegerField(null=True)),
                ('usage_num_delivery', models.IntegerField(null=True)),
                ('usage_num_due_list_ccs', models.IntegerField(null=True)),
                ('usage_num_due_list_child_health', models.IntegerField(null=True)),
                ('usage_awc_num_active', models.IntegerField(null=True)),
                ('usage_time_pse', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('usage_time_gmp', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('usage_time_bp', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('usage_time_pnc', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('usage_time_ebf', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('usage_time_cf', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('usage_time_of_day_pse', models.TimeField(null=True)),
                ('usage_time_of_day_home_visit', models.TimeField(null=True)),
                ('vhnd_immunization', models.IntegerField(null=True)),
                ('vhnd_anc', models.IntegerField(null=True)),
                ('vhnd_gmp', models.IntegerField(null=True)),
                ('vhnd_num_pregnancy', models.IntegerField(null=True)),
                ('vhnd_num_lactating', models.IntegerField(null=True)),
                ('vhnd_num_mothers_6_12', models.IntegerField(null=True)),
                ('vhnd_num_mothers_12', models.IntegerField(null=True)),
                ('vhnd_num_fathers', models.IntegerField(null=True)),
                ('ls_supervision_visit', models.IntegerField(null=True)),
                ('ls_num_supervised', models.IntegerField(null=True)),
                ('ls_awc_location_long', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('ls_awc_location_lat', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('ls_awc_present', models.IntegerField(null=True)),
                ('ls_awc_open', models.IntegerField(null=True)),
                ('ls_awc_not_open_aww_not_available', models.IntegerField(null=True)),
                ('ls_awc_not_open_closed_early', models.IntegerField(null=True)),
                ('ls_awc_not_open_holiday', models.IntegerField(null=True)),
                ('ls_awc_not_open_unknown', models.IntegerField(null=True)),
                ('ls_awc_not_open_other', models.IntegerField(null=True)),
                ('infra_last_update_date', models.DateField(null=True)),
                ('infra_type_of_building', models.TextField(null=True)),
                ('infra_type_of_building_pucca', models.IntegerField(null=True)),
                ('infra_type_of_building_semi_pucca', models.IntegerField(null=True)),
                ('infra_type_of_building_kuccha', models.IntegerField(null=True)),
                ('infra_type_of_building_partial_covered_space', models.IntegerField(null=True)),
                ('infra_clean_water', models.IntegerField(null=True)),
                ('infra_functional_toilet', models.IntegerField(null=True)),
                ('infra_baby_weighing_scale', models.IntegerField(null=True)),
                ('infra_flat_weighing_scale', models.IntegerField(null=True)),
                ('infra_adult_weighing_scale', models.IntegerField(null=True)),
                ('infra_cooking_utensils', models.IntegerField(null=True)),
                ('infra_medicine_kits', models.IntegerField(null=True)),
                ('infra_adequate_space_pse', models.IntegerField(null=True)),
                ('cases_person_beneficiary', models.IntegerField(null=True)),
                ('cases_person_referred', models.IntegerField(null=True)),
                ('awc_days_pse_conducted', models.IntegerField(null=True)),
                ('num_awc_infra_last_update', models.IntegerField(null=True)),
                ('cases_person_has_aadhaar_v2', models.IntegerField(null=True)),
                ('cases_person_beneficiary_v2', models.IntegerField(null=True)),
                ('electricity_awc', models.IntegerField(null=True)),
                ('infantometer', models.IntegerField(null=True)),
                ('stadiometer', models.IntegerField(null=True)),
                ('num_anc_visits', models.IntegerField(null=True)),
                ('num_children_immunized', models.IntegerField(null=True)),
                ('usage_num_hh_reg', models.IntegerField(null=True)),
                ('usage_num_add_person', models.IntegerField(null=True)),
                ('usage_num_add_pregnancy', models.IntegerField(null=True)),
                ('is_launched', models.TextField(null=True)),
                ('training_phase', models.IntegerField(null=True)),
                ('trained_phase_1', models.IntegerField(null=True)),
                ('trained_phase_2', models.IntegerField(null=True)),
                ('trained_phase_3', models.IntegerField(null=True)),
                ('trained_phase_4', models.IntegerField(null=True)),
                ('aggregation_level', models.IntegerField(null=True)),
                ('num_launched_states', models.IntegerField(null=True)),
                ('num_launched_districts', models.IntegerField(null=True)),
                ('num_launched_blocks', models.IntegerField(null=True)),
                ('num_launched_supervisors', models.IntegerField(null=True)),
                ('num_launched_awcs', models.IntegerField(null=True)),
                ('cases_household', models.IntegerField(null=True)),
                ('cases_person', models.IntegerField(null=True)),
                ('cases_person_all', models.IntegerField(null=True)),
                ('cases_person_has_aadhaar', models.IntegerField(null=True)),
                ('cases_ccs_pregnant_all', models.IntegerField(null=True)),
                ('cases_ccs_lactating_all', models.IntegerField(null=True)),
                ('cases_child_health_all', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_11_14', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_15_18', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_11_14_all', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_15_18_all', models.IntegerField(null=True)),
                ('infra_infant_weighing_scale', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'agg_awc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggAwcDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_id', models.TextField()),
                ('district_id', models.TextField()),
                ('block_id', models.TextField()),
                ('supervisor_id', models.TextField()),
                ('awc_id', models.TextField()),
                ('aggregation_level', models.IntegerField(null=True)),
                ('date', models.DateField()),
                ('cases_household', models.IntegerField(null=True)),
                ('cases_person', models.IntegerField(null=True)),
                ('cases_person_all', models.IntegerField(null=True)),
                ('cases_person_has_aadhaar', models.IntegerField(null=True)),
                ('cases_child_health', models.IntegerField(null=True)),
                ('cases_child_health_all', models.IntegerField(null=True)),
                ('cases_ccs_pregnant', models.IntegerField(null=True)),
                ('cases_ccs_pregnant_all', models.IntegerField(null=True)),
                ('cases_ccs_lactating', models.IntegerField(null=True)),
                ('cases_ccs_lactating_all', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_11_14', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_15_18', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_11_14_all', models.IntegerField(null=True)),
                ('cases_person_adolescent_girls_15_18_all', models.IntegerField(null=True)),
                ('daily_attendance_open', models.IntegerField(null=True)),
                ('num_awcs', models.IntegerField(null=True)),
                ('num_launched_states', models.IntegerField(null=True)),
                ('num_launched_districts', models.IntegerField(null=True)),
                ('num_launched_blocks', models.IntegerField(null=True)),
                ('num_launched_supervisors', models.IntegerField(null=True)),
                ('num_launched_awcs', models.IntegerField(null=True)),
                ('cases_person_beneficiary', models.IntegerField(null=True)),
                ('cases_person_has_aadhaar_v2', models.IntegerField(null=True)),
                ('cases_person_beneficiary_v2', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'agg_awc_daily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggCcsRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_id', models.TextField()),
                ('district_id', models.TextField()),
                ('block_id', models.TextField()),
                ('supervisor_id', models.TextField()),
                ('awc_id', models.TextField()),
                ('month', models.DateField()),
                ('ccs_status', models.TextField()),
                ('trimester', models.TextField()),
                ('caste', models.TextField(null=True)),
                ('disabled', models.TextField(null=True)),
                ('minority', models.TextField(null=True)),
                ('resident', models.TextField(null=True)),
                ('valid_in_month', models.IntegerField()),
                ('lactating', models.IntegerField()),
                ('pregnant', models.IntegerField()),
                ('thr_eligible', models.IntegerField()),
                ('rations_21_plus_distributed', models.IntegerField()),
                ('tetanus_complete', models.IntegerField()),
                ('delivered_in_month', models.IntegerField()),
                ('anc1_received_at_delivery', models.IntegerField()),
                ('anc2_received_at_delivery', models.IntegerField()),
                ('anc3_received_at_delivery', models.IntegerField()),
                ('anc4_received_at_delivery', models.IntegerField()),
                ('registration_trimester_at_delivery', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('using_ifa', models.IntegerField()),
                ('ifa_consumed_last_seven_days', models.IntegerField()),
                ('anemic_normal', models.IntegerField()),
                ('anemic_moderate', models.IntegerField()),
                ('anemic_severe', models.IntegerField()),
                ('anemic_unknown', models.IntegerField()),
                ('extra_meal', models.IntegerField()),
                ('resting_during_pregnancy', models.IntegerField()),
                ('bp1_complete', models.IntegerField()),
                ('bp2_complete', models.IntegerField()),
                ('bp3_complete', models.IntegerField()),
                ('pnc_complete', models.IntegerField()),
                ('trimester_2', models.IntegerField()),
                ('trimester_3', models.IntegerField()),
                ('postnatal', models.IntegerField()),
                ('counsel_bp_vid', models.IntegerField()),
                ('counsel_preparation', models.IntegerField()),
                ('counsel_immediate_bf', models.IntegerField()),
                ('counsel_fp_vid', models.IntegerField()),
                ('counsel_immediate_conception', models.IntegerField()),
                ('counsel_accessible_postpartum_fp', models.IntegerField()),
                ('has_aadhar_id', models.IntegerField(null=True)),
                ('aggregation_level', models.IntegerField(null=True)),
                ('valid_all_registered_in_month', models.IntegerField(null=True)),
                ('institutional_delivery_in_month', models.IntegerField(null=True)),
                ('lactating_all', models.IntegerField(null=True)),
                ('pregnant_all', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'agg_ccs_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggChildHealth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_id', models.TextField()),
                ('district_id', models.TextField()),
                ('block_id', models.TextField()),
                ('supervisor_id', models.TextField()),
                ('awc_id', models.TextField()),
                ('month', models.DateField()),
                ('gender', models.TextField(null=True)),
                ('age_tranche', models.TextField(null=True)),
                ('caste', models.TextField(null=True)),
                ('disabled', models.TextField(null=True)),
                ('minority', models.TextField(null=True)),
                ('resident', models.TextField(null=True)),
                ('valid_in_month', models.IntegerField()),
                ('nutrition_status_weighed', models.IntegerField()),
                ('nutrition_status_unweighed', models.IntegerField()),
                ('nutrition_status_normal', models.IntegerField()),
                ('nutrition_status_moderately_underweight', models.IntegerField()),
                ('nutrition_status_severely_underweight', models.IntegerField()),
                ('wer_eligible', models.IntegerField()),
                ('thr_eligible', models.IntegerField()),
                ('rations_21_plus_distributed', models.IntegerField()),
                ('pse_eligible', models.IntegerField()),
                ('pse_attended_16_days', models.IntegerField()),
                ('born_in_month', models.IntegerField()),
                ('low_birth_weight_in_month', models.IntegerField()),
                ('bf_at_birth', models.IntegerField()),
                ('ebf_eligible', models.IntegerField()),
                ('ebf_in_month', models.IntegerField()),
                ('cf_eligible', models.IntegerField()),
                ('cf_in_month', models.IntegerField()),
                ('cf_diet_diversity', models.IntegerField()),
                ('cf_diet_quantity', models.IntegerField()),
                ('cf_demo', models.IntegerField()),
                ('cf_handwashing', models.IntegerField()),
                ('counsel_increase_food_bf', models.IntegerField()),
                ('counsel_manage_breast_problems', models.IntegerField()),
                ('counsel_ebf', models.IntegerField()),
                ('counsel_adequate_bf', models.IntegerField()),
                ('counsel_pediatric_ifa', models.IntegerField()),
                ('counsel_play_cf_video', models.IntegerField()),
                ('fully_immunized_eligible', models.IntegerField()),
                ('fully_immunized_on_time', models.IntegerField()),
                ('fully_immunized_late', models.IntegerField()),
                ('weighed_and_height_measured_in_month', models.IntegerField(null=True)),
                ('weighed_and_born_in_month', models.IntegerField(null=True)),
                ('days_ration_given_child', models.IntegerField(null=True)),
                ('zscore_grading_hfa_normal', models.IntegerField(null=True)),
                ('zscore_grading_hfa_moderate', models.IntegerField(null=True)),
                ('zscore_grading_hfa_severe', models.IntegerField(null=True)),
                ('wasting_normal_v2', models.IntegerField(null=True)),
                ('wasting_moderate_v2', models.IntegerField(null=True)),
                ('wasting_severe_v2', models.IntegerField(null=True)),
                ('has_aadhar_id', models.IntegerField(null=True)),
                ('aggregation_level', models.IntegerField(null=True)),
                ('pnc_eligible', models.IntegerField(null=True)),
                ('height_eligible', models.IntegerField(null=True)),
                ('wasting_moderate', models.IntegerField(null=True)),
                ('wasting_severe', models.IntegerField(null=True)),
                ('stunting_moderate', models.IntegerField(null=True)),
                ('stunting_severe', models.IntegerField(null=True)),
                ('cf_initiation_in_month', models.IntegerField(null=True)),
                ('cf_initiation_eligible', models.IntegerField(null=True)),
                ('height_measured_in_month', models.IntegerField(null=True)),
                ('wasting_normal', models.IntegerField(null=True)),
                ('stunting_normal', models.IntegerField(null=True)),
                ('valid_all_registered_in_month', models.IntegerField(null=True)),
                ('ebf_no_info_recorded', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'agg_child_health',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CcsRecordMonthly',
            fields=[
                ('awc_id', models.TextField()),
                ('case_id', models.TextField(primary_key=True, serialize=False)),
                ('month', models.DateField()),
                ('age_in_months', models.IntegerField(blank=True, null=True)),
                ('ccs_status', models.TextField(blank=True, null=True)),
                ('open_in_month', models.IntegerField(blank=True, null=True)),
                ('alive_in_month', models.IntegerField(blank=True, null=True)),
                ('trimester', models.IntegerField(blank=True, null=True)),
                ('num_rations_distributed', models.IntegerField(blank=True, null=True)),
                ('thr_eligible', models.IntegerField(blank=True, null=True)),
                ('tetanus_complete', models.IntegerField(blank=True, null=True)),
                ('delivered_in_month', models.IntegerField(blank=True, null=True)),
                ('anc1_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('anc2_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('anc3_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('anc4_received_at_delivery', models.IntegerField(blank=True, null=True)),
                ('registration_trimester_at_delivery', models.IntegerField(blank=True, null=True)),
                ('using_ifa', models.IntegerField(blank=True, null=True)),
                ('ifa_consumed_last_seven_days', models.IntegerField(blank=True, null=True)),
                ('anemic_severe', models.IntegerField(blank=True, null=True)),
                ('anemic_moderate', models.IntegerField(blank=True, null=True)),
                ('anemic_normal', models.IntegerField(blank=True, null=True)),
                ('anemic_unknown', models.IntegerField(blank=True, null=True)),
                ('extra_meal', models.IntegerField(blank=True, null=True)),
                ('resting_during_pregnancy', models.IntegerField(blank=True, null=True)),
                ('bp_visited_in_month', models.IntegerField(blank=True, null=True)),
                ('pnc_visited_in_month', models.IntegerField(blank=True, null=True)),
                ('trimester_2', models.IntegerField(blank=True, null=True)),
                ('trimester_3', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_bp_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_preparation', models.IntegerField(blank=True, null=True)),
                ('counsel_fp_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_conception', models.IntegerField(blank=True, null=True)),
                ('counsel_accessible_postpartum_fp', models.IntegerField(blank=True, null=True)),
                ('bp1_complete', models.IntegerField(blank=True, null=True)),
                ('bp2_complete', models.IntegerField(blank=True, null=True)),
                ('bp3_complete', models.IntegerField(blank=True, null=True)),
                ('pnc_complete', models.IntegerField(blank=True, null=True)),
                ('postnatal', models.IntegerField(blank=True, null=True)),
                ('has_aadhar_id', models.IntegerField(blank=True, null=True)),
                ('counsel_fp_methods', models.IntegerField(blank=True, null=True)),
                ('pregnant', models.IntegerField(blank=True, null=True)),
                ('pregnant_all', models.IntegerField(blank=True, null=True)),
                ('lactating', models.IntegerField(blank=True, null=True)),
                ('lactating_all', models.IntegerField(blank=True, null=True)),
                ('institutional_delivery_in_month', models.IntegerField(blank=True, null=True)),
                ('add', models.DateField(blank=True, null=True)),
                ('anc_in_month', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ccs_record_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChildHealthMonthly',
            fields=[
                ('awc_id', models.TextField()),
                ('case_id', models.TextField(primary_key=True, serialize=False)),
                ('month', models.DateField()),
                ('age_in_months', models.IntegerField(blank=True, null=True)),
                ('open_in_month', models.IntegerField(blank=True, null=True)),
                ('alive_in_month', models.IntegerField(blank=True, null=True)),
                ('wer_eligible', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_last_recorded', models.TextField(blank=True, null=True)),
                ('current_month_nutrition_status', models.TextField(blank=True, null=True)),
                ('nutrition_status_weighed', models.IntegerField(blank=True, null=True)),
                ('num_rations_distributed', models.IntegerField(blank=True, null=True)),
                ('pse_eligible', models.IntegerField(blank=True, null=True)),
                ('pse_days_attended', models.IntegerField(blank=True, null=True)),
                ('born_in_month', models.IntegerField(blank=True, null=True)),
                ('low_birth_weight_born_in_month', models.IntegerField(blank=True, null=True)),
                ('bf_at_birth_born_in_month', models.IntegerField(blank=True, null=True)),
                ('ebf_eligible', models.IntegerField(blank=True, null=True)),
                ('ebf_in_month', models.IntegerField(blank=True, null=True)),
                ('ebf_not_breastfeeding_reason', models.TextField(blank=True, null=True)),
                ('ebf_drinking_liquid', models.IntegerField(blank=True, null=True)),
                ('ebf_eating', models.IntegerField(blank=True, null=True)),
                ('ebf_no_bf_no_milk', models.IntegerField(blank=True, null=True)),
                ('ebf_no_bf_pregnant_again', models.IntegerField(blank=True, null=True)),
                ('ebf_no_bf_child_too_old', models.IntegerField(blank=True, null=True)),
                ('ebf_no_bf_mother_sick', models.IntegerField(blank=True, null=True)),
                ('cf_eligible', models.IntegerField(blank=True, null=True)),
                ('cf_in_month', models.IntegerField(blank=True, null=True)),
                ('cf_diet_diversity', models.IntegerField(blank=True, null=True)),
                ('cf_diet_quantity', models.IntegerField(blank=True, null=True)),
                ('cf_handwashing', models.IntegerField(blank=True, null=True)),
                ('cf_demo', models.IntegerField(blank=True, null=True)),
                ('fully_immunized_eligible', models.IntegerField(blank=True, null=True)),
                ('fully_immunized_on_time', models.IntegerField(blank=True, null=True)),
                ('fully_immunized_late', models.IntegerField(blank=True, null=True)),
                ('counsel_ebf', models.IntegerField(blank=True, null=True)),
                ('counsel_adequate_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_pediatric_ifa', models.IntegerField(blank=True, null=True)),
                ('counsel_comp_feeding_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_increase_food_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_manage_breast_problems', models.IntegerField(blank=True, null=True)),
                ('counsel_skin_to_skin', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_breastfeeding', models.IntegerField(blank=True, null=True)),
                ('recorded_weight', models.DecimalField(blank=True, decimal_places=20, max_digits=64, null=True)),
                ('recorded_height', models.DecimalField(blank=True, decimal_places=20, max_digits=64, null=True)),
                ('has_aadhar_id', models.IntegerField(blank=True, null=True)),
                ('thr_eligible', models.IntegerField(blank=True, null=True)),
                ('pnc_eligible', models.IntegerField(blank=True, null=True)),
                ('cf_initiation_in_month', models.IntegerField(blank=True, null=True)),
                ('cf_initiation_eligible', models.IntegerField(blank=True, null=True)),
                ('height_measured_in_month', models.IntegerField(blank=True, null=True)),
                ('current_month_stunting', models.TextField(blank=True, null=True)),
                ('stunting_last_recorded', models.TextField(blank=True, null=True)),
                ('wasting_last_recorded', models.TextField(blank=True, null=True)),
                ('current_month_wasting', models.TextField(blank=True, null=True)),
                ('valid_in_month', models.IntegerField(blank=True, null=True)),
                ('valid_all_registered_in_month', models.IntegerField(blank=True, null=True)),
                ('ebf_no_info_recorded', models.IntegerField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('sex', models.TextField(blank=True, null=True)),
                ('age_tranche', models.TextField(blank=True, null=True)),
                ('caste', models.TextField(blank=True, null=True)),
                ('disabled', models.TextField(blank=True, null=True)),
                ('minority', models.TextField(blank=True, null=True)),
                ('resident', models.TextField(blank=True, null=True)),
                ('person_name', models.TextField(blank=True, null=True)),
                ('mother_name', models.TextField(blank=True, null=True)),
                ('immunization_in_month', models.SmallIntegerField(blank=True, null=True)),
                ('days_ration_given_child', models.SmallIntegerField(blank=True, null=True)),
                ('zscore_grading_hfa', models.SmallIntegerField(blank=True, null=True)),
                ('zscore_grading_hfa_recorded_in_month', models.SmallIntegerField(blank=True, null=True)),
                ('zscore_grading_wfh', models.SmallIntegerField(blank=True, null=True)),
                ('zscore_grading_wfh_recorded_in_month', models.SmallIntegerField(blank=True, null=True)),
                ('muac_grading', models.SmallIntegerField(blank=True, null=True)),
                ('muac_grading_recorded_in_month', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'child_health_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DailyAttendance',
            fields=[
                ('doc_id', models.TextField(primary_key=True, serialize=False)),
                ('awc_id', models.TextField(null=True)),
                ('month', models.DateField(null=True)),
                ('pse_date', models.DateField(null=True)),
                ('awc_open_count', models.IntegerField(null=True)),
                ('count', models.IntegerField(null=True)),
                ('eligible_children', models.IntegerField(null=True)),
                ('attended_children', models.IntegerField(null=True)),
                ('attended_children_percent', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('form_location', models.TextField(null=True)),
                ('form_location_lat', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('form_location_long', models.DecimalField(decimal_places=16, max_digits=64, null=True)),
                ('image_name', models.TextField(null=True)),
            ],
            options={
                'db_table': 'daily_attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IcdsMonths',
            fields=[
                ('month_name', models.TextField(primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'db_table': 'icds_months',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='aggregateccsrecordpostnatalcareforms',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='aggregatechildhealthpostnatalcareforms',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='aggregatechildhealththrforms',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='aggregatecomplementaryfeedingforms',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='aggregategrowthmonitoringforms',
            options={'managed': False},
        ),
        migrations.AlterField(
            model_name='icdsauditentryrecord',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AddField(
            model_name='AggChildHealth',
            name='zscore_grading_hfa_recorded_in_month',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='AggChildHealth',
            name='zscore_grading_wfh_recorded_in_month',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='AggregateInactiveAWW',
            fields=[
                ('awc_id', models.TextField(primary_key=True, serialize=False)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('first_submission', models.DateField(blank=True, null=True)),
                ('last_submission', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IcdsFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blob_id', models.CharField(max_length=255)),
                ('data_type', models.CharField(max_length=255)),
                ('file_added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AggregateChildHealthDailyFeedingForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('sum_attended_child_ids', models.PositiveSmallIntegerField(help_text='Number of days the child has attended this month', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_daily_feeding_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateAwcInfrastructureForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('awc_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('awc_building', models.PositiveSmallIntegerField(null=True)),
                ('source_drinking_water', models.PositiveSmallIntegerField(null=True)),
                ('toilet_functional', models.PositiveSmallIntegerField(null=True)),
                ('electricity_awc', models.PositiveSmallIntegerField(null=True)),
                ('adequate_space_pse', models.PositiveSmallIntegerField(null=True)),
                ('adult_scale_available', models.PositiveSmallIntegerField(null=True)),
                ('baby_scale_available', models.PositiveSmallIntegerField(null=True)),
                ('flat_scale_available', models.PositiveSmallIntegerField(null=True)),
                ('adult_scale_usable', models.PositiveSmallIntegerField(null=True)),
                ('baby_scale_usable', models.PositiveSmallIntegerField(null=True)),
                ('cooking_utensils_usable', models.PositiveSmallIntegerField(null=True)),
                ('infantometer_usable', models.PositiveSmallIntegerField(null=True)),
                ('medicine_kits_usable', models.PositiveSmallIntegerField(null=True)),
                ('stadiometer_usable', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_infrastructure_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateCcsRecordTHRForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('days_ration_given_mother', models.PositiveSmallIntegerField(help_text='Number of days the mother has been given rations this month', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_ccs_record_thr_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateBirthPreparednesForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('immediate_breastfeeding', models.PositiveSmallIntegerField(help_text="Has ever had /data/bp2/immediate_breastfeeding = 'yes'", null=True)),
                ('anemia', models.PositiveSmallIntegerField(help_text='Last value of /data/bp1/anemia. severe=1, moderate=2, normal=3', null=True)),
                ('eating_extra', models.PositiveSmallIntegerField(help_text="Last value of /data/bp1/eating_extra = 'yes'.", null=True)),
                ('resting', models.PositiveSmallIntegerField(help_text="Last value of /data/bp1/resting = 'yes'.", null=True)),
                ('anc_weight', models.PositiveSmallIntegerField(help_text='Last value of anc_details/anc_weight', null=True)),
                ('anc_blood_pressure', models.PositiveSmallIntegerField(help_text='Last value of anc_details/anc_blood_pressure. normal=1, high=2, not_measured=3', null=True)),
                ('bp_sys', models.PositiveSmallIntegerField(help_text='Last value of anc_details/bp_sys', null=True)),
                ('bp_dia', models.PositiveSmallIntegerField(help_text='Last value of anc_details/bp_dia', null=True)),
                ('anc_hemoglobin', models.DecimalField(decimal_places=20, help_text='Last value of anc_details/anc_hemoglobin', max_digits=64, null=True)),
                ('bleeding', models.PositiveSmallIntegerField(help_text="Last value of /data/bp2/bleeding = 'yes'", null=True)),
                ('swelling', models.PositiveSmallIntegerField(help_text="Last value of /data/bp2/swelling = 'yes'", null=True)),
                ('blurred_vision', models.PositiveSmallIntegerField(help_text="Last value of /data/bp2/blurred_vision = 'yes'", null=True)),
                ('convulsions', models.PositiveSmallIntegerField(help_text="Last value of /data/bp2/convulsions = 'yes'", null=True)),
                ('rupture', models.PositiveSmallIntegerField(help_text="Last value of /data/bp2/rupture = 'yes'", null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_ccs_record_bp_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateCcsRecordDeliveryForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('breastfed_at_birth', models.PositiveSmallIntegerField(help_text='whether any child was breastfed at birth', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_ccs_record_delivery_forms',
            },
        ),
        migrations.AlterModelOptions(
            name='aggregateccsrecordpostnatalcareforms',
            options={},
        ),
        migrations.AlterModelOptions(
            name='aggregatechildhealthpostnatalcareforms',
            options={},
        ),
        migrations.AlterModelOptions(
            name='aggregatechildhealththrforms',
            options={},
        ),
        migrations.AlterModelOptions(
            name='aggregatecomplementaryfeedingforms',
            options={},
        ),
        migrations.AlterModelOptions(
            name='aggregategrowthmonitoringforms',
            options={},
        ),
        migrations.AddField(
            model_name='aggregateccsrecordpostnatalcareforms',
            name='is_ebf',
            field=models.PositiveSmallIntegerField(help_text='Whether child was exclusively breastfed at last visit', null=True),
        ),
        migrations.CreateModel(
            name='DishaIndicatorView',
            fields=[
                ('awc_id', models.TextField(primary_key=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('cases_household', models.IntegerField(blank=True, null=True)),
                ('cases_person_all', models.IntegerField(blank=True, null=True)),
                ('cases_person', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_pregnant_all', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_pregnant', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_lactating_all', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_lactating', models.IntegerField(blank=True, null=True)),
                ('cases_child_health_all', models.IntegerField(blank=True, null=True)),
                ('cases_child_health', models.IntegerField(blank=True, null=True)),
                ('medicine_kit_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('infant_weighing_scale_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('adult_weighing_scale_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('clean_water_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('functional_toilet_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('anemic_pregnant_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('tetanus_complete_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('anc1_received_at_delivery_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('anc2_received_at_delivery_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('anc3_received_at_delivery_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('anc4_received_at_delivery_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('resting_during_pregnancy_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('extra_meal_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('counsel_immediate_bf_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('nutrition_status_weighed_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('height_measured_in_month_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('nutrition_status_unweighed', models.IntegerField(blank=True, null=True)),
                ('nutrition_status_severely_underweight_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('nutrition_status_moderately_underweight_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('wasting_severe_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('wasting_moderate_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('stunting_severe_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('stunting_moderate_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('low_birth_weight_in_month_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('immunized_percent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
            ],
            options={
                'db_table': 'icds_disha_indicators',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='anc_abnormalities',
            field=models.PositiveSmallIntegerField(help_text="Last value of anc_details/anc_abnormalities = 'yes'", null=True),
        ),
        migrations.CreateModel(
            name='CcsRecordMonthlyView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awc_id', models.TextField(primary_key=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('block_map_location_name', models.TextField(blank=True, null=True)),
                ('district_map_location_name', models.TextField(blank=True, null=True)),
                ('state_map_location_name', models.TextField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('add', models.DateField(blank=True, null=True)),
                ('age_in_months', models.IntegerField(blank=True, null=True)),
                ('anc_hemoglobin', models.DecimalField(blank=True, decimal_places=20, max_digits=64, null=True)),
                ('anc_weight', models.SmallIntegerField(blank=True, null=True)),
                ('anemic_moderate', models.IntegerField(blank=True, null=True)),
                ('anemic_normal', models.IntegerField(blank=True, null=True)),
                ('anemic_severe', models.IntegerField(blank=True, null=True)),
                ('anemic_unknown', models.IntegerField(blank=True, null=True)),
                ('bleeding', models.SmallIntegerField(blank=True, null=True)),
                ('blurred_vision', models.SmallIntegerField(blank=True, null=True)),
                ('bp_dia', models.SmallIntegerField(blank=True, null=True)),
                ('bp_sys', models.SmallIntegerField(blank=True, null=True)),
                ('breastfed_at_birth', models.SmallIntegerField(blank=True, null=True)),
                ('case_id', models.TextField(primary_key=True)),
                ('convulsions', models.SmallIntegerField(blank=True, null=True)),
                ('counsel_accessible_postpartum_fp', models.IntegerField(blank=True, null=True)),
                ('counsel_bp_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_fp_methods', models.IntegerField(blank=True, null=True)),
                ('counsel_fp_vid', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_bf', models.IntegerField(blank=True, null=True)),
                ('counsel_immediate_conception', models.IntegerField(blank=True, null=True)),
                ('counsel_preparation', models.IntegerField(blank=True, null=True)),
                ('delivery_nature', models.SmallIntegerField(blank=True, null=True)),
                ('edd', models.DateField(blank=True, null=True)),
                ('home_visit_date', models.DateField(blank=True, null=True)),
                ('ifa_consumed_last_seven_days', models.IntegerField(blank=True, null=True)),
                ('institutional_delivery_in_month', models.IntegerField(blank=True, null=True)),
                ('is_ebf', models.SmallIntegerField(blank=True, null=True)),
                ('last_date_thr', models.DateField(blank=True, null=True)),
                ('mobile_number', models.TextField(blank=True, null=True)),
                ('num_anc_complete', models.SmallIntegerField(blank=True, null=True)),
                ('num_pnc_visits', models.SmallIntegerField(blank=True, null=True)),
                ('num_rations_distributed', models.IntegerField(blank=True, null=True)),
                ('opened_on', models.DateField(blank=True, null=True)),
                ('person_name', models.TextField(blank=True, null=True)),
                ('preg_order', models.SmallIntegerField(blank=True, null=True)),
                ('pregnant', models.IntegerField(blank=True, null=True)),
                ('rupture', models.SmallIntegerField(blank=True, null=True)),
                ('swelling', models.SmallIntegerField(blank=True, null=True)),
                ('trimester', models.IntegerField(blank=True, null=True)),
                ('tt_1', models.DateField(blank=True, null=True)),
                ('tt_2', models.DateField(blank=True, null=True)),
                ('using_ifa', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ccs_record_monthly_view',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='aggregatesqlprofile',
            name='last_included_doc_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='CcsRecordMonthlyView',
            name='lactating',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='AggregateCcsRecordComplementaryFeedingForms',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('latest_time_end_processed', models.DateTimeField(help_text='The latest form.meta.timeEnd that has been processed for this case')),
                ('valid_visits', models.PositiveSmallIntegerField(default=0, help_text='number of qualified visits for the incentive report')),
            ],
            options={
                'db_table': 'icds_dashboard_ccs_record_cf_forms',
            },
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='valid_visits',
            field=models.PositiveSmallIntegerField(default=0, help_text='number of qualified visits for the incentive report'),
        ),
        migrations.AddField(
            model_name='aggregateccsrecorddeliveryforms',
            name='valid_visits',
            field=models.PositiveSmallIntegerField(default=0, help_text='number of qualified visits for the incentive report'),
        ),
        migrations.AddField(
            model_name='aggregateccsrecordpostnatalcareforms',
            name='valid_visits',
            field=models.PositiveSmallIntegerField(default=0, help_text='number of qualified visits for the incentive report'),
        ),
        migrations.CreateModel(
            name='AWWIncentiveReport',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('awc_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('block_id', models.CharField(max_length=40)),
                ('state_name', models.TextField(null=True)),
                ('district_name', models.TextField(null=True)),
                ('block_name', models.TextField(null=True)),
                ('supervisor_name', models.TextField(null=True)),
                ('awc_name', models.TextField(null=True)),
                ('aww_name', models.TextField(null=True)),
                ('contact_phone_number', models.TextField(null=True)),
                ('wer_weighed', models.SmallIntegerField(null=True)),
                ('wer_eligible', models.SmallIntegerField(null=True)),
                ('awc_num_open', models.SmallIntegerField(null=True)),
                ('valid_visits', models.SmallIntegerField(null=True)),
                ('expected_visits', models.SmallIntegerField(null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_aww_incentive',
            },
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='cases_ccs_pregnant_all',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='cases_ccs_lactating_all',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='anemic_pregnant_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='tetanus_complete_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='anc1_received_at_delivery_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='anc2_received_at_delivery_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='anc3_received_at_delivery_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='anc4_received_at_delivery_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='low_birth_weight_in_month_percent',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='immunized_percent',
        ),
        migrations.AlterField(
            model_name='awwincentivereport',
            name='expected_visits',
            field=models.DecimalField(decimal_places=2, max_digits=64, null=True),
        ),
        migrations.CreateModel(
            name='AggLs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_awc_vists', models.IntegerField(help_text='unique awc visits made by LS')),
                ('vhnd_observed', models.IntegerField(help_text='VHND forms submitted by LS')),
                ('beneficiary_vists', models.IntegerField(help_text='Beneficiary visits done by LS')),
                ('month', models.DateField()),
                ('state_id', models.TextField()),
                ('district_id', models.TextField()),
                ('block_id', models.TextField()),
                ('supervisor_id', models.TextField()),
                ('aggregation_level', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'agg_ls',
            },
        ),
        migrations.CreateModel(
            name='AggregateBeneficiaryForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_vists', models.IntegerField(help_text='Beneficiary visits done by LS')),
                ('month', models.DateField()),
                ('supervisor_id', models.TextField()),
                ('state_id', models.TextField()),
            ],
            options={
                'db_table': 'icds_dashboard_ls_beneficiary_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateLsAWCVisitForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_awc_vists', models.IntegerField(help_text='unique awc visits made by LS')),
                ('month', models.DateField()),
                ('supervisor_id', models.TextField()),
                ('state_id', models.TextField()),
            ],
            options={
                'db_table': 'icds_dashboard_ls_awc_visits_forms',
            },
        ),
        migrations.CreateModel(
            name='AggregateLsVhndForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vhnd_observed', models.IntegerField(help_text='VHND forms submitted by LS')),
                ('month', models.DateField()),
                ('supervisor_id', models.TextField()),
                ('state_id', models.TextField()),
            ],
            options={
                'db_table': 'icds_dashboard_ls_vhnd_forms',
            },
        ),
        migrations.RenameField(
            model_name='aggls',
            old_name='unique_awc_vists',
            new_name='awc_visits',
        ),
        migrations.RenameField(
            model_name='aggregatelsawcvisitform',
            old_name='unique_awc_vists',
            new_name='awc_visits',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='awc_id',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='awc_name',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='supervisor_id',
        ),
        migrations.RemoveField(
            model_name='dishaindicatorview',
            name='supervisor_name',
        ),
        migrations.AddField(
            model_name='aggregatechildhealthdailyfeedingforms',
            name='lunch_count',
            field=models.PositiveSmallIntegerField(help_text='Number of days the child had the lunch', null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='conceive',
            field=models.PositiveSmallIntegerField(help_text="Has ever had /data/conceive = 'yes'", null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='counsel_accessible_ppfp',
            field=models.PositiveSmallIntegerField(help_text="Has ever had /data/family_planning_group/counsel_accessible_ppfp='yes'", null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='counsel_preparation',
            field=models.PositiveSmallIntegerField(help_text="Has ever had /data/bp2/counsel_preparation = 'yes'", null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='ifa_last_seven_days',
            field=models.PositiveSmallIntegerField(help_text='Number of ifa taken in last seven days', null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='play_birth_preparedness_vid',
            field=models.PositiveSmallIntegerField(help_text='Case has ever been counseled about birth preparedness with a video', null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='play_family_planning_vid',
            field=models.PositiveSmallIntegerField(help_text='Case has ever been counseled about family planning with a video', null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='using_ifa',
            field=models.PositiveSmallIntegerField(help_text="Has ever had /data/bp1/using_ifa='yes'", null=True),
        ),
        migrations.AddField(
            model_name='aggregateccsrecorddeliveryforms',
            name='where_born',
            field=models.PositiveSmallIntegerField(help_text='Where the child is born', null=True),
        ),
        migrations.AlterField(
            model_name='aggls',
            name='awc_visits',
            field=models.IntegerField(help_text='awc visits made by LS'),
        ),
        migrations.AlterField(
            model_name='aggregatelsawcvisitform',
            name='awc_visits',
            field=models.IntegerField(help_text='awc visits made by LS'),
        ),
        migrations.AddField(
            model_name='awwincentivereport',
            name='district_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='aggregatebirthpreparednesforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregateccsrecorddeliveryforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregateccsrecordpostnatalcareforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregateccsrecordthrforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregatecomplementaryfeedingforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='awwincentivereport',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregateawcinfrastructureforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregatechildhealthdailyfeedingforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregatechildhealthpostnatalcareforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregatechildhealththrforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='aggregategrowthmonitoringforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.RunSQL(
            sql='DROP FUNCTION IF EXISTS update_aggregate_awc_data(date)',
        ),
        migrations.AddField(
            model_name='aggregateccsrecordcomplementaryfeedingforms',
            name='supervisor_id',
            field=models.TextField(null=True),
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_ccs_record_bp_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_bp_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_bp_forms_pkey;\n        ALTER TABLE "icds_dashboard_ccs_record_bp_forms" ADD CONSTRAINT icds_dashboard_ccs_record_bp_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_ccs_record_bp_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregatebirthpreparednesforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_ccs_record_delivery_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_delivery_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_delivery_forms_pkey;\n        ALTER TABLE "icds_dashboard_ccs_record_delivery_forms" ADD CONSTRAINT icds_dashboard_ccs_record_delivery_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_ccs_record_delivery_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregateccsrecorddeliveryforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_ccs_record_postnatal_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_postnatal_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_postnatal_forms_pkey;\n        ALTER TABLE "icds_dashboard_ccs_record_postnatal_forms" ADD CONSTRAINT icds_dashboard_ccs_record_postnatal_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_ccs_record_postnatal_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregateccsrecordpostnatalcareforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_ccs_record_thr_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_thr_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_thr_forms_pkey;\n        ALTER TABLE "icds_dashboard_ccs_record_thr_forms" ADD CONSTRAINT icds_dashboard_ccs_record_thr_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_ccs_record_thr_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregateccsrecordthrforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_ccs_record_cf_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_cf_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_ccs_record_cf_forms_pkey;\n        ALTER TABLE "icds_dashboard_ccs_record_cf_forms" ADD CONSTRAINT icds_dashboard_ccs_record_cf_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_ccs_record_cf_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregateccsrecordcomplementaryfeedingforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_daily_feeding_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_daily_feeding_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_daily_feeding_forms_pkey;\n        ALTER TABLE "icds_dashboard_daily_feeding_forms" ADD CONSTRAINT icds_dashboard_daily_feeding_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_daily_feeding_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregatechildhealthdailyfeedingforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_child_health_postnatal_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_child_health_postnatal_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_child_health_postnatal_forms_pkey;\n        ALTER TABLE "icds_dashboard_child_health_postnatal_forms" ADD CONSTRAINT icds_dashboard_child_health_postnatal_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_child_health_postnatal_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregatechildhealthpostnatalcareforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_child_health_thr_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_child_health_thr_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_child_health_thr_forms_pkey;\n        ALTER TABLE "icds_dashboard_child_health_thr_forms" ADD CONSTRAINT icds_dashboard_child_health_thr_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_child_health_thr_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregatechildhealththrforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_comp_feed_form" DROP CONSTRAINT IF EXISTS icds_dashboard_comp_feed_form_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_comp_feed_form_pkey;\n        ALTER TABLE "icds_dashboard_comp_feed_form" ADD CONSTRAINT icds_dashboard_comp_feed_form_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_comp_feed_form_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregatecomplementaryfeedingforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_growth_monitoring_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_growth_monitoring_forms_supervisor_id_case_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_growth_monitoring_forms_pkey;\n        ALTER TABLE "icds_dashboard_growth_monitoring_forms" ADD CONSTRAINT icds_dashboard_growth_monitoring_forms_pkey PRIMARY KEY (case_id);\n        DROP INDEX IF EXISTS icds_dashboard_growth_monitoring_forms_supervisor_id_case_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregategrowthmonitoringforms',
                unique_together=set([('supervisor_id', 'case_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "icds_dashboard_infrastructure_forms" DROP CONSTRAINT IF EXISTS icds_dashboard_infrastructure_forms_supervisor_id_awc_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS icds_dashboard_infrastructure_forms_pkey;\n        ALTER TABLE "icds_dashboard_infrastructure_forms" ADD CONSTRAINT icds_dashboard_infrastructure_forms_pkey PRIMARY KEY (awc_id);\n        DROP INDEX IF EXISTS icds_dashboard_infrastructure_forms_supervisor_id_awc_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='aggregateawcinfrastructureforms',
                unique_together=set([('supervisor_id', 'awc_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='\n        ALTER TABLE "daily_attendance" DROP CONSTRAINT IF EXISTS daily_attendance_supervisor_id_doc_id_month_uniq,\n        DROP CONSTRAINT IF EXISTS daily_attendance_pkey;\n        ALTER TABLE "daily_attendance" ADD CONSTRAINT daily_attendance_pkey PRIMARY KEY (doc_id);\n        DROP INDEX IF EXISTS daily_attendance_supervisor_id_doc_id_month_uniq;\n    ',
            state_operations=[migrations.AlterUniqueTogether(
                name='dailyattendance',
                unique_together=set([('supervisor_id', 'doc_id', 'month')]),
            )],
        ),
        migrations.RunSQL(
            sql='ALTER TABLE ccs_record_monthly ADD COLUMN supervisor_id text',
        ),
        migrations.RunSQL(
            sql='ALTER TABLE child_health_monthly ADD COLUMN supervisor_id text',
        ),
    ]
    # 0107_citus_composite_key
    operations.extend(get_composite_primary_key_migrations([
        'aggregatebirthpreparednesforms',
        'aggregateccsrecorddeliveryforms',
        'aggregateccsrecordpostnatalcareforms',
        'aggregateccsrecordthrforms',
        'aggregateccsrecordcomplementaryfeedingforms',
        'aggregatechildhealthdailyfeedingforms',
        'aggregatechildhealthpostnatalcareforms',
        'aggregatechildhealththrforms',
        'aggregatecomplementaryfeedingforms',
        'aggregategrowthmonitoringforms',
        'aggregateawcinfrastructureforms',
        'dailyattendance',
    ]))
