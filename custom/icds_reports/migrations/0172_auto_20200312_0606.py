# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-03-12 06:06
from __future__ import unicode_literals

import custom.icds_reports.models.aggregate
from django.db import migrations, models

from custom.icds_reports.utils.migrations import (
    get_composite_primary_key_migrations,
)
from corehq.sql_db.operations import RawSQLMigration
from corehq.sql_db.connections import is_citus_db
from custom.icds_reports.const import AGG_AVAILING_SERVICES_TABLE
from custom.icds_core.db import create_citus_distributed_table

migrator = RawSQLMigration(('custom', 'icds_reports', 'migrations', 'sql_templates', 'database_views'))


def _distribute_citus_tables(apps, schema_editor):
    with schema_editor.connection.cursor() as cursor:
        if not is_citus_db(cursor):
            return

        for table, col in [(AGG_AVAILING_SERVICES_TABLE, 'supervisor_id')]:
            create_citus_distributed_table(cursor, table, col)


class Migration(migrations.Migration):

    dependencies = [
        ('icds_reports', '0171_add_sdr_field_and_view'),
    ]

    operations = [
        migrations.CreateModel(
            name='AggregateAvailingServiceForms',
            fields=[
                ('state_id', models.CharField(max_length=10)),
                ('supervisor_id', models.TextField(null=True)),
                ('awc_id', models.TextField(null=True)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('person_case_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('is_registered', models.PositiveSmallIntegerField(
                    blank=True, help_text='Status of the Registration', null=True)),
                ('registration_date', models.DateTimeField(help_text='Registration Date', null=True)),
            ],
            options={
                'db_table': 'icds_dashboard_availing_service_forms',
            },
            bases=(models.Model, custom.icds_reports.models.aggregate.AggregateMixin),
        ),
        migrations.AlterUniqueTogether(
            name='aggregateavailingserviceforms',
            unique_together=set([('month', 'supervisor_id', 'person_case_id')]),
        ),
    ]

    operations.extend(get_composite_primary_key_migrations(['aggregateavailingserviceforms']))
    operations.append(migrations.RunPython(_distribute_citus_tables, migrations.RunPython.noop))
