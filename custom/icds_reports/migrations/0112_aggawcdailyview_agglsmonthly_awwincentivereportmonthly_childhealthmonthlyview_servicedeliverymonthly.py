# -*- coding: utf-8 -*-
# flake8: noqa
# Generated by Django 1.11.20 on 2019-04-19 20:43

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('icds_reports', '0111_service_delivery_dashboard'),
    ]

    operations = [
        migrations.CreateModel(
            name='AggAwcDailyView',
            fields=[
                ('awc_id', models.TextField(primary_key=True, serialize=False)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('block_map_location_name', models.TextField(blank=True, null=True)),
                ('district_map_location_name', models.TextField(blank=True, null=True)),
                ('state_map_location_name', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('cases_household', models.IntegerField(blank=True, null=True)),
                ('cases_person', models.IntegerField(blank=True, null=True)),
                ('cases_person_all', models.IntegerField(blank=True, null=True)),
                ('cases_person_has_aadhaar', models.IntegerField(blank=True, null=True)),
                ('cases_person_beneficiary', models.IntegerField(blank=True, null=True)),
                ('cases_person_adolescent_girls_11_14', models.IntegerField(blank=True, null=True)),
                ('cases_person_adolescent_girls_15_18', models.IntegerField(blank=True, null=True)),
                ('cases_person_adolescent_girls_11_14_all', models.IntegerField(blank=True, null=True)),
                ('cases_person_adolescent_girls_15_18_all', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_pregnant', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_lactating', models.IntegerField(blank=True, null=True)),
                ('cases_child_health', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_pregnant_all', models.IntegerField(blank=True, null=True)),
                ('cases_ccs_lactating_all', models.IntegerField(blank=True, null=True)),
                ('cases_child_health_all', models.IntegerField(blank=True, null=True)),
                ('daily_attendance_open', models.IntegerField(blank=True, null=True)),
                ('num_awcs', models.IntegerField(blank=True, null=True)),
                ('num_launched_states', models.IntegerField(blank=True, null=True)),
                ('num_launched_districts', models.IntegerField(blank=True, null=True)),
                ('num_launched_blocks', models.IntegerField(blank=True, null=True)),
                ('num_launched_supervisors', models.IntegerField(blank=True, null=True)),
                ('num_launched_awcs', models.IntegerField(blank=True, null=True)),
                ('cases_person_has_aadhaar_v2', models.IntegerField(blank=True, null=True)),
                ('cases_person_beneficiary_v2', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agg_awc_daily_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggLsMonthly',
            fields=[
                ('supervisor_id', models.TextField(primary_key=True, serialize=False)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, help_text='1 for state rows, 2 for district rows, and so on', null=True)),
                ('block_map_location_name', models.TextField(blank=True, null=True)),
                ('district_map_location_name', models.TextField(blank=True, null=True)),
                ('state_map_location_name', models.TextField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('awc_visits', models.IntegerField(help_text='Unique AWC visits by LS in the month')),
                ('vhnd_observed', models.IntegerField(help_text='Vhnd forms submitted by LS where vhnd date in the month')),
                ('beneficiary_vists', models.IntegerField(help_text='beneficiary visits made by LS in the month')),
                ('num_launched_awcs', models.IntegerField(blank=True, help_text='number of AWCs that have at least one Household registration form', null=True)),
            ],
            options={
                'db_table': 'agg_ls_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWWIncentiveReportMonthly',
            fields=[
                ('state_id', models.CharField(max_length=40)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                ('awc_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('is_launched', models.TextField(null=True)),
                ('block_id', models.CharField(max_length=40)),
                ('supervisor_id', models.TextField(null=True)),
                ('state_name', models.TextField(null=True)),
                ('district_name', models.TextField(null=True)),
                ('block_name', models.TextField(null=True)),
                ('supervisor_name', models.TextField(null=True)),
                ('awc_name', models.TextField(null=True)),
                ('aww_name', models.TextField(null=True)),
                ('contact_phone_number', models.TextField(null=True)),
                ('wer_weighed', models.SmallIntegerField(null=True)),
                ('wer_eligible', models.SmallIntegerField(null=True)),
                ('awc_num_open', models.SmallIntegerField(null=True)),
                ('valid_visits', models.SmallIntegerField(null=True)),
                ('expected_visits', models.DecimalField(decimal_places=2, max_digits=64, null=True)),
            ],
            options={
                'db_table': 'aww_incentive_report_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChildHealthMonthlyView',
            fields=[
                ('case_id', models.TextField(primary_key=True, serialize=False)),
                ('awc_id', models.TextField(blank=True, null=True)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('person_name', models.TextField(blank=True, null=True)),
                ('mother_name', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('sex', models.TextField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('age_in_months', models.IntegerField(blank=True, help_text='age in months at the end of the month', null=True)),
                ('open_in_month', models.IntegerField(blank=True, help_text='Open at the end of the month', null=True)),
                ('valid_in_month', models.IntegerField(blank=True, help_text="Open, alive, registered_status != 'not_registered', migration_status != 'migrated', age at start of month < 73 months", null=True)),
                ('nutrition_status_last_recorded', models.TextField(blank=True, help_text="based on zscore_grading_wfa, Either 'severely_underweight', 'moderately_underweight', or 'normal' when age at start of month < 61 months and valid_in_month or NULL otherwise", null=True)),
                ('current_month_nutrition_status', models.TextField(blank=True, help_text='nutrition_status_last_recorded if recorded in the month', null=True)),
                ('pse_days_attended', models.IntegerField(blank=True, help_text='Number of days a Daily Feeing Form has been submitted against this child casewhen valid_in_month and age in months between 36 and 72 months', null=True)),
                ('recorded_weight', models.DecimalField(blank=True, decimal_places=65535, help_text='weight_child if it has been recorded in the month', max_digits=65535, null=True)),
                ('recorded_height', models.DecimalField(blank=True, decimal_places=65535, help_text='height_child if it has been recorded in the month', max_digits=65535, null=True)),
                ('thr_eligible', models.IntegerField(blank=True, help_text='valid_in_month and age between 6 and 36 months', null=True)),
                ('current_month_stunting', models.TextField(blank=True, help_text="based on zscore_grading_hfa, Either 'severe', 'moderate', or 'normal' when valid_in_monthand zscore_grading_hfa changed in monthor 'unmeasured' otherwise", null=True)),
                ('current_month_wasting', models.TextField(blank=True, help_text="based on zscore_grading_wfh, Either 'severe', 'moderate', or 'normal' when valid_in_monthand zscore_grading_wfh changed in monthor 'unmeasured' otherwise", null=True)),
                ('fully_immunized', models.IntegerField(blank=True, help_text='Child has been immunized', null=True)),
                ('current_month_nutrition_status_sort', models.IntegerField(blank=True, null=True)),
                ('current_month_stunting_sort', models.IntegerField(blank=True, null=True)),
                ('current_month_wasting_sort', models.IntegerField(blank=True, null=True)),
                ('current_month_stunting_v2', models.TextField(blank=True, null=True)),
                ('current_month_wasting_v2', models.TextField(blank=True, null=True)),
                ('current_month_stunting_v2_sort', models.IntegerField(blank=True, null=True)),
                ('current_month_wasting_v2_sort', models.IntegerField(blank=True, null=True)),
                ('aww_phone_number', models.TextField(blank=True, null=True)),
                ('mother_phone_number', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'child_health_monthly_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceDeliveryMonthly',
            fields=[
                ('awc_id', models.TextField(primary_key=True, serialize=False)),
                ('awc_name', models.TextField(blank=True, null=True)),
                ('awc_site_code', models.TextField(blank=True, null=True)),
                ('supervisor_id', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('supervisor_site_code', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('block_name', models.TextField(blank=True, null=True)),
                ('block_site_code', models.TextField(blank=True, null=True)),
                ('district_id', models.TextField(blank=True, null=True)),
                ('district_name', models.TextField(blank=True, null=True)),
                ('district_site_code', models.TextField(blank=True, null=True)),
                ('state_id', models.TextField(blank=True, null=True)),
                ('state_name', models.TextField(blank=True, null=True)),
                ('state_site_code', models.TextField(blank=True, null=True)),
                ('aggregation_level', models.IntegerField(blank=True, help_text='1 for state rows, 2 for district rows, and so on', null=True)),
                ('block_map_location_name', models.TextField(blank=True, null=True)),
                ('district_map_location_name', models.TextField(blank=True, null=True)),
                ('state_map_location_name', models.TextField(blank=True, null=True)),
                ('month', models.DateField(blank=True, null=True)),
                ('num_launched_awcs', models.IntegerField(help_text='Number of AWC launched')),
                ('num_awcs_conducted_cbe', models.IntegerField(help_text='Number of AWC conducted atleast one CBE')),
                ('num_awcs_conducted_vhnd', models.IntegerField(help_text='Number of AWC conducted atleast one VHSND visits')),
                ('gm_0_3', models.IntegerField(blank=True, help_text='weighing efficiency for 0-3 years of children', null=True)),
                ('gm_3_5', models.IntegerField(blank=True, help_text='weighing efficiency for 3-5 years of children', null=True)),
                ('children_0_3', models.IntegerField(blank=True, help_text='Number of children age 0-3 years', null=True)),
                ('children_3_5', models.IntegerField(blank=True, help_text='Number of children age 3-5 years', null=True)),
                ('children_3_6', models.IntegerField(blank=True, help_text='Number of children age 3-6 years', null=True)),
                ('pse_attended_21_days', models.IntegerField(blank=True, help_text='Number of children attended pse for atleast 21 days in the month', null=True)),
                ('lunch_count_21_days', models.IntegerField(blank=True, help_text='Number of children had lunch for atleast 21 days in the month', null=True)),
                ('thr_given_21_days', models.IntegerField(blank=True, help_text='Take home ration given to PW/LW and children(6-36 months) for atleast 21 days', null=True)),
                ('total_thr_candidates', models.IntegerField(blank=True, help_text='Sum of PW/LW  and children of age 6-36 months', null=True)),
                ('valid_visits', models.IntegerField(blank=True, help_text='Valid home visits', null=True)),
                ('expected_visits', models.IntegerField(blank=True, help_text='Expected Home visits', null=True)),
            ],
            options={
                'db_table': 'service_delivery_monthly',
                'managed': False,
            },
        ),
    ]
