# Generated by Django 4.2.20 on 2025-10-14 14:13

from django.db import migrations, models

TABLE_NAME = 'form_processor_commcarecasesql'
DOMAIN_STATE_INDEX_NAME = 'form_proces_domain_3bcfdd_idx'
DOMAIN_USER_INDEX_NAME = 'form_proces_domain_363a82_idx'

CREATE_DOMAIN_STATE_INDEX_SQL = "CREATE INDEX CONCURRENTLY IF NOT EXISTS {} ON {} ({}, {})".format(
    DOMAIN_STATE_INDEX_NAME, TABLE_NAME, 'domain', 'state')
DROP_DOMAIN_STATE_INDEX_SQL = "DROP INDEX CONCURRENTLY IF EXISTS {}".format(DOMAIN_STATE_INDEX_NAME)

CREATE_DOMAIN_USER_INDEX_SQL = "CREATE INDEX CONCURRENTLY IF NOT EXISTS {} ON {} ({}, {})".format(
    DOMAIN_STATE_INDEX_NAME, TABLE_NAME, 'domain', 'user_id')
DROP_DOMAIN_USER_INDEX_SQL = "DROP INDEX CONCURRENTLY IF EXISTS {}".format(DOMAIN_USER_INDEX_NAME)


class Migration(migrations.Migration):

    dependencies = [
        ('form_processor', '0098_rename_caseattachment_case_name_form_proces_case_id_2fd259_idx_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            sql=CREATE_DOMAIN_STATE_INDEX_SQL,
            reverse_sql=DROP_DOMAIN_STATE_INDEX_SQL,
            state_operations=[
                migrations.AddIndex(
                    model_name='xforminstance',
                    index=models.Index(fields=['domain', 'state'], name=DOMAIN_STATE_INDEX_NAME),
                ),
            ]
        ),
        migrations.RunSQL(
            sql=CREATE_DOMAIN_USER_INDEX_SQL,
            reverse_sql=DROP_DOMAIN_USER_INDEX_SQL,
            state_operations=[
                migrations.AddIndex(
                    model_name='xforminstance',
                    index=models.Index(fields=['domain', 'user_id'], name=DOMAIN_USER_INDEX_NAME),
                ),
            ]
        )
    ]
