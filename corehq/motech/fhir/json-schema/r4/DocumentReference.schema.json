{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "file:DocumentReference.schema.json",
  "$ref": "#/definitions/DocumentReference",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "definitions": {
    "DocumentReference": {
      "allOf": [
        {
          "$ref": "DomainResource.schema.json#/definitions/DomainResource"
        },
        {
          "description": "A reference to a document.",
          "properties": {
            "resourceType": {
              "description": "This is a DocumentReference resource",
              "type": "string",
              "enum": [
                "DocumentReference"
              ]
            },
            "masterIdentifier": {
              "description": "Document identifier as assigned by the source of the document. This identifier is specific to this version of the document. This unique identifier may be used elsewhere to identify this version of the document.",
              "$ref": "Identifier.schema.json#/definitions/Identifier"
            },
            "identifier": {
              "description": "Other identifiers associated with the document, including version independent identifiers.",
              "type": "array",
              "items": {
                "$ref": "Identifier.schema.json#/definitions/Identifier"
              }
            },
            "status": {
              "description": "The status of this document reference.",
              "enum": [
                "current",
                "superseded",
                "entered-in-error"
              ],
              "type": "string"
            },
            "_status": {
              "description": "Extensions for status",
              "$ref": "Element.schema.json#/definitions/Element"
            },
            "docStatus": {
              "description": "The status of the underlying document.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "_docStatus": {
              "description": "Extensions for docStatus",
              "$ref": "Element.schema.json#/definitions/Element"
            },
            "type": {
              "description": "Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced.",
              "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
            },
            "class": {
              "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type.",
              "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
            },
            "subject": {
              "description": "Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure).",
              "$ref": "Reference.schema.json#/definitions/Reference"
            },
            "created": {
              "description": "When the document was created.",
              "type": "string",
              "pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            },
            "_created": {
              "description": "Extensions for created",
              "$ref": "Element.schema.json#/definitions/Element"
            },
            "indexed": {
              "description": "When the document reference was created.",
              "type": "string"
            },
            "_indexed": {
              "description": "Extensions for indexed",
              "$ref": "Element.schema.json#/definitions/Element"
            },
            "author": {
              "description": "Identifies who is responsible for adding the information to the document.",
              "type": "array",
              "items": {
                "$ref": "Reference.schema.json#/definitions/Reference"
              }
            },
            "authenticator": {
              "description": "Which person or organization authenticates that this document is valid.",
              "$ref": "Reference.schema.json#/definitions/Reference"
            },
            "custodian": {
              "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the document.",
              "$ref": "Reference.schema.json#/definitions/Reference"
            },
            "relatesTo": {
              "description": "Relationships that this document has with other document references that already exist.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentReference_RelatesTo"
              }
            },
            "description": {
              "description": "Human-readable description of the source document. This is sometimes known as the \"title\".",
              "type": "string"
            },
            "_description": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json#/definitions/Element"
            },
            "securityLabel": {
              "description": "A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the \"reference\" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to.",
              "type": "array",
              "items": {
                "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
              }
            },
            "content": {
              "description": "The document and format referenced. There may be multiple content element repetitions, each with a different format.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentReference_Content"
              }
            },
            "context": {
              "description": "The clinical context in which the document was prepared.",
              "$ref": "#/definitions/DocumentReference_Context"
            }
          },
          "required": [
            "type",
            "content",
            "resourceType"
          ]
        }
      ]
    },
    "DocumentReference_RelatesTo": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json#/definitions/BackboneElement"
        },
        {
          "description": "A reference to a document.",
          "properties": {
            "code": {
              "description": "The type of relationship that this document has with anther document.",
              "enum": [
                "replaces",
                "transforms",
                "signs",
                "appends"
              ],
              "type": "string"
            },
            "_code": {
              "description": "Extensions for code",
              "$ref": "Element.schema.json#/definitions/Element"
            },
            "target": {
              "description": "The target document of this relationship.",
              "$ref": "Reference.schema.json#/definitions/Reference"
            }
          },
          "required": [
            "target"
          ]
        }
      ]
    },
    "DocumentReference_Content": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json#/definitions/BackboneElement"
        },
        {
          "description": "A reference to a document.",
          "properties": {
            "attachment": {
              "description": "The document or URL of the document along with critical metadata to prove content has integrity.",
              "$ref": "Attachment.schema.json#/definitions/Attachment"
            },
            "format": {
              "description": "An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType.",
              "$ref": "Coding.schema.json#/definitions/Coding"
            }
          },
          "required": [
            "attachment"
          ]
        }
      ]
    },
    "DocumentReference_Context": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json#/definitions/BackboneElement"
        },
        {
          "description": "A reference to a document.",
          "properties": {
            "encounter": {
              "description": "Describes the clinical encounter or type of care that the document content is associated with.",
              "$ref": "Reference.schema.json#/definitions/Reference"
            },
            "event": {
              "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
              "type": "array",
              "items": {
                "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
              }
            },
            "period": {
              "description": "The time period over which the service that is described by the document was provided.",
              "$ref": "Period.schema.json#/definitions/Period"
            },
            "facilityType": {
              "description": "The kind of facility where the patient was seen.",
              "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
            },
            "practiceSetting": {
              "description": "This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty.",
              "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
            },
            "sourcePatientInfo": {
              "description": "The Patient Information as known when the document was published. May be a reference to a version specific, or contained.",
              "$ref": "Reference.schema.json#/definitions/Reference"
            },
            "related": {
              "description": "Related identifiers or resources associated with the DocumentReference.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentReference_Related"
              }
            }
          }
        }
      ]
    },
    "DocumentReference_Related": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json#/definitions/BackboneElement"
        },
        {
          "description": "A reference to a document.",
          "properties": {
            "identifier": {
              "description": "Related identifier to this DocumentReference. If both id and ref are present they shall refer to the same thing.",
              "$ref": "Identifier.schema.json#/definitions/Identifier"
            },
            "ref": {
              "description": "Related Resource to this DocumentReference. If both id and ref are present they shall refer to the same thing.",
              "$ref": "Reference.schema.json#/definitions/Reference"
            }
          }
        }
      ]
    }
  }
}