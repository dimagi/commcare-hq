# Generated by Django 3.2.20 on 2023-09-17 15:22

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('repeaters', '0005_datasourcerepeater'),
    ]

    operations = [
        migrations.AlterField(
            model_name='sqlrepeatrecord',
            name='state',
            field=models.PositiveSmallIntegerField(choices=[
                (1, 'Pending'),
                (2, 'Failed'),
                (4, 'Succeeded'),
                (8, 'Cancelled'),
                (16, 'Empty')
            ], default=1),
        ),
        migrations.AlterField(
            model_name='sqlrepeatrecordattempt',
            name='state',
            field=models.PositiveSmallIntegerField(choices=[
                (1, 'Pending'),
                (2, 'Failed'),
                (4, 'Succeeded'),
                (8, 'Cancelled'),
                (16, 'Empty')
            ]),
        ),
        migrations.AlterField(
            model_name='sqlrepeatrecordattempt',
            name='repeat_record',
            field=models.ForeignKey(
                on_delete=models.deletion.DO_NOTHING,
                related_name='attempt_set',
                to='repeaters.sqlrepeatrecord',
            ),
        ),
        migrations.AddField(
            model_name='sqlrepeatrecord',
            name='next_check',
            field=models.DateTimeField(default=None, null=True),
        ),
        migrations.AddIndex(
            model_name='sqlrepeatrecord',
            index=models.Index(
                condition=models.Q(('next_check__isnull', False)),
                fields=['next_check'],
                name='next_check_not_null'
            ),
        ),
        migrations.AddConstraint(
            model_name='sqlrepeatrecord',
            constraint=models.CheckConstraint(
                check=models.Q(
                    ('next_check__isnull', True),
                    models.Q(('next_check__isnull', False), ('state', 1)),
                    models.Q(('next_check__isnull', False), ('state', 2)),
                    _connector='OR'
                ),
                name='next_check_pending_or_null'),
        ),
        migrations.RemoveIndex(
            model_name='sqlrepeatrecord',
            name='repeaters_r_couch_i_ea5782_idx',
        ),
        migrations.AddConstraint(
            model_name='sqlrepeatrecord',
            constraint=models.UniqueConstraint(
                condition=models.Q(('couch_id__isnull', False)),
                fields=('couch_id',),
                name='unique_couch_id',
            ),
        ),
        migrations.AddField(
            model_name='sqlrepeatrecord',
            name='max_possible_tries',
            field=models.IntegerField(default=6),
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.RemoveField(
                    # Actual removal in the database is planned later.
                    model_name='repeater',
                    name='repeater_id',
                ),
                migrations.AlterField(
                    # Adding a default has no associated SQL
                    model_name='repeater',
                    name='id',
                    field=models.UUIDField(db_column='id_', default=uuid.uuid4, primary_key=True, serialize=False),
                ),
            ],
        ),
    ]
