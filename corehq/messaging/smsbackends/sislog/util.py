

GSM_03_38_POR_BASIC = {
    0x00: "@",
    0x01: "\u00a3",
    0x02: "$",
    0x03: "\u00a5",
    0x04: "\u00ea",
    0x05: "\u00e9",
    0x06: "\u00fa",
    0x07: "\u00ed",
    0x08: "\u00f3",
    0x09: "\u00e7",
    0x0a: "\n",
    0x0b: "\u00d4",
    0x0c: "\u00f4",
    0x0d: "\r",
    0x0e: "\u00c1",
    0x0f: "\u00e1",
    0x10: "\u0394",
    0x11: "_",
    0x12: "\u00aa",
    0x13: "\u00c7",
    0x14: "\u00c0",
    0x15: "\u221e",
    0x16: "^",
    0x17: "\\",
    0x18: "\u20ac",
    0x19: "\u00d3",
    0x1a: "|",
    0x1b: "",
    0x1c: "\u00c2",
    0x1d: "\u00e2",
    0x1e: "\u00ca",
    0x1f: "\u00c9",
    0x20: " ",
    0x21: "!",
    0x22: '"',
    0x23: "#",
    0x24: "\u00ba",
    0x25: "%",
    0x26: "&",
    0x27: "'",
    0x28: "(",
    0x29: ")",
    0x2a: "*",
    0x2b: "+",
    0x2c: ",",
    0x2d: "-",
    0x2e: ".",
    0x2f: "/",
    0x30: "0",
    0x31: "1",
    0x32: "2",
    0x33: "3",
    0x34: "4",
    0x35: "5",
    0x36: "6",
    0x37: "7",
    0x38: "8",
    0x39: "9",
    0x3a: ":",
    0x3b: ";",
    0x3c: "<",
    0x3d: "=",
    0x3e: ">",
    0x3f: "?",
    0x40: "\u00cd",
    0x41: "A",
    0x42: "B",
    0x43: "C",
    0x44: "D",
    0x45: "E",
    0x46: "F",
    0x47: "G",
    0x48: "H",
    0x49: "I",
    0x4a: "J",
    0x4b: "K",
    0x4c: "L",
    0x4d: "M",
    0x4e: "N",
    0x4f: "O",
    0x50: "P",
    0x51: "Q",
    0x52: "R",
    0x53: "S",
    0x54: "T",
    0x55: "U",
    0x56: "V",
    0x57: "W",
    0x58: "X",
    0x59: "Y",
    0x5a: "Z",
    0x5b: "\u00c3",
    0x5c: "\u00d5",
    0x5d: "\u00da",
    0x5e: "\u00dc",
    0x5f: "\u00a7",
    0x60: "~",
    0x61: "a",
    0x62: "b",
    0x63: "c",
    0x64: "d",
    0x65: "e",
    0x66: "f",
    0x67: "g",
    0x68: "h",
    0x69: "i",
    0x6a: "j",
    0x6b: "k",
    0x6c: "l",
    0x6d: "m",
    0x6e: "n",
    0x6f: "o",
    0x70: "p",
    0x71: "q",
    0x72: "r",
    0x73: "s",
    0x74: "t",
    0x75: "u",
    0x76: "v",
    0x77: "w",
    0x78: "x",
    0x79: "y",
    0x7a: "z",
    0x7b: "\u00e3",
    0x7c: "\u00f5",
    0x7d: "`",
    0x7e: "\u00fc",
    0x7f: "\u00e0",
}


GSM_03_38_POR_EXTENSION = {
    0x00: "",
    0x01: "",
    0x02: "",
    0x03: "",
    0x04: "",
    0x05: "\u00ea",
    0x06: "",
    0x07: "",
    0x08: "",
    0x09: "\u00e7",
    0x0a: "\n",
    0x0b: "\u00d4",
    0x0c: "\u00f4",
    0x0d: "",
    0x0e: "\u00c1",
    0x0f: "\u00e1",
    0x10: "",
    0x11: "",
    0x12: "\u03a6",
    0x13: "\u0393",
    0x14: "^",
    0x15: "\u03a9",
    0x16: "\u03a0",
    0x17: "\u03a8",
    0x18: "\u03a3",
    0x19: "\u0398",
    0x1a: "",
    0x1b: "",
    0x1c: "",
    0x1d: "",
    0x1e: "",
    0x1f: "\u00ca",
    0x20: "",
    0x21: "",
    0x22: "",
    0x23: "",
    0x24: "",
    0x25: "",
    0x26: "",
    0x27: "",
    0x28: "{",
    0x29: "}",
    0x2a: "",
    0x2b: "",
    0x2c: "",
    0x2d: "",
    0x2e: "",
    0x2f: "\\",
    0x30: "",
    0x31: "",
    0x32: "",
    0x33: "",
    0x34: "",
    0x35: "",
    0x36: "",
    0x37: "",
    0x38: "",
    0x39: "",
    0x3a: "",
    0x3b: "",
    0x3c: "[",
    0x3d: "~",
    0x3e: "]",
    0x3f: "",
    0x40: "|",
    0x41: "\u00c0",
    0x42: "",
    0x43: "",
    0x44: "",
    0x45: "",
    0x46: "",
    0x47: "",
    0x48: "",
    0x49: "\u00cd",
    0x4a: "",
    0x4b: "",
    0x4c: "",
    0x4d: "",
    0x4e: "",
    0x4f: "\u00d3",
    0x50: "",
    0x51: "",
    0x52: "",
    0x53: "",
    0x54: "",
    0x55: "\u00da",
    0x56: "",
    0x57: "",
    0x58: "",
    0x59: "",
    0x5a: "",
    0x5b: "\u00c3",
    0x5c: "\u00d5",
    0x5d: "",
    0x5e: "",
    0x5f: "",
    0x60: "",
    0x61: "\u00c2",
    0x62: "",
    0x63: "",
    0x64: "",
    0x65: "\u20ac",
    0x66: "",
    0x67: "",
    0x68: "",
    0x69: "\u00ed",
    0x6a: "",
    0x6b: "",
    0x6c: "",
    0x6d: "",
    0x6e: "",
    0x6f: "\u00f3",
    0x70: "",
    0x71: "",
    0x72: "",
    0x73: "",
    0x74: "",
    0x75: "\u00fa",
    0x76: "",
    0x77: "",
    0x78: "",
    0x79: "",
    0x7a: "",
    0x7b: "\u00e3",
    0x7c: "\u00f5",
    0x7d: "",
    0x7e: "",
    0x7f: "\u00e2",
}


# These are characters that shouldn't be in a properly decoded string
UNRECOGNIZED_CHAR_CODES = {
    0x00: True,
    0x01: True,
    0x02: True,
    0x03: True,
    0x04: True,
    0x05: True,
    0x06: True,
    0x07: True,
    0x08: True,
    0x09: True,
    0x0b: True,
    0x0c: True,
    0x0e: True,
    0x0f: True,
    0x10: True,
    0x11: True,
    0x12: True,
    0x13: True,
    0x14: True,
    0x15: True,
    0x16: True,
    0x17: True,
    0x18: True,
    0x19: True,
    0x1a: True,
    0x1b: True,
    0x1c: True,
    0x1d: True,
    0x1e: True,
    0x1f: True,
    0x7f: True,
}


ESCAPE_CHAR = 0x1b


def looks_like_gsm(text):
    for char in text:
        if UNRECOGNIZED_CHAR_CODES.get(ord(char), False):
            return True
    return False


def gsm_to_unicode(text):
    """
      Converts each character in text to it's equivalent GSM-decoded
    character. If the character is anything other than ESCAPE_CHAR,
    then it's decoded with GSM_03_38_POR_BASIC.
      If a character is the ESCAPE_CHAR, then it is skipped and the
    next character is decoded with GSM_03_38_POR_EXTENSION.
    """
    result = ""
    is_escape = False
    for char in text:
        gsm_char_code = ord(char)
        if gsm_char_code == ESCAPE_CHAR:
            is_escape = True
        elif is_escape:
            ext_char = GSM_03_38_POR_EXTENSION.get(gsm_char_code, "")
            if ext_char:
                result += ext_char
            else:
                result += " %s" % GSM_03_38_POR_BASIC.get(gsm_char_code, "")
            is_escape = False
        else:
            result += GSM_03_38_POR_BASIC.get(gsm_char_code, "")
    return result


def convert_raw_string(text):
    """
    Unfortunately, it's not possible to tell whether we'll get a message
    that's encoded with GSM or not. So all we can do is decode
    messages that look like they are encoded with GSM.
    """
    if looks_like_gsm(text):
        return gsm_to_unicode(text)
    else:
        return text


