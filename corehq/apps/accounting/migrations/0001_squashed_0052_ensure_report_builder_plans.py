from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import jsonfield.fields

import corehq.util.mixin
from corehq.apps.accounting.bootstrap.config.enterprise import \
    BOOTSTRAP_CONFIG as enterprise_config
from corehq.apps.accounting.bootstrap.config.report_builder_v0 import \
    BOOTSTRAP_CONFIG as report_builder_config
from corehq.apps.accounting.bootstrap.config.resellers_and_managed_hosting import \
    BOOTSTRAP_CONFIG as resellers_config
from corehq.apps.accounting.bootstrap.config.user_buckets_jan_2017 import \
    BOOTSTRAP_CONFIG as self_service_config
from corehq.apps.accounting.bootstrap.utils import ensure_plans
from corehq.apps.hqadmin.management.commands.cchq_prbac_bootstrap import (
    cchq_prbac_bootstrap,
)


def _cchq_software_plan_bootstrap(apps, schema_editor):
    pricing_config = self_service_config
    pricing_config.update(enterprise_config)
    pricing_config.update(report_builder_config)
    pricing_config.update(resellers_config)
    ensure_plans(pricing_config, verbose=True, apps=apps)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_prbac', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('salesforce_account_id', models.CharField(blank=True, db_index=True, help_text='This is how we link to the salesforce account', max_length=80, null=True)),
                ('created_by', models.CharField(blank=True, max_length=80)),
                ('created_by_domain', models.CharField(blank=True, max_length=256, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('dimagi_contact', models.EmailField(blank=True, max_length=254)),
                ('is_auto_invoiceable', models.BooleanField(default=False)),
                ('date_confirmed_extra_charges', models.DateTimeField(blank=True, null=True)),
                ('account_type', models.CharField(choices=[('CONTRACT', 'Created by contract'), ('USER_CREATED', 'Created by user'), ('GLOBAL_SERVICES', 'Created by Global Services'), ('INVOICE_GENERATED', 'Generated by an invoice'), ('TRIAL', 'Is trial account')], default='CONTRACT', max_length=25)),
                ('is_active', models.BooleanField(default=True)),
                ('entry_point', models.CharField(choices=[('CONTRACTED', 'Contracted'), ('SELF_STARTED', 'Self-started'), ('NOT_SET', 'Not Set')], default='NOT_SET', max_length=25)),
                ('auto_pay_user', models.CharField(blank=True, max_length=80, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('last_payment_method', models.CharField(choices=[('CC_ONE_TIME', 'Credit Card - One Time'), ('CC_AUTO', 'Credit Card - Autopay'), ('WIRE', 'Wire'), ('ACH', 'ACH'), ('OTHER', 'Other'), ('BU_PAYMENT', 'Payment to local BU'), ('NONE', 'None')], default='NONE', max_length=25)),
                ('pre_or_post_pay', models.CharField(choices=[('PREPAY', 'Prepay'), ('POSTPAY', 'Postpay'), ('NOT_SET', 'Not Set')], default='NOT_SET', max_length=25)),
            ],
            bases=(corehq.util.mixin.ValidateModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BillingRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('emailed_to', models.CharField(db_index=True, max_length=254)),
                ('skipped_email', models.BooleanField(default=False)),
                ('pdf_data_id', models.CharField(max_length=48)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('MANUAL', 'manual'), ('SALESFORCE', 'via Salesforce'), ('INVOICE', 'invoice generated'), ('LINE_ITEM', 'line item generated'), ('TRANSFER', 'transfer from another credit line'), ('DIRECT_PAYMENT', 'payment from client received')], default='MANUAL', max_length=25)),
                ('note', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('web_user', models.CharField(blank=True, max_length=80, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            bases=(corehq.util.mixin.ValidateModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CreditLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(blank=True, choices=[('', '')], max_length=25, null=True)),
                ('feature_type', models.CharField(blank=True, choices=[('User', 'User'), ('SMS', 'SMS')], max_length=10, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('balance', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            bases=(corehq.util.mixin.ValidateModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(db_index=True, max_length=25)),
                ('symbol', models.CharField(max_length=10)),
                ('rate_to_default', models.DecimalField(decimal_places=9, default=Decimal('1.0'), max_digits=20)),
                ('date_updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DefaultProductPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition', models.CharField(choices=[('Community', 'Community'), ('Standard', 'Standard'), ('Pro', 'Pro'), ('Advanced', 'Advanced'), ('Enterprise', 'Enterprise'), ('Reseller', 'Reseller'), ('Managed Hosting', 'Managed Hosting')], default='Community', max_length=25)),
                ('is_trial', models.BooleanField(default=False)),
                ('is_report_builder_enabled', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('feature_type', models.CharField(choices=[('User', 'User'), ('SMS', 'SMS')], db_index=True, max_length=10)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Monthly Fee')),
                ('monthly_limit', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(2147483647), django.core.validators.MinValueValidator(-2147483648)], verbose_name='Monthly Included Limit')),
                ('per_excess_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Fee Per Excess of Limit')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Feature')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('tax_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('balance', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('date_due', models.DateField(db_index=True, null=True)),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('is_hidden_to_ops', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_description', models.TextField(blank=True, null=True)),
                ('base_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('unit_description', models.TextField(blank=True, null=True)),
                ('unit_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2147483647), django.core.validators.MinValueValidator(-2147483648)])),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('feature_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.FeatureRate')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Invoice')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_user', models.CharField(db_index=True, max_length=80, null=True)),
                ('method_type', models.CharField(choices=[('Stripe', 'Stripe')], db_index=True, default='Stripe', max_length=50)),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.PaymentMethod')),
            ],
        ),
        migrations.CreateModel(
            name='SoftwarePlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('description', models.TextField(blank=True, help_text='If the visibility is INTERNAL, this description field will be used.')),
                ('edition', models.CharField(choices=[('Community', 'Community'), ('Standard', 'Standard'), ('Pro', 'Pro'), ('Advanced', 'Advanced'), ('Enterprise', 'Enterprise'), ('Reseller', 'Reseller'), ('Managed Hosting', 'Managed Hosting')], default='Enterprise', max_length=25)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Anyone can subscribe'), ('INTERNAL', 'Dimagi must create subscription'), ('TRIAL', 'This is a Trial Plan')], default='INTERNAL', max_length=10)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoftwarePlanVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('feature_rates', models.ManyToManyField(blank=True, to='accounting.FeatureRate')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.SoftwarePlan')),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('product_type', models.CharField(choices=[('CommCare', 'CommCare'), ('CommTrack', 'CommTrack'), ('CommConnect', 'CommConnect')], db_index=True, max_length=25)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareProductRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.SoftwareProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=256, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salesforce_contract_id', models.CharField(blank=True, max_length=80, null=True)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(blank=True, null=True)),
                ('date_delay_invoicing', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('do_not_invoice', models.BooleanField(default=False)),
                ('no_invoice_reason', models.CharField(blank=True, max_length=256, null=True)),
                ('do_not_email_invoice', models.BooleanField(default=False)),
                ('do_not_email_reminder', models.BooleanField(default=False)),
                ('auto_generate_credits', models.BooleanField(default=False)),
                ('is_trial', models.BooleanField(default=False)),
                ('skip_invoicing_if_no_feature_charges', models.BooleanField(default=False)),
                ('service_type', models.CharField(choices=[('IMPLEMENTATION', 'Implementation'), ('PRODUCT', 'Product'), ('TRIAL', 'Trial'), ('EXTENDED_TRIAL', 'Extended Trial'), ('SANDBOX', 'Sandbox'), ('INTERNAL', 'Internal')], default='NOT_SET', max_length=25)),
                ('pro_bono_status', models.CharField(choices=[('FULL_PRICE', 'Full Price'), ('DISCOUNTED', 'Discounted'), ('PRO_BONO', 'Pro Bono')], default='FULL_PRICE', max_length=25)),
                ('funding_source', models.CharField(choices=[('DIMAGI', 'Dimagi'), ('CLIENT', 'Client Funding'), ('EXTERNAL', 'External Funding')], default='CLIENT', max_length=25)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('is_hidden_to_ops', models.BooleanField(default=False)),
                ('skip_auto_downgrade', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('CREATE', 'A new subscription created from scratch.'), ('MODIFY', 'Some part of the subscription was modified...likely a date.'), ('CANCEL', 'The subscription was cancelled with no followup subscription.'), ('UPGRADE', 'The subscription was upgraded to the related subscription.'), ('DOWNGRADE', 'The subscription was downgraded to the related subscription.'), ('SWITCH', 'The plan was changed to the related subscription and was neither an upgrade or downgrade.'), ('REACTIVATE', 'The subscription was reactivated.'), ('RENEW', 'The subscription was renewed.')], default='CREATE', max_length=50)),
                ('method', models.CharField(choices=[('USER', 'User'), ('INTERNAL', 'Ops'), ('TASK', 'Task (Invoicing)'), ('TRIAL', '30 Day Trial')], default='INTERNAL', max_length=50)),
                ('note', models.TextField(null=True)),
                ('web_user', models.CharField(max_length=80, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('new_date_start', models.DateField()),
                ('new_date_end', models.DateField(blank=True, null=True)),
                ('new_date_delay_invoicing', models.DateField(blank=True, null=True)),
                ('new_salesforce_contract_id', models.CharField(blank=True, max_length=80, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.Invoice')),
                ('related_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subscriptionadjustment_related', to='accounting.Subscription')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Subscription')),
            ],
        ),
        migrations.CreateModel(
            name='WireBillingRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('emailed_to', models.CharField(db_index=True, max_length=254)),
                ('skipped_email', models.BooleanField(default=False)),
                ('pdf_data_id', models.CharField(max_length=48)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WireInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('tax_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('balance', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('date_due', models.DateField(db_index=True, null=True)),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('is_hidden_to_ops', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('domain', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BillingContactInfo',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounting.BillingAccount')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('email_list', jsonfield.fields.JSONField(default=list, help_text='We will email communications regarding your account to the emails specified here.', verbose_name='Contact Emails')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Company / Organization')),
                ('first_line', models.CharField(max_length=50, verbose_name='Address First Line')),
                ('second_line', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address Second Line')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('state_province_region', models.CharField(max_length=50, verbose_name='State / Province / Region')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(max_length=50, verbose_name='Country')),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='wirebillingrecord',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.WireInvoice'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.BillingAccount'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.SoftwarePlanVersion'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='subscriber',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Subscriber'),
        ),
        migrations.AddField(
            model_name='softwareplanversion',
            name='product_rate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.SoftwareProductRate'),
        ),
        migrations.AddField(
            model_name='softwareplanversion',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_prbac.Role'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='product_rate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.SoftwareProductRate'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Subscription'),
        ),
        migrations.AddField(
            model_name='defaultproductplan',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.SoftwarePlan'),
        ),
        migrations.AddField(
            model_name='creditline',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.BillingAccount'),
        ),
        migrations.AddField(
            model_name='creditline',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.Subscription'),
        ),
        migrations.AddField(
            model_name='creditadjustment',
            name='credit_line',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.CreditLine'),
        ),
        migrations.AddField(
            model_name='creditadjustment',
            name='invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.Invoice'),
        ),
        migrations.AddField(
            model_name='creditadjustment',
            name='line_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.LineItem'),
        ),
        migrations.AddField(
            model_name='creditadjustment',
            name='payment_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.PaymentRecord'),
        ),
        migrations.AddField(
            model_name='creditadjustment',
            name='related_credit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='creditadjustment_related', to='accounting.CreditLine'),
        ),
        migrations.AddField(
            model_name='billingrecord',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Invoice'),
        ),
        migrations.AddField(
            model_name='billingaccount',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.Currency'),
        ),
        migrations.CreateModel(
            name='StripePaymentMethod',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('accounting.paymentmethod',),
        ),
        migrations.CreateModel(
            name='WirePrepaymentBillingRecord',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('accounting.wirebillingrecord',),
        ),
        migrations.CreateModel(
            name='WirePrepaymentInvoice',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('accounting.wireinvoice',),
        ),
        migrations.AlterUniqueTogether(
            name='defaultproductplan',
            unique_together=set([('edition', 'is_trial', 'is_report_builder_enabled')]),
        ),
    ] + [
        migrations.RunPython(cchq_prbac_bootstrap),
        migrations.RunPython(_cchq_software_plan_bootstrap),
    ]
