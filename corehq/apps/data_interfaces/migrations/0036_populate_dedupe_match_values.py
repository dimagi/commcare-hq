# Generated by Django 3.2.23 on 2023-12-04 22:44
from django.db import migrations, transaction
from corehq.apps.data_interfaces.models import CaseDuplicate
from corehq.form_processor.models.cases import CommCareCase


def forwards_func(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    process_records(db_alias=db_alias)


def reverse_func(apps, schema_editor):
    # Reverse isn't really necessary, because this is an intermediary migration
    # the `match_values` field is not used by the code,
    # so the real reverse would be reversing the prior migration to drop the field entirely
    pass


def process_records(batch_size=10, db_alias=None):
    for batch in get_iter(batch_size, db_alias=db_alias):
        with transaction.atomic():
            updates = []
            for duplicate in batch:
                case = CommCareCase.objects.get_case(duplicate.case_id)
                duplicate.match_values = CaseDuplicate.case_and_action_to_hash(case, duplicate.action)
                updates.append(duplicate)
            CaseDuplicate.objects.bulk_update(updates, ['match_values'])


def get_iter(batch_size, db_alias=None):
    while True:
        duplicates = CaseDuplicate.objects.using(db_alias).filter(match_values__isnull=True)[:batch_size]
        if not duplicates:
            return

        yield duplicates


class Migration(migrations.Migration):

    dependencies = [
        ('data_interfaces', '0035_dedupe_add_match_values'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func, elidable=True)
    ]
