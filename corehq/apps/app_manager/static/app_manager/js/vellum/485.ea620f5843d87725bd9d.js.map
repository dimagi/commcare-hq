{"version":3,"file":"485.ea620f5843d87725bd9d.js","mappings":"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","sources":["webpack://vellum/./src/less-style/xpath-editor.less","webpack://vellum/./src/less-style/xpath-editor.less?bfa0","webpack://vellum/./src/expressionEditor.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.clearfix {\n  *zoom: 1;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.clearfix:after {\n  clear: both;\n}\n.hide-text {\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0;\n}\n.input-block-level {\n  display: block;\n  width: 100%;\n  min-height: 30px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.fd-xpath-editor .fd-xpath-editor-content {\n  padding: 20px;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset {\n  position: relative;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset legend {\n  *zoom: 1;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset legend:before,\n.fd-xpath-editor .fd-xpath-editor-content fieldset legend:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset legend:after {\n  clear: both;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset legend button {\n  margin-bottom: 5px;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset .fd-xpath-editor-expressions .xpath-expression-group:last-child {\n  margin-bottom: 0;\n}\n.fd-xpath-editor .fd-xpath-editor-content fieldset .fd-xpath-editor-expressions .xpath-expression-group .validation-results {\n  display: inline-block;\n  padding: 5px 25px;\n  margin-bottom: 0;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/less-style/lib/bootstrap/mixins.less\",\"webpack://./src/less-style/xpath-editor.less\"],\"names\":[],\"mappings\":\"AAWA;GACE,OAAA;ACVF;ADWE;;EAEE,cAAA;EACA,WAAA;EAGA,cAAA;ACXJ;ADaE;EACE,WAAA;ACXJ;AD8FA;EACE,WAAA;EACA,kBAAA;EACA,iBAAA;EACA,6BAAA;EACA,SAAA;AC5FF;ADuIA;EACE,cAAA;EACA,WAAA;EACA,gBAAA;EAqLA,8BAAA;EACG,2BAAA;EACK,sBAAA;ACzTV;AAtBA;EAIQ,aAAA;AAqBR;AAzBA;EAQY,kBAAA;AAoBZ;AA5BA;GDQE,OAAA;ACuBF;ADtBE;;EAEE,cAAA;EACA,WAAA;EAGA,cAAA;ACsBJ;ADpBE;EACE,WAAA;ACsBJ;AAxCA;EAiBoB,kBAAA;AA0BpB;AAnBoB;EACI,gBAAA;AAqBxB;AA9CA;EA8BwB,qBAAA;EACA,iBAAA;EACA,gBAAA;AAmBxB\",\"sourcesContent\":[\"//\\n// Mixins\\n// --------------------------------------------------\\n\\n\\n// UTILITY MIXINS\\n// --------------------------------------------------\\n\\n// Clearfix\\n// --------\\n// For clearing floats like a boss h5bp.com/q\\n.clearfix {\\n  *zoom: 1;\\n  &:before,\\n  &:after {\\n    display: table;\\n    content: \\\"\\\";\\n    // Fixes Opera/contenteditable bug:\\n    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952\\n    line-height: 0;\\n  }\\n  &:after {\\n    clear: both;\\n  }\\n}\\n\\n// Webkit-style focus\\n// ------------------\\n.tab-focus() {\\n  // Default\\n  outline: thin dotted #333;\\n  // Webkit\\n  outline: 5px auto -webkit-focus-ring-color;\\n  outline-offset: -2px;\\n}\\n\\n// Center-align a block level element\\n// ----------------------------------\\n.center-block() {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n// IE7 inline-block\\n// ----------------\\n.ie7-inline-block() {\\n  *display: inline; /* IE7 inline-block hack */\\n  *zoom: 1;\\n}\\n\\n// IE7 likes to collapse whitespace on either side of the inline-block elements.\\n// Ems because we're attempting to match the width of a space character. Left\\n// version is for form buttons, which typically come after other elements, and\\n// right version is for icons, which come before. Applying both is ok, but it will\\n// mean that space between those elements will be .6em (~2 space characters) in IE7,\\n// instead of the 1 space in other browsers.\\n.ie7-restore-left-whitespace() {\\n  *margin-left: .3em;\\n\\n  &:first-child {\\n    *margin-left: 0;\\n  }\\n}\\n\\n.ie7-restore-right-whitespace() {\\n  *margin-right: .3em;\\n}\\n\\n// Sizing shortcuts\\n// -------------------------\\n.size(@height, @width) {\\n  width: @width;\\n  height: @height;\\n}\\n.square(@size) {\\n  .size(@size, @size);\\n}\\n\\n// Placeholder text\\n// -------------------------\\n.placeholder(@color: @placeholderText) {\\n  &:-moz-placeholder {\\n    color: @color;\\n  }\\n  &:-ms-input-placeholder {\\n    color: @color;\\n  }\\n  &::-webkit-input-placeholder {\\n    color: @color;\\n  }\\n}\\n\\n// Text overflow\\n// -------------------------\\n// Requires inline-block or block for proper styling\\n.text-overflow() {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n// CSS image replacement\\n// -------------------------\\n// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757\\n.hide-text {\\n  font: 0/0 a;\\n  color: transparent;\\n  text-shadow: none;\\n  background-color: transparent;\\n  border: 0;\\n}\\n\\n\\n// FONTS\\n// --------------------------------------------------\\n\\n#font {\\n  #family {\\n    .serif() {\\n      font-family: @serifFontFamily;\\n    }\\n    .sans-serif() {\\n      font-family: @sansFontFamily;\\n    }\\n    .monospace() {\\n      font-family: @monoFontFamily;\\n    }\\n  }\\n  .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {\\n    font-size: @size;\\n    font-weight: @weight;\\n    line-height: @lineHeight;\\n  }\\n  .serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {\\n    #font > #family > .serif();\\n    #font > .shorthand(@size, @weight, @lineHeight);\\n  }\\n  .sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {\\n    #font > #family > .sans-serif();\\n    #font > .shorthand(@size, @weight, @lineHeight);\\n  }\\n  .monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {\\n    #font > #family > .monospace();\\n    #font > .shorthand(@size, @weight, @lineHeight);\\n  }\\n}\\n\\n\\n// FORMS\\n// --------------------------------------------------\\n\\n// Block level inputs\\n.input-block-level {\\n  display: block;\\n  width: 100%;\\n  min-height: @inputHeight; // Make inputs at least the height of their button counterpart (base line-height + padding + border)\\n  .box-sizing(border-box); // Makes inputs behave like true block-level elements\\n}\\n\\n\\n\\n// Mixin for form field states\\n.formFieldState(@textColor: #555, @borderColor: #ccc, @backgroundColor: #f5f5f5) {\\n  // Set the text color\\n  .control-label,\\n  .help-block,\\n  .help-inline {\\n    color: @textColor;\\n  }\\n  // Style inputs accordingly\\n  .checkbox,\\n  .radio,\\n  input,\\n  select,\\n  textarea {\\n    color: @textColor;\\n  }\\n  input,\\n  select,\\n  textarea {\\n    border-color: @borderColor;\\n    .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work\\n    &:focus {\\n      border-color: darken(@borderColor, 10%);\\n      @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@borderColor, 20%);\\n      .box-shadow(@shadow);\\n    }\\n  }\\n  // Give a small background color for input-prepend/-append\\n  .input-prepend .add-on,\\n  .input-append .add-on {\\n    color: @textColor;\\n    background-color: @backgroundColor;\\n    border-color: @textColor;\\n  }\\n}\\n\\n\\n\\n// CSS3 PROPERTIES\\n// --------------------------------------------------\\n\\n// Border Radius\\n.border-radius(@radius) {\\n  -webkit-border-radius: @radius;\\n     -moz-border-radius: @radius;\\n          border-radius: @radius;\\n}\\n\\n// Single Corner Border Radius\\n.border-top-left-radius(@radius) {\\n  -webkit-border-top-left-radius: @radius;\\n      -moz-border-radius-topleft: @radius;\\n          border-top-left-radius: @radius;\\n}\\n.border-top-right-radius(@radius) {\\n  -webkit-border-top-right-radius: @radius;\\n      -moz-border-radius-topright: @radius;\\n          border-top-right-radius: @radius;\\n}\\n.border-bottom-right-radius(@radius) {\\n  -webkit-border-bottom-right-radius: @radius;\\n      -moz-border-radius-bottomright: @radius;\\n          border-bottom-right-radius: @radius;\\n}\\n.border-bottom-left-radius(@radius) {\\n  -webkit-border-bottom-left-radius: @radius;\\n      -moz-border-radius-bottomleft: @radius;\\n          border-bottom-left-radius: @radius;\\n}\\n\\n// Single Side Border Radius\\n.border-top-radius(@radius) {\\n  .border-top-right-radius(@radius);\\n  .border-top-left-radius(@radius);\\n}\\n.border-right-radius(@radius) {\\n  .border-top-right-radius(@radius);\\n  .border-bottom-right-radius(@radius);\\n}\\n.border-bottom-radius(@radius) {\\n  .border-bottom-right-radius(@radius);\\n  .border-bottom-left-radius(@radius);\\n}\\n.border-left-radius(@radius) {\\n  .border-top-left-radius(@radius);\\n  .border-bottom-left-radius(@radius);\\n}\\n\\n// Drop shadows\\n.box-shadow(@shadow) {\\n  -webkit-box-shadow: @shadow;\\n     -moz-box-shadow: @shadow;\\n          box-shadow: @shadow;\\n}\\n\\n// Transitions\\n.transition(@transition) {\\n  -webkit-transition: @transition;\\n     -moz-transition: @transition;\\n       -o-transition: @transition;\\n          transition: @transition;\\n}\\n.transition-delay(@transition-delay) {\\n  -webkit-transition-delay: @transition-delay;\\n     -moz-transition-delay: @transition-delay;\\n       -o-transition-delay: @transition-delay;\\n          transition-delay: @transition-delay;\\n}\\n\\n// Transformations\\n.rotate(@degrees) {\\n  -webkit-transform: rotate(@degrees);\\n     -moz-transform: rotate(@degrees);\\n      -ms-transform: rotate(@degrees);\\n       -o-transform: rotate(@degrees);\\n          transform: rotate(@degrees);\\n}\\n.scale(@ratio) {\\n  -webkit-transform: scale(@ratio);\\n     -moz-transform: scale(@ratio);\\n      -ms-transform: scale(@ratio);\\n       -o-transform: scale(@ratio);\\n          transform: scale(@ratio);\\n}\\n.translate(@x, @y) {\\n  -webkit-transform: translate(@x, @y);\\n     -moz-transform: translate(@x, @y);\\n      -ms-transform: translate(@x, @y);\\n       -o-transform: translate(@x, @y);\\n          transform: translate(@x, @y);\\n}\\n.skew(@x, @y) {\\n  -webkit-transform: skew(@x, @y);\\n     -moz-transform: skew(@x, @y);\\n      -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twitter/bootstrap/issues/4885\\n       -o-transform: skew(@x, @y);\\n          transform: skew(@x, @y);\\n  -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319\\n}\\n.translate3d(@x, @y, @z) {\\n  -webkit-transform: translate3d(@x, @y, @z);\\n     -moz-transform: translate3d(@x, @y, @z);\\n       -o-transform: translate3d(@x, @y, @z);\\n          transform: translate3d(@x, @y, @z);\\n}\\n\\n// Backface visibility\\n// Prevent browsers from flickering when using CSS 3D transforms.\\n// Default value is `visible`, but can be changed to `hidden\\n// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples\\n.backface-visibility(@visibility){\\n\\t-webkit-backface-visibility: @visibility;\\n\\t   -moz-backface-visibility: @visibility;\\n\\t        backface-visibility: @visibility;\\n}\\n\\n// Background clipping\\n// Heads up: FF 3.6 and under need \\\"padding\\\" instead of \\\"padding-box\\\"\\n.background-clip(@clip) {\\n  -webkit-background-clip: @clip;\\n     -moz-background-clip: @clip;\\n          background-clip: @clip;\\n}\\n\\n// Background sizing\\n.background-size(@size) {\\n  -webkit-background-size: @size;\\n     -moz-background-size: @size;\\n       -o-background-size: @size;\\n          background-size: @size;\\n}\\n\\n\\n// Box sizing\\n.box-sizing(@boxmodel) {\\n  -webkit-box-sizing: @boxmodel;\\n     -moz-box-sizing: @boxmodel;\\n          box-sizing: @boxmodel;\\n}\\n\\n// User select\\n// For selecting text on the page\\n.user-select(@select) {\\n  -webkit-user-select: @select;\\n     -moz-user-select: @select;\\n      -ms-user-select: @select;\\n       -o-user-select: @select;\\n          user-select: @select;\\n}\\n\\n// Resize anything\\n.resizable(@direction) {\\n  resize: @direction; // Options: horizontal, vertical, both\\n  overflow: auto; // Safari fix\\n}\\n\\n// CSS3 Content Columns\\n.content-columns(@columnCount, @columnGap: @gridGutterWidth) {\\n  -webkit-column-count: @columnCount;\\n     -moz-column-count: @columnCount;\\n          column-count: @columnCount;\\n  -webkit-column-gap: @columnGap;\\n     -moz-column-gap: @columnGap;\\n          column-gap: @columnGap;\\n}\\n\\n// Optional hyphenation\\n.hyphens(@mode: auto) {\\n  word-wrap: break-word;\\n  -webkit-hyphens: @mode;\\n     -moz-hyphens: @mode;\\n      -ms-hyphens: @mode;\\n       -o-hyphens: @mode;\\n          hyphens: @mode;\\n}\\n\\n// Opacity\\n.opacity(@opacity) {\\n  opacity: @opacity / 100;\\n  filter: ~\\\"alpha(opacity=@{opacity})\\\";\\n}\\n\\n\\n\\n// BACKGROUNDS\\n// --------------------------------------------------\\n\\n// Add an alphatransparency value to any background or border color (via Elyse Holladay)\\n#translucent {\\n  .background(@color: @white, @alpha: 1) {\\n    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);\\n  }\\n  .border(@color: @white, @alpha: 1) {\\n    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);\\n    .background-clip(padding-box);\\n  }\\n}\\n\\n// Gradient Bar Colors for buttons and alerts\\n.gradientBar(@primaryColor, @secondaryColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {\\n  color: @textColor;\\n  text-shadow: @textShadow;\\n  #gradient > .vertical(@primaryColor, @secondaryColor);\\n  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);\\n  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);\\n}\\n\\n// Gradients\\n#gradient {\\n  .horizontal(@startColor: #555, @endColor: #333) {\\n    background-color: @endColor;\\n    background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+\\n    background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+\\n    background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+\\n    background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10\\n    background-image: linear-gradient(to right, @startColor, @endColor); // Standard, IE10\\n    background-repeat: repeat-x;\\n    filter: e(%(\\\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)\\\",argb(@startColor),argb(@endColor))); // IE9 and down\\n  }\\n  .vertical(@startColor: #555, @endColor: #333) {\\n    background-color: mix(@startColor, @endColor, 60%);\\n    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+\\n    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+\\n    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+\\n    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10\\n    background-image: linear-gradient(to bottom, @startColor, @endColor); // Standard, IE10\\n    background-repeat: repeat-x;\\n    filter: e(%(\\\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)\\\",argb(@startColor),argb(@endColor))); // IE9 and down\\n  }\\n  .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {\\n    background-color: @endColor;\\n    background-repeat: repeat-x;\\n    background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+\\n    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+\\n    background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10\\n    background-image: linear-gradient(@deg, @startColor, @endColor); // Standard, IE10\\n  }\\n  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {\\n    background-color: mix(@midColor, @endColor, 80%);\\n    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));\\n    background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);\\n    background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);\\n    background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);\\n    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);\\n    background-repeat: no-repeat;\\n    filter: e(%(\\\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)\\\",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback\\n  }\\n  .radial(@innerColor: #555, @outerColor: #333) {\\n    background-color: @outerColor;\\n    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));\\n    background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);\\n    background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);\\n    background-image: -o-radial-gradient(circle, @innerColor, @outerColor);\\n    background-repeat: no-repeat;\\n  }\\n  .striped(@color: #555, @angle: 45deg) {\\n    background-color: @color;\\n    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));\\n    background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);\\n    background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);\\n    background-image: -o-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);\\n    background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);\\n  }\\n}\\n// Reset filters for IE\\n.reset-filter() {\\n  filter: e(%(\\\"progid:DXImageTransform.Microsoft.gradient(enabled = false)\\\"));\\n}\\n\\n\\n\\n// COMPONENT MIXINS\\n// --------------------------------------------------\\n\\n// Horizontal dividers\\n// -------------------------\\n// Dividers (basically an hr) within dropdowns and nav lists\\n.nav-divider(@top: #e5e5e5, @bottom: @white) {\\n  // IE7 needs a set width since we gave a height. Restricting just\\n  // to IE7 to keep the 1px left/right space in other browsers.\\n  // It is unclear where IE is getting the extra space that we need\\n  // to negative-margin away, but so it goes.\\n  *width: 100%;\\n  height: 1px;\\n  margin: ((@baseLineHeight / 2) - 1) 1px; // 8px 1px\\n  *margin: -5px 0 5px;\\n  overflow: hidden;\\n  background-color: @top;\\n  border-bottom: 1px solid @bottom;\\n}\\n\\n// Button backgrounds\\n// ------------------\\n.buttonBackground(@startColor, @endColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {\\n  // gradientBar will set the background to a pleasing blend of these, to support IE<=9\\n  .gradientBar(@startColor, @endColor, @textColor, @textShadow);\\n  *background-color: @endColor; /* Darken IE7 buttons by default so they stand out more given they won't have borders */\\n  .reset-filter();\\n\\n  // in these cases the gradient won't cover the background, so we override\\n  &:hover, &:active, &.active, &.disabled, &[disabled] {\\n    color: @textColor;\\n    background-color: @endColor;\\n    *background-color: darken(@endColor, 5%);\\n  }\\n\\n  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves\\n  &:active,\\n  &.active {\\n    background-color: darken(@endColor, 10%) e(\\\"\\\\9\\\");\\n  }\\n}\\n\\n// Navbar vertical align\\n// -------------------------\\n// Vertically center elements in the navbar.\\n// Example: an element has a height of 30px, so write out `.navbarVerticalAlign(30px);` to calculate the appropriate top margin.\\n.navbarVerticalAlign(@elementHeight) {\\n  margin-top: (@navbarHeight - @elementHeight) / 2;\\n}\\n\\n\\n\\n// Grid System\\n// -----------\\n\\n// Centered container element\\n.container-fixed() {\\n  margin-right: auto;\\n  margin-left: auto;\\n  .clearfix();\\n}\\n\\n// Table columns\\n.tableColumns(@columnSpan: 1) {\\n  float: none; // undo default grid column styles\\n  width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 16; // 16 is total padding on left and right of table cells\\n  margin-left: 0; // undo default grid column styles\\n}\\n\\n// Make a Grid\\n// Use .makeRow and .makeColumn to assign semantic layouts grid system behavior\\n.makeRow() {\\n  margin-left: @gridGutterWidth * -1;\\n  .clearfix();\\n}\\n.makeColumn(@columns: 1, @offset: 0) {\\n  float: left;\\n  margin-left: (@gridColumnWidth * @offset) + (@gridGutterWidth * (@offset - 1)) + (@gridGutterWidth * 2);\\n  width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));\\n}\\n\\n// The Grid\\n#grid {\\n\\n  .core (@gridColumnWidth, @gridGutterWidth) {\\n\\n    .spanX (@index) when (@index > 0) {\\n      .span@{index} { .span(@index); }\\n      .spanX(@index - 1);\\n    }\\n    .spanX (0) {}\\n\\n    .offsetX (@index) when (@index > 0) {\\n      .offset@{index} { .offset(@index); }\\n      .offsetX(@index - 1);\\n    }\\n    .offsetX (0) {}\\n\\n    .offset (@columns) {\\n      margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns + 1));\\n    }\\n\\n    .span (@columns) {\\n      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));\\n    }\\n\\n    .row {\\n      margin-left: @gridGutterWidth * -1;\\n      .clearfix();\\n    }\\n\\n    [class*=\\\"span\\\"] {\\n      float: left;\\n      min-height: 1px; // prevent collapsing columns\\n      margin-left: @gridGutterWidth;\\n    }\\n\\n    // Set the container width, and override it for fixed navbars in media queries\\n    .container,\\n    .navbar-static-top .container,\\n    .navbar-fixed-top .container,\\n    .navbar-fixed-bottom .container { .span(@gridColumns); }\\n\\n    // generate .spanX and .offsetX\\n    .spanX(@gridColumns);\\n    .offsetX(@gridColumns);\\n\\n  }\\n\\n  .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {\\n\\n    .spanX (@index) when (@index > 0) {\\n      .span@{index} { .span(@index); }\\n      .spanX(@index - 1);\\n    }\\n    .spanX (0) {}\\n\\n    .offsetX (@index) when (@index > 0) {\\n      .offset@{index} { .offset(@index); }\\n      .offset@{index}:first-child { .offsetFirstChild(@index); }\\n      .offsetX(@index - 1);\\n    }\\n    .offsetX (0) {}\\n\\n    .offset (@columns) {\\n      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth*2);\\n  \\t  *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + (@fluidGridGutterWidth*2) - (.5 / @gridRowWidth * 100 * 1%);\\n    }\\n\\n    .offsetFirstChild (@columns) {\\n      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth);\\n      *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);\\n    }\\n\\n    .span (@columns) {\\n      width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));\\n      *width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%);\\n    }\\n\\n    .row-fluid {\\n      width: 100%;\\n      .clearfix();\\n      [class*=\\\"span\\\"] {\\n        .input-block-level();\\n        float: left;\\n        margin-left: @fluidGridGutterWidth;\\n        *margin-left: @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);\\n      }\\n      [class*=\\\"span\\\"]:first-child {\\n        margin-left: 0;\\n      }\\n\\n      // Space grid-sized controls properly if multiple per line\\n      .controls-row [class*=\\\"span\\\"] + [class*=\\\"span\\\"] {\\n        margin-left: @fluidGridGutterWidth;\\n      }\\n\\n      // generate .spanX and .offsetX\\n      .spanX(@gridColumns);\\n      .offsetX(@gridColumns);\\n    }\\n\\n  }\\n\\n  .input(@gridColumnWidth, @gridGutterWidth) {\\n\\n    .spanX (@index) when (@index > 0) {\\n      input.span@{index}, textarea.span@{index}, .uneditable-input.span@{index} { .span(@index); }\\n      .spanX(@index - 1);\\n    }\\n    .spanX (0) {}\\n\\n    .span(@columns) {\\n      width: ((@gridColumnWidth) * @columns) + (@gridGutterWidth * (@columns - 1)) - 14;\\n    }\\n\\n    input,\\n    textarea,\\n    .uneditable-input {\\n      margin-left: 0; // override margin-left from core grid system\\n    }\\n\\n    // Space grid-sized controls properly if multiple per line\\n    .controls-row [class*=\\\"span\\\"] + [class*=\\\"span\\\"] {\\n      margin-left: @gridGutterWidth;\\n    }\\n\\n    // generate .spanX\\n    .spanX(@gridColumns);\\n\\n  }\\n\\n}\\n\",\"// Styles for XPath editor\\n@import \\\"lib/main\\\";\\n\\n// Entired panel, including header\\n.fd-xpath-editor {\\n\\n    // Scrollable content\\n    .fd-xpath-editor-content {\\n        padding: @gridGutterWidth;\\n\\n        // Main content, above save & cancel (simple & advanced editor are each a fieldset)\\n        fieldset {\\n            position: relative;\\n\\n            // \\\"Edit Expression [(Advanced)]\\\"\\n            legend {\\n                // Clear button that toggle simple/advanced mode\\n                .clearfix();\\n\\n                // Push legend's bottom border below the button that toggles simple/advanced mode\\n                button {\\n                    margin-bottom: 5px;\\n                }\\n            }\\n\\n            // In simple mode, the list of conditionals\\n            .fd-xpath-editor-expressions {\\n                .xpath-expression-group {\\n                    &:last-child {\\n                        margin-bottom: 0;\\n                    }\\n\\n                    // Check or x to indicate if this expression looks good\\n                    .validation-results {\\n                        display: inline-block;\\n                        padding: 5px 25px;\\n                        margin-bottom: 0;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./xpath-editor.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./xpath-editor.less\";\n       export default content && content.locals ? content.locals : undefined;\n","define([\n    'jquery',\n    'underscore',\n    'vellum/debugutil',\n    'vellum/atwho',\n    'vellum/richText',\n    'vellum/hqAnalytics',\n    'vellum/templates/xpath_validation_errors.html',\n    'vellum/templates/xpath_expression.html',\n    'vellum/templates/xpath.html',\n    'vellum/less-style/xpath-editor.less'\n], function (\n    $,\n    _,\n    debug,\n    atwho,\n    richText,\n    analytics,\n    xpath_validation_errors,\n    xpath_expression,\n    xpath_tpl\n) {\n    function validateXPath(form, expr) {\n        if (expr) {\n            if (richText.isInvalid(expr)) {\n                expr = richText.unescapeXPath(expr, form);\n            }\n            try {\n                var parsed = form.xpath.parse(expr);\n                return [true, parsed];\n            } catch (err) {\n                return [false, err];\n            }\n        }\n        return [true, null];\n    }\n\n    function showXPathEditor($div, options) {\n        var editorContent = $div,\n            richTextOptions = {isExpression: true},\n            form = options.mug.form,\n            validate = _.partial(validateXPath, form),\n            saveButton;\n        options = _.defaults(options, {\n            leftPlaceholder: gettext(\"Drag question here\"),\n            rightPlaceholder: gettext(\"Drag question here\"),\n        });\n\n        var handleChange = function () {\n            saveButton.removeClass(\"btn-default disabled\").addClass(\"btn-success\");\n            options.change();\n        };\n\n        // Handlers for the simple expression editor\n        var simpleExpressions = {};\n        var operationOpts = [];\n        var expTypes = form.xpath.models.XPathExpressionTypeEnum;\n        var BinOpHandler = {\n            toString: function(op, left, right) {\n                // make sure we wrap the vals in parens in case they were necessary\n                // todo, construct manually, and validate individual parts.\n                return \"(\" + left + \") \" + \n                    form.xpath.models.expressionTypeEnumToXPathLiteral(op) + \n                    \" (\" + right + \")\";\n            },\n            typeLeftRight: function(expOp) {\n                return expOp;\n            }\n        };\n        var FunctionHandler = {\n            toString: function(op, left, right) {\n                return op + \"(\" + left + \", \" + right + \")\";\n            },\n            typeLeftRight: function(expOp) {\n                if (expOp.args.length !== 2) return false;\n                return {\n                    type: expOp.id,\n                    left: expOp.args[0],\n                    right: expOp.args[1]\n                };\n            }\n        };\n        function addOp(expr, value, label) {\n            value = form.xpath.models.expressionTypeEnumToXPathLiteral(value);\n            simpleExpressions[value] = expr;\n            operationOpts.push([label, value]);\n        }\n\n        addOp(BinOpHandler, expTypes.EQ, gettext(\"is equal to\"));\n        addOp(BinOpHandler, expTypes.NEQ, gettext(\"is not equal to\"));\n        addOp(BinOpHandler, expTypes.LT, gettext(\"is less than\"));\n        addOp(BinOpHandler, expTypes.LTE, gettext(\"is less than or equal to\"));\n        addOp(BinOpHandler, expTypes.GT, gettext(\"is greater than\"));\n        addOp(BinOpHandler, expTypes.GTE, gettext(\"is greater than or equal to\"));\n        addOp(FunctionHandler, \"selected\", gettext(\"has selected value\"));\n\n        var getExpressionInput = function () {\n            return $div.find(\".fd-xpath-editor-text\");\n        };\n\n        var setExpression = function(input, val) {\n            if (options.mug.form.richText) {\n                richText.editor(input, form, richTextOptions).setValue(val);\n            } else {\n                input.val(val);\n            }\n        };\n\n        var getExpression = function(input) {\n            if (options.mug.form.richText) {\n                return richText.editor(input, form, richTextOptions).getValue();\n            } else {\n                return input.val();\n            }\n        };\n\n        var getValidationSummary = function () {\n            return $div.find(\".fd-xpath-validation-summary\");\n        };\n        var getExpressionPane = function () {\n            return $div.find(\".fd-xpath-editor-expressions\");\n        };\n        var getTopLevelJoinSelect = function () {\n            return $(editorContent.find(\".top-level-join-select\")[0]);\n        };\n        var addAutocomplete = function (input, choices) {\n            if (choices) {\n                if (_.isFunction(choices)) {\n                    choices = choices();\n                }\n                atwho.autocomplete(input, options.mug, {choices: choices});\n            } else {\n                atwho.autocomplete(input, options.mug, {\n                    property: options.path,\n                    useRichText: options.mug.form.richText,\n                });\n            }\n        };\n\n        var getExpressionFromSimpleMode = function () {\n            // basic\n            var pane = getExpressionPane();\n            var expressionParts = [];\n            var joinType = getTopLevelJoinSelect().val();\n            pane.children().each(function() {\n                var left = getExpression($(this).find(\".left-question\")),\n                    right = getExpression($(this).find(\".right-question\"));\n\n                // ignore empty expressions\n                if (left === \"\" && right === \"\") {\n                    return;\n                }\n                var op = $($(this).find(\".op-select\")[0]).val();\n                var exprPath = simpleExpressions[op].toString(op, left, right);\n                expressionParts.push(exprPath);\n            });\n            var preparsed = expressionParts.join(\" \" + joinType + \" \");\n            // try to parse and unparse to clean up the formatting\n            var results = validate(preparsed);\n            if (results[0] && results[1]) {\n                return results[1].toXPath();\n            }\n            return preparsed;\n        };\n\n        var getExpressionFromUI = function () {\n            if ($div.find(\".xpath-simple\").hasClass('hide')) {\n                // advanced\n                return getExpression(getExpressionInput());\n            } else {\n                return getExpressionFromSimpleMode();\n            }\n        };\n\n        var tryAddExpression = function(parsedExpression, joiningOp) {\n            // trys to add an expression to the UI.\n            // if the expression is empty just appends a new div for the expression.\n            // if the expression exists, it will try to parse it into sub\n            // expressions.\n            // returns the expression if it succeeds, otherwise false.\n            if (parsedExpression && options.DEBUG_MODE) {\n                debug.log(\"trying to add\", parsedExpression.toString());\n            }\n\n            var isJoiningOp = function (subElement) {\n                // something that joins expressions\n                return (subElement instanceof form.xpath.models.XPathBoolExpr);\n            };\n\n            var isExpressionOp = function (subElement) {\n                // something that can be put into an expression\n                return (subElement instanceof form.xpath.models.XPathCmpExpr ||\n                        subElement instanceof form.xpath.models.XPathEqExpr ||\n                        simpleExpressions.hasOwnProperty(subElement.id));\n            };\n\n            var newExpressionUIElement = function (expOp) {\n                var tag = 'input', tagArgs = '';\n                if (options.mug.form.richText) {\n                    tag = 'div';\n                    tagArgs = 'contenteditable=\"true\"';\n                }\n\n                var $expUI = $(_.template(xpath_expression)({\n                    operationOpts: operationOpts,\n                    leftPlaceholder: options.leftPlaceholder,\n                    rightPlaceholder: options.rightPlaceholder,\n                    tag: tag,\n                    tagArgs: tagArgs,\n                }));\n\n                if (options.mug.form.richText) {\n                    $expUI.find('.fd-input').each(function () {\n                        richText.editor($(this), form, richTextOptions);\n                    });\n                }\n\n                var getLeftQuestionInput = function () {\n                    return $($expUI.find(\".left-question\")[0]);\n                };\n\n                var getRightQuestionInput = function () {\n                    return $($expUI.find(\".right-question\")[0]);\n                };\n\n                var validateExpression = function(item) {\n                    handleChange();\n                    var le = getExpression(getLeftQuestionInput()),\n                        re = getExpression(getRightQuestionInput());\n\n\n                    $expUI.find('.validation-results').addClass('hide');\n\n                    if (le && validate(le)[0] && re && validate(re)[0]) {\n                        $expUI.find('.validation-results.alert-success').removeClass('hide');\n                    } else {\n                        $expUI.find('.validation-results.alert-danger').removeClass('hide');\n                    }\n                };\n\n                var populateQuestionInputBox = function (input, expr, pairedExpr) {\n                    setExpression(input, expr.toXPath());\n                };\n\n                // add event handlers to validate the inputs\n                if (options.mug.form.richText) {\n                    $expUI.find('.xpath-edit-node').each(function () {\n                        richText.editor($(this), form, richTextOptions).on('change', validateExpression);\n                    });\n                } else {\n                    $expUI.find('.xpath-edit-node').on('keyup change', validateExpression);\n                }\n                $expUI.find('.op-select').on('change', validateExpression);\n\n                $expUI.find('.xpath-delete-expression').click(function() {\n                    $expUI.remove();\n                    handleChange();\n                });\n\n                if (expOp) {\n                    // populate\n                    if (options.DEBUG_MODE) {\n                        debug.log(\"populating\", expOp.toString());\n                    }\n                    if (simpleExpressions.hasOwnProperty(expOp.id)) {\n                        // comparison and equality operators DO NOT have an \"id\"\n                        // property, so they will not get here. It doesn't\n                        // matter though since already fulfill the necessary\n                        // \"type/left/right\" interface.\n                        expOp = simpleExpressions[expOp.id].typeLeftRight(expOp);\n                        if (!expOp) return false;\n                    }\n                    populateQuestionInputBox(getLeftQuestionInput(), expOp.left);\n                    $expUI.find('.op-select').val(form.xpath.models.expressionTypeEnumToXPathLiteral(expOp.type));\n                    // the population of the left can affect the right,\n                    // so we need to update the reference\n                    populateQuestionInputBox(getRightQuestionInput(), expOp.right, expOp.left);\n                }\n\n                addAutocomplete(getLeftQuestionInput(), options.leftAutocompleteChoices);\n                addAutocomplete(getRightQuestionInput(), options.rightAutocompleteChoices);\n\n                return $expUI;\n            };\n\n            var failAndClear = function () {\n                getExpressionPane().empty();\n                if (options.DEBUG_MODE) {\n                    debug.log(\"fail\", parsedExpression);\n                }\n                return false;\n            };\n\n            var expressionPane = getExpressionPane();\n            var expressionUIElem, leftUIElem, rightUIElem;\n            if (!parsedExpression) {\n                // just create a new expression\n                expressionUIElem = newExpressionUIElement();\n                return expressionUIElem.appendTo(expressionPane);\n            } else {\n                // we're creating for an existing expression, this is more complicated\n\n                if (isExpressionOp(parsedExpression)) {\n                    // if it's an expression op stick it in.\n                    // no need to join, so this is good.\n                    expressionUIElem = newExpressionUIElement(parsedExpression);\n                    if (!expressionUIElem) {\n                        return failAndClear();\n                    }\n                    return expressionUIElem.appendTo(expressionPane);\n                } else if (isJoiningOp(parsedExpression)) {\n                    // if it's a joining op the first element has to be\n                    // an expression and the second must be a valid op\n                    // isExpressionOp(parsedExpression.right))\n                    if (joiningOp && parsedExpression.type !== joiningOp) {\n                        // we tried to add a joining op that was different from\n                        // what we were already working on. Fail.\n                        return failAndClear();\n                    }\n                    leftUIElem = tryAddExpression(parsedExpression.left, parsedExpression.type);\n                    rightUIElem = tryAddExpression(parsedExpression.right, parsedExpression.type);\n                    if (leftUIElem && rightUIElem) {\n                        leftUIElem.appendTo(expressionPane);\n                        rightUIElem.appendTo(expressionPane);\n                        getTopLevelJoinSelect().val(parsedExpression.type);\n                    } else {\n                        // something recursively failed. Raise failure up.\n                        return failAndClear();\n                    }\n                    return rightUIElem; // this is arbitrary / maybe wrong\n                } else {\n                    // fail and return nothing.\n                    return failAndClear();\n                }\n            }\n        };\n\n        var setUIForExpression = function (xpathstring) {\n            if (options.DEBUG_MODE) {\n                debug.log(\"setting ui for\", xpathstring);\n            }\n            var results = validate(xpathstring);\n            if (results[0]) {\n                // it parsed correctly, try to load it.\n                var parsed = results[1];\n                // try to load the operation into the UI.\n                if (tryAddExpression(parsed)) {\n                    // it succeeded. nothing more to do\n                } else {\n                    // show advanced mode.\n                    showAdvancedMode(parsed.toXPath(), true);\n                }\n            } else {\n                showAdvancedMode(xpathstring, true);\n            }\n        };\n\n        var updateXPathEditor = function(options) {\n            // clear validation text\n            getValidationSummary()\n                .text(\"\")\n                .addClass(\"hide\");\n\n            // clear expression builder\n            var expressionPane = getExpressionPane();\n            expressionPane.empty();\n\n            // update expression builder\n            if (options.xpathType === \"bool\") {\n                showSimpleMode(options.value);\n                if (!options.value) {\n                    tryAddExpression();\n                }\n            } else {\n                if (options.mug.form.richText) {\n                    showAdvancedMode(options.value);\n                } else {\n                    showAdvancedMode(form.normalizeXPath(options.value));\n                }\n            }\n        };\n\n        // toggle simple/advanced mode\n        var showAdvancedMode = function (text, showNotice) {\n            setExpression(getExpressionInput(), text);\n            addAutocomplete(getExpressionInput());\n            getExpressionPane().empty();\n\n            $div.find(\".xpath-advanced\").removeClass('hide');\n            $div.find(\".xpath-simple\").addClass('hide');\n            $div.find('.fd-xpath-actions').removeClass('form-actions-condensed');\n            if (showNotice) {\n                $div.find(\".xpath-advanced-notice\").removeClass('hide');\n                $div.find(\".fd-xpath-show-simple-button\").addClass('hide');\n            } else {\n                $div.find(\".xpath-advanced-notice\").addClass('hide');\n                $div.find(\".fd-xpath-show-simple-button\").removeClass('hide');\n            }\n        };\n        var showSimpleMode = function (text) {\n            $div.find(\".xpath-simple\").removeClass('hide');\n            $div.find('.fd-xpath-actions').addClass('form-actions-condensed');\n            $div.find(\".xpath-advanced\").addClass('hide');\n\n            getExpressionPane().empty();\n            // this sometimes sends us back to advanced mode (if we couldn't parse)\n            // for now consider that fine.\n            if (text) {\n                setUIForExpression(text);\n            }\n        };\n\n        var initXPathEditor = function() {\n            var tag = 'textarea', tagArgs = 'rows=\"5\"';\n            if (options.mug.form.richText) {\n                tag = 'div';\n                tagArgs = 'contenteditable=\"true\"';\n            }\n\n            var $xpathUI = $(_.template(xpath_tpl)({\n                topLevelJoinOpts: [\n                    [gettext(\"True when ALL of the expressions are true.\"), expTypes.AND],\n                    [gettext(\"True when ANY of the expressions are true.\"), expTypes.OR]\n                ],\n                tag: tag,\n                tagArgs: tagArgs,\n            }));\n            editorContent.html($xpathUI);\n            saveButton = $xpathUI.find('.fd-xpath-save-button');\n\n            $xpathUI.find('.fd-xpath-show-advanced-button').click(function () {\n                analytics.fbUsage('Edit Expression', 'Show Advanced Mode');\n                showAdvancedMode(getExpressionFromSimpleMode());\n\n            });\n\n            $xpathUI.find('.fd-xpath-show-simple-button').click(function () {\n                showSimpleMode(getExpression(getExpressionInput()));\n            });\n\n            $xpathUI.find('.fd-add-exp').click(function () {\n                tryAddExpression();\n            });\n\n            var advancedInput = $xpathUI.find('.fd-xpath-editor-text');\n            if (options.mug.form.richText) {\n                richText.editor(advancedInput, form, richTextOptions)\n                        .on('change', handleChange);\n            } else {\n                advancedInput.on('change keyup', handleChange);\n            }\n\n            getTopLevelJoinSelect().change(handleChange);\n\n            var done = function (val) {\n                options.done(val);\n                editorContent.empty();\n            };\n\n            saveButton.addClass(\"disabled\").click(function() {\n                var uiExpression  = getExpressionFromUI();\n                setExpression(getExpressionInput(), uiExpression);\n                var results = validate(uiExpression);\n                if (results[0]) {\n                    done(uiExpression);\n                } else {\n                    getValidationSummary()\n                        .html($(_.template(xpath_validation_errors)({\n                            errors: results[1].message\n                        })))\n                        .removeClass(\"hide\");\n                }\n            });\n\n            $xpathUI.find('.fd-xpath-cancel-button').click(function () {\n                done(false);\n            });\n            return $xpathUI;\n        };\n\n        var $xpathUI = initXPathEditor();\n        updateXPathEditor(options);\n        if (options.onLoad) {\n            options.onLoad($xpathUI);\n        }\n    }\n\n    return {\n        showXPathEditor: showXPathEditor,\n        validateXPath: validateXPath,\n    };\n});\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","undefined","$","_","debug","atwho","richText","analytics","xpath_validation_errors","xpath_expression","xpath_tpl","validateXPath","form","expr","isInvalid","unescapeXPath","xpath","parse","err","showXPathEditor","$div","saveButton","editorContent","richTextOptions","isExpression","mug","validate","partial","defaults","leftPlaceholder","gettext","rightPlaceholder","handleChange","removeClass","addClass","change","simpleExpressions","operationOpts","expTypes","models","XPathExpressionTypeEnum","BinOpHandler","toString","op","left","right","expressionTypeEnumToXPathLiteral","typeLeftRight","expOp","addOp","value","label","EQ","NEQ","LT","LTE","GT","GTE","args","length","type","getExpressionInput","find","setExpression","input","val","editor","setValue","getExpression","getValue","getValidationSummary","getExpressionPane","getTopLevelJoinSelect","addAutocomplete","choices","isFunction","autocomplete","property","path","useRichText","getExpressionFromSimpleMode","pane","expressionParts","joinType","children","each","this","exprPath","preparsed","join","results","toXPath","tryAddExpression","parsedExpression","joiningOp","DEBUG_MODE","log","expressionUIElem","leftUIElem","rightUIElem","subElement","newExpressionUIElement","tag","tagArgs","$expUI","template","getLeftQuestionInput","getRightQuestionInput","validateExpression","item","le","re","populateQuestionInputBox","pairedExpr","on","click","remove","hasOwnProperty","leftAutocompleteChoices","rightAutocompleteChoices","failAndClear","empty","expressionPane","XPathCmpExpr","XPathEqExpr","appendTo","XPathBoolExpr","isJoiningOp","showAdvancedMode","text","showNotice","showSimpleMode","xpathstring","parsed","setUIForExpression","$xpathUI","topLevelJoinOpts","AND","OR","html","fbUsage","advancedInput","done","uiExpression","hasClass","errors","message","initXPathEditor","xpathType","normalizeXPath","updateXPathEditor","onLoad"],"sourceRoot":""}