{"version":3,"file":"483.8bad5c3d78a7d61b49e8.js","mappings":"4EAWA,SAASA,EAAWC,EAAUC,GACzBD,IACHE,KAAKF,SAAWA,GACbC,IACHC,KAAKD,QAAUA,EACjB,EACA,WAEAF,EAAUI,UAAY,CACrBH,SAAS,aACTC,QAAQ,MACRG,WAAY,WACZC,WAAW,KACXC,YAAa,EACbC,QAAS,KAETC,mBAAmB,SAAUC,GAC5BP,KAAKQ,QACLR,KAAKS,MAAQ,GACbT,KAAKO,WAAaA,CACnB,EAEAG,iBAAiB,WAChBV,KAAKW,OAASX,KAAKY,KACnBZ,KAAKS,MAAQ,EACd,EAEAI,aAAa,SAAUC,GACtBd,KAAKe,QAAUD,CAChB,EAEAE,kBAAkB,SAAUC,EAAMC,GAC7BA,IACHD,EAAOC,EAAK,IAAMD,GAEnB,IAAIE,EAAO,CAAEC,EAAEH,EAAMI,EAAE,CAAE,EAAGC,EAAG,IAE3BtB,KAAKW,QACRX,KAAKW,OAAOW,EAAEC,KAAKJ,GACnBnB,KAAKS,MAAMc,KAAKvB,KAAKW,SAErBX,KAAKY,KAAOO,EACbnB,KAAKW,OAASQ,CACf,EAEAK,iBAAiB,WAChBxB,KAAKS,MAAMgB,MACXzB,KAAKW,OAAOW,EAAEG,KACf,EAEAC,gBAAgB,WACf1B,KAAKW,OAASX,KAAKS,MAAMgB,OAASzB,KAAKY,IACxC,EAEAe,qBAAqB,SAAUV,EAAMW,GAChC5B,KAAKW,SACRX,KAAKW,OAAOU,EAAEJ,GAkGTY,OAlG0BD,GAkGhBE,QAAQ,iBAAiB,SAAUR,GAAK,OAAOS,EAAQT,EAAI,IAjG5E,EAEAU,wBAAwB,SAAUf,EAAMW,GACnC5B,KAAKW,SACRX,KAAKW,OAAOU,EAAEJ,GAAQW,EACxB,EAEAK,YAAY,SAAUC,GACjBlC,KAAKW,QACRX,KAAKW,OAAOW,EAAEC,KAAUW,EAiFjBJ,QAAQ,WAAW,SAAUR,GAAK,OAAOS,EAAQT,EAAI,IAhF9D,EAEAa,SAAS,SAAUD,GACdlC,KAAKW,QACRX,KAAKW,OAAOW,EAAEC,KAAKW,EACrB,EAEAE,mBAAmB,SAAUnB,EAAMiB,EAAMhB,GACxClB,KAAKgB,kBAAmBC,EAAMC,GAC9BlB,KAAKiC,YAAYC,GACjBlC,KAAK0B,iBACN,EAEAW,WAAW,SAAUH,GAEpBA,EAAOA,EAAKJ,QAAQ,OAAQ,iBAC5B9B,KAAKiC,YAAa,YAAcC,EAAO,MACxC,EAEAI,aAAa,SAAUJ,GACtBlC,KAAKiC,YAAY,WAAUC,EAAO,UACnC,EAEAK,MAAM,WACDvC,KAAKS,OAAST,KAAKS,MAAM,IAC5BT,KAAKU,mBAEN,IACC8B,EAAM,GAAiBC,EAAMzC,KAAKI,YAClCF,EAA8C,YAAjCF,KAAKE,WAAWwC,cAC7BC,EAAS,kBAAkB3C,KAAKD,QAAQ,eAAeC,KAAKF,SAAS,IAWtE,QATwB8C,IAApB5C,KAAKO,aACRoC,GAAU,iBAAoB3C,KAAKO,WAAa,MAAQ,MAAQ,MAGjEoC,EAAS,CAFTA,GAAU,OAIN3C,KAAKe,SAAWf,KAAKY,MACxB+B,EAAOpB,KAAK,aAAcvB,KAAKY,KAAKQ,EAAI,IAAMpB,KAAKe,QAAQ,KAExDb,EACH,KAAOuC,KACND,GAAOxC,KAAKG,WAMd,OAHIH,KAAKY,MACRiC,EAAQ7C,KAAKY,KAnBM,GAmBQ4B,EAAKG,GAE1BA,EAAOG,KAAM5C,EAAaF,KAAKK,QAAU,GACjD,EAEAG,MAAM,WACDR,KAAKY,MACRmC,EAAO/C,KAAKY,MACbZ,KAAKW,OAASX,KAAKY,KAAOZ,KAAKS,MAAQ,IACxC,EACAuC,YAAaC,OAAOC,cACjB,WACD,IAAIC,EAAM,IAAID,cAAc,oBAG5B,OAFAC,EAAIC,OAAQ,EACZD,EAAIE,QAAQrD,KAAKuC,SACVY,CACR,EACE,WACD,OAAO,IAAKG,WAAaC,gBAAgBvD,KAAKuC,QAAQ,WACxD,GAGD,IAAIR,EAAU,CACb,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,KAAM,OACN,KAAM,QACN,KAAM,SAeP,SAASgB,EAAO5B,GAEf,IADA,IAAIqC,EAAIrC,EAAKG,EAAEmC,OACRD,KACkB,iBAAbrC,EAAKG,EAAEkC,IACjBT,EAAO5B,EAAKG,EAAEkC,IAEhBrC,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,EAAI,IAC5B,CAGA,SAASuB,EAAQ1B,EAAMuC,EAAQlB,EAAKG,GACnC,IAGCgB,EAAMC,EAFNC,EAAMH,EAAS,IAAMvC,EAAKC,EAC1B0C,EAAK3C,EAAKG,EAAEmC,OACCM,EAAI,EAElB,IAAKJ,KAAQxC,EAAKE,EACjBwC,GAAO,IAAMF,EAAO,KAAOxC,EAAKE,EAAEsC,GAAQ,IAM3C,GAJAE,GAAOC,EAAK,IAAM,MAElBnB,EAAOpB,KAAMsC,GAETC,EAAI,CACP,GAEC,GAAoB,iBADpBF,EAAQzC,EAAKG,EAAEyC,MACe,CAC7B,GAAU,GAAND,EACH,OAAOnB,EAAOpB,KAAMoB,EAAOlB,MAAQmC,EAAQ,KAAKzC,EAAKC,EAAE,KAEvDuB,EAAOpB,KAAMmC,EAAOlB,EAAIoB,EAC1B,KAA0B,iBAATA,GAChBf,EAAOe,EAAOF,EAAOlB,EAAKA,EAAKG,SACzBoB,EAAID,GACZnB,EAAOpB,KAAMmC,EAAS,KAAKvC,EAAKC,EAAE,IACnC,CACD,CAEC,CA9LD,GAgMA4C,EAAOC,QAAUpE,C,iBCjNjB,UAAO,CACH,QACA,cAuHH,KAtHE,EAAF,SACGqE,EACAC,GAiHA,MAAO,CACHC,kBA/GoB,SAAUC,GAC9B,IAAIC,EAAYD,EAAKE,OAAOC,KAAKC,SAASC,MAAMC,eAE5CC,EAAe,CACf,QAAW,OACX,MAAS,QACT,MAAS,QACT,MAAS,QACT,eAAgB,gBAGhBC,EAAc,CACd,WACA,QAGJ,IAAK,IAAIC,KAAQF,EAGb,IAFA,IAAIG,EAAUH,EAAaE,GAElBf,EAAI,EAAGA,EAAIO,EAAUb,OAAQM,IAClCc,EAAYtD,KAAKwD,EAAU,KAAOT,EAAUP,GAAK,KAIzDc,EAAcA,EAAYG,OAAO,CAC7B,oBACA,uBACA,qBACA,sBACA,WACA,YACA,YACA,YAEJ,MAAMC,EAA0BC,QAAQb,EAAKc,aAAaC,MAAKC,GAAOA,EAAIC,QAAQC,YAC9EN,GAA2BZ,EAAKE,OAAOiB,OAAOC,SAASC,gCACvDb,EAAcA,EAAYG,OAAO,CAAC,wBAAyB,+BAG/D,IAmEIW,EAAO,CAACd,GAAaG,OAAOX,EAAKc,aAAaS,KAnE7B,SAAUP,GAC3B,IAGItB,EAHA8B,EAAM,CAAC,EACPC,EAAQT,EAAIU,EAAEC,WACdC,EAAkB5B,EAAKE,OAAOC,KAAKC,SAASC,MAAMwB,qBAGlDC,EAAmB,SAAUC,EAAMC,EAAUhC,GAC7C,OAAQ+B,GAAQA,EAAKE,QAAQjC,GACzB+B,EAAKG,QAAQlC,GAAMmC,kBAAkBH,GAAY,EAGzD,EAGA,IAAKtC,EAAI,EAAGA,EAAIc,EAAYpB,OAAQM,IAChC8B,EAAIhB,EAAYd,IAAM,GAW1B,GAR4B,SAAxBsB,EAAIC,QAAQmB,QACZZ,EAAIa,SAAWrB,EAAIsB,mBAEnBd,EAAIa,SAAWrB,EAAIuB,UAAUD,mBACb,IAAMtB,EAAIU,EAAEc,OAEhChB,EAAIiB,KAAOzB,EAAIC,QAAQyB,UAElB1B,EAAIC,QAAQ0B,WACb,IAAK,IAAIlC,KAAQF,EAAc,CAC3B,IAAIG,EAAUH,EAAaE,GAE3B,IAAKf,EAAI,EAAGA,EAAIO,EAAUb,OAAQM,IAAK,CACnC,IAAIkD,EAAMlC,EAAU,KAAOT,EAAUP,GAAK,IAC1C8B,EAAIoB,GAAOd,EAAiBL,EAAOxB,EAAUP,GAAIe,EACrD,CACJ,CAwBJ,IAAK,IAAIoC,KArBL7B,EAAIU,EAAEoB,cAAc,kBACpBtB,EAAI,qBAAuBR,EAAIU,EAAEqB,aACjCvB,EAAI,uBAAyBR,EAAIU,EAAEsB,cACnCxB,EAAIyB,SAAWjC,EAAIU,EAAEwB,aAAe,MAAQ,KAC5C1B,EAAI,sBAAwBR,EAAIU,EAAEyB,kBAElC3B,EAAI,wBAA0BR,EAAIU,EAAE0B,eACpC5B,EAAI,sBAAwBM,EACxBd,EAAIU,EAAE2B,mBACNzB,EAAiB,YAGzBJ,EAAI,aAAeM,EAAiBd,EAAIU,EAAE4B,UAAW1B,EAAiB,WACtEJ,EAAI,aAAeM,EAAiBd,EAAIU,EAAE6B,UAAW3B,EAAiB,WAClEhB,GAA2BI,EAAIC,QAAQuC,yBACvChC,EAAI,yBAA2BM,EAAiBd,EAAIU,EAAE+B,qBAAsB7B,EAAiB,WAC7FJ,EAAI,6BAA+BM,EAAiBd,EAAIU,EAAEgC,gBAAiB9B,EAAiB,YAEhGJ,EAAImC,QAAU7D,EAAS8D,cAAc5C,EAAIU,EAAEmC,SAG1BrC,EACTA,EAAIsC,eAAejB,KACnBrB,EAAIqB,GAAQrB,EAAIqB,IAAS,IAIjC,OAAOrC,EAAYe,KAAI,SAAUwC,GAAU,OAAOvC,EAAIuC,EAAS,GACnE,KAGA,OAAOlE,EAAImE,WAAW1C,EAC1B,EAKH,4B,iBCzHD,UAAO,CACH,OACA,QACA,QACA,cA4WH,KA3WE,EAAF,SACG2C,EACAC,EACA1I,EACA2I,GAwGA,IAAIC,EAA2B,SAAUC,EAAQC,GAC7C,IAAIC,EAAQD,EAAiBE,WAC7B,IAAK,IAAIC,KAAUF,EACXA,EAAMT,eAAeW,IAAWF,EAAME,IACtCJ,EAAO/G,qBAAqBmH,EAAQF,EAAME,GAGtD,EAqPA,MAAO,CACHC,YAnWc,SAAU1E,GACxB,IAAI2E,EAAY,IAAInJ,EAAU,QAAS,OACvCwE,EAAKE,OAAO0E,kBAEZD,EAAU1I,qBAEV0I,EAAUhI,kBAAkB,UA6EhC,SAAqCgI,EAAW3E,GAC5C2E,EAAUrH,qBAAsB,UAAW,gCAC3CqH,EAAUrH,qBAAsB,YAAa,iCAC7CqH,EAAUrH,qBAAsB,QAAS,iCACzCqH,EAAUrH,qBAAsB,YAAa,oCAC7CqH,EAAUrH,qBAAsB,WAAY,gCAC5CqH,EAAUrH,qBAAsB,eAAgB,uCAChD,IAAIuH,EAAS,GACT7E,EAAK8E,qBAAuB9E,EAAKF,UACjC+E,EAAO3H,KAAK,YAEZ8C,EAAK+E,YACLF,EAAO3H,KAAK,YAEZ2H,EAAOzF,QACPuF,EAAUrH,qBAAqB,gBAAiBuH,EAAOpG,KAAK,KAEpE,CA7FIuG,CAA2BL,EAAW3E,GACtC2E,EAAUhI,kBAAkB,UAC5BgI,EAAUhI,kBAAkB,WAC5BgI,EAAU/G,YAAYoC,EAAKiF,UAC3BN,EAAUtH,kBAEVsH,EAAUhI,kBAAkB,SAC5BgI,EAAUhI,kBAAkB,YAC5ByH,EAAyBO,EAAW3E,EAAKsE,iBAAiB,IAE1D,IA8F2BD,EAAQC,EA9F/BY,EAAWlF,EAAKkF,YA2GF,SAAUlF,EAAMkF,EAAUP,GAC5CO,EAASC,MAAK,SAAUnE,EAAKwB,EAAQ4C,GACjC,IAAIpE,IAAOA,EAAIC,QAAQoE,YAEJ,QADf7C,EAASxB,EAAIC,QAAQoE,WAAWrE,EAAKwB,IADzC,CAOA,GADAmC,EAAUhI,kBAAkB6F,GACvBxB,EAGE,CACH,IAAIsE,EAAoBtE,EAAIU,EAAE4D,kBAC1BC,EAAQ,KAMZ,IAAK,IAAIC,KALLxE,EAAIC,QAAQwE,yBAEZF,EAAQvE,EAAIC,QAAQwE,uBAAuBzE,IAGjCsE,EACNA,EAAkBxB,eAAe0B,IACjCb,EAAUrH,qBAAqBkI,EAAGF,EAAkBE,IAI5D,IAAIE,EAAY1E,EAAIU,EAAEgE,UAClBC,EAAY3E,EAAIU,EAAEiE,UActB,GAZID,GACAf,EAAU/G,YAAY8H,GAEtB1E,EAAIC,QAAQ2E,kBACZ5E,EAAIC,QAAQ2E,iBAAiBjB,EAAW3D,GAExCA,EAAIU,EAAEmC,SACNc,EAAUrH,qBAAqB,iBAAkB0D,EAAIU,EAAEmC,SAEvD8B,GACAhB,EAAUrH,qBAAqB,QAASqI,GAExCJ,EACA,IAAKC,KAAKD,EACFA,EAAMzB,eAAe0B,IACrBb,EAAUrH,qBAAqBkI,EAAGD,EAAMC,GAIxD,MA/GgB,SAAUxF,EAAM2E,GACpC,IAAIkB,EAAMC,GAIVA,EAAM9F,EAAK+F,WAEPD,EAAM,wCAGVD,EAAO7F,EAAKgG,YAERH,EAAO,oCAAsC1B,EAAK8B,uBAGtDtB,EAAUrH,qBAAqB,YAAYwI,GAC3CnB,EAAUrH,qBAAqB,QAASuI,GACxClB,EAAUrH,qBAAqB,YAAa0C,EAAKkG,eAAiB,KAClEvB,EAAUrH,qBAAqB,UAAW0C,EAAKmG,aAAe,KAC9DxB,EAAUrH,qBAAqB,OAAQ0C,EAAKiF,UAAYmB,QAAQ,YACpE,CAsDYC,CAAkBrG,EAAM2E,GAsC5BS,EAAgBpE,GAAOA,EAAIC,QAAQqF,iBACnC3B,EAAUtH,iBA3CV,CA4CJ,GACJ,EA9JIkJ,CAAgBvG,EAAMkF,EAAUP,GAChCA,EAAUtH,kBAGV,IAAK,IAAIqC,EAAI,EAAGA,EAAIM,EAAKsE,iBAAiBlF,OAAQM,IAyFvB2E,EAxFRM,GAwFgBL,EAxFLtE,EAAKsE,iBAAiB5E,IAyF9B8G,WAClBnC,EAAO1H,kBAAkB,YACzByH,EAAyBC,EAAQC,GAC7BA,EAAiBmC,SAASrH,QAG1BiF,EAAOvG,SAASmG,EAAE,SAASyC,OAAOpC,EAAiBmC,UAAUE,QAAQC,QAEzEvC,EAAOhH,oBA0DM,SAAU6H,EAAUP,GACrCO,EAASC,MAAK,SAAUnE,EAAKwB,EAAQ4C,GAC9BpE,GAAOA,EAAIC,QAAQ4F,aAClB3C,EAAE4C,KAAK9F,EAAIC,QAAQ4F,YAAY7F,IAAM,SAAUuD,GAC3CI,EAAUhI,kBAAkB,QAC5BuH,EAAE4C,KAAKvC,GAAO,SAAUhH,EAAOqF,GACvBrF,GACA4G,EAAK4C,cAAcpC,EAAW/B,EAAKrF,EAAOyD,EAElD,IACA2D,EAAUtH,iBACd,IAEJ+H,GACJ,GACJ,EAvKI4B,CAAe9B,EAAUP,GAyKP,SAAUO,EAAUlF,EAAM2E,GAC5C,SAASsC,EAAcC,EAAUlG,GAC7B2D,EAAUhI,kBAAkB,YAC5BgI,EAAUrH,qBAAqB,QAAS4J,EAASC,OACjDhD,EAAK4C,cAAcpC,EAAW,MAAOuC,EAASE,IAAKpG,GACnDmD,EAAK4C,cAAcpC,EAAW,QAASuC,EAAS3J,MAAOyD,GACvD2D,EAAUtH,iBACd,CAEA6G,EAAE4C,KAAK9G,EAAKqH,gBAAgB,SAAUC,GAAML,EAAcK,EAAI,CAACtH,KAAMA,GAAQ,IAE7EkF,EAASC,MAAK,SAAUnE,EAAKwB,EAAQ4C,GAC9BpE,GAAOA,EAAIC,QAAQoG,cAClBnD,EAAE4C,KAAK9F,EAAIC,QAAQoG,aAAarG,IAAM,SAAUkG,GAC5CD,EAAcC,EAAUlG,EAC5B,IAEJoE,GACJ,GACJ,CA1LImC,CAAgBrC,EAAUlF,EAAM2E,GAEhC3E,EAAKE,OAAOsH,qBAAqB7C,EAAW3E,GAE5C2E,EAAUtH,kBAEV,IAAIoK,EAAWzH,EAAK0H,0BAChB1H,EAAKF,WAAaoE,EAAEyD,QAAQF,KAC5B9C,EAAUhI,kBAAkB,mBAC5BgI,EAAU/G,YAAYgK,KAAKC,UAAUJ,IACrC9C,EAAUtH,mBAEd,IAAIyK,EAAa9H,EAAK+H,yBAkBtB,OAjBI/H,EAAKF,WAAaoE,EAAEyD,QAAQF,KAC5B9C,EAAUhI,kBAAkB,4BAC5BgI,EAAU/G,YAAYgK,KAAKC,UAAUC,IACrCnD,EAAUtH,mBAGd2C,EAAKE,OAAO8H,oBAAoBrD,EAAW3E,GAE3C2E,EAAUtH,kBAEVsH,EAAUhI,kBAAkB,UAqKP,SAAUqD,EAAM2E,GACrC3E,EAAKiI,KAAK9C,MAAK,SAAUnE,EAAKwB,EAAQ4C,GAClC,GAAIpE,EAAJ,CAMA,IAAIG,EAAOH,EAAIC,QACf,IAAIE,EAAKwB,WAGT,GAAIxB,EAAK+G,oBACL/G,EAAKgH,eAAexD,EAAW3D,OADnC,CAKA2D,EAAUhI,kBAAkBqE,EAAIC,QAAQmB,QAAQ/D,eAC5C8C,EAAKiH,mBA2CjB,SAAqBzD,EAAW3D,GAC5B,IACIqH,EADA1G,EAAaX,EAAIU,EAAEC,WAEnBA,GAAcA,EAAW2G,KACzBD,EAAW,aAAe1G,EAAW2G,GAAK,KAEtC3G,EAAWgG,WAC2B,aAAlC3G,EAAIuH,YAAY,gBACpBF,EAAW,MAGfA,GAAYrH,EAAIU,EAAE8G,SAClB7D,EAAUhI,kBAAkB,SACxB0L,GACA1D,EAAUrH,qBAAqB,MAAO+K,GAEtCrH,EAAIU,EAAE8G,OACN7D,EAAU/G,YAAYoD,EAAIU,EAAE8G,OAEhC7D,EAAUtH,kBAElB,CA/DYoL,CAAY9D,EAAW3D,GAEvBG,EAAKuH,kBA+DjB,SAAoB/D,EAAW3D,GAC3B,IAAI2H,EAAY3H,EAAIU,EAAEiH,UAClBrF,EAAYtC,EAAIU,EAAE4B,UACtB,GAAIqF,GAAcrF,IAAcA,EAAUqE,UAAY,CAKlD,GAJAhD,EAAUhI,kBAAkB,QACxBgM,GACAhE,EAAU/G,YAAY+K,GAEtBrF,IAAcA,EAAUqE,UAAW,CACnC,IAAIP,EAAM,aAAe9D,EAAUgF,GAAK,KACxC3D,EAAUrH,qBAAqB,MAAO8J,EAC1C,CACAzC,EAAUtH,iBACd,CACJ,CA5EYuL,CAAWjE,EAAW3D,GAEtBG,EAAK0H,kBA4EjB,SAAoBlE,EAAW3D,GAC3B,IAAIuC,EAAYvC,EAAIU,EAAE6B,UACtB,GAAIA,IAAcA,EAAUoE,UAAW,CACnChD,EAAUhI,kBAAkB,QAC5B,IAAImM,EAAU,aAAevF,EAAU+E,GAAK,KAC5C3D,EAAUrH,qBAAqB,MAAOwL,GACtCnE,EAAUtH,iBACd,CACJ,CAnFY0L,CAAWpE,EAAW3D,GAEtBG,EAAK6H,mBAmFjB,SAAqBrE,EAAW3D,GAC5B,IAAIiI,EAAajI,EAAIU,EAAE2B,mBACvB,GAAI4F,IAAeA,EAAWtB,UAAW,CACrChD,EAAUhI,kBAAkB,SAC5B,IAAIuM,EAAW,aAAeD,EAAWX,GAAK,KAC9C3D,EAAUrH,qBAAqB,MAAO4L,GACtCvE,EAAUtH,iBACd,CACJ,CA1FY8L,CAAYxE,EAAW3D,GAEvBG,EAAKiI,mBA0FjB,SAAkCzE,EAAW3D,GACzC,IAAIyC,EAAuBzC,EAAIU,EAAE+B,qBACjC,GAAIA,IAAyBA,EAAqBkE,UAAW,CACzDhD,EAAUhI,kBAAkB,sBAC5B,IAAI0M,EAAqB,aAAe5F,EAAqB6E,GAAK,KAClE3D,EAAUrH,qBAAqB,MAAO+L,GACtC1E,EAAUtH,iBACd,CACA,IAAIqG,EAAkB1C,EAAIU,EAAEgC,gBAC5B,GAAIA,IAAoBA,EAAgBiE,UAAW,CAC/ChD,EAAUhI,kBAAkB,iBAC5B,IAAI2M,EAAgB,aAAe5F,EAAgB4E,GAAK,KACxD3D,EAAUrH,qBAAqB,MAAOgM,GACtC3E,EAAUtH,iBACd,CACJ,CAxGYkM,CAAyB5E,EAAW3D,GAGxC,IAAIwD,EAAaxD,EAAIU,EAAE8H,qBACvB,IAAK,IAAIhE,KAAKhB,EACNA,EAAWV,eAAe0B,IAC1Bb,EAAUrH,qBAAqBkI,EAAGhB,EAAWgB,IAMrD,GAHIrE,EAAKgH,gBACLhH,EAAKgH,eAAexD,EAAW3D,GAE/BG,EAAKsI,oBAAqB,CAC1B,IAAIC,EAAU1I,EAAI2I,YAClBxF,EAAK4C,cAAcpC,EAAWxD,EAAKsI,oBAAqBC,EAAS1I,EACrE,CACA,IAAI4I,EAAiB5I,EAAI6I,yBACrBD,GACAjF,EAAUrH,qBAAqB,aAAcsM,GAGjDxE,EAAgBjE,EAAK2I,oBAErBnF,EAAUtH,iBAvCV,CATA,MAFI+H,GAmDR,GACJ,CA5NI2E,CAAmB/J,EAAM2E,GACzBA,EAAUtH,kBACVsH,EAAUtH,kBACVsH,EAAUtI,mBACV2D,EAAKE,OAAO8J,iBAELrF,EAAUzG,OACrB,EA0SH,4B","sources":["webpack://vellum/./node_modules/XMLWriter/XMLWriter.js","webpack://vellum/./src/exporter.js","webpack://vellum/./src/writer.js"],"sourcesContent":["/**\n * XMLWriter - XML generator for Javascript, based on .NET's XMLTextWriter.\n * Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\n * Licensed under BSD (http://www.opensource.org/licenses/bsd-license.php)\n *\n * @version 1.1.0\n * @author Ariel Flesler, alexandern, Daniel Miller\n *\n * Original version: http://flesler.blogspot.com/2008/03/xmlwriter-for-javascript.html\n */\n\nfunction XMLWriter( encoding, version ){\n\tif( encoding )\n\t\tthis.encoding = encoding;\n\tif( version )\n\t\tthis.version = version;\n};\n(function(){\n\nXMLWriter.prototype = {\n\tencoding:'ISO-8859-1',// what is the encoding\n\tversion:'1.0', //what xml version to use\n\tformatting: 'indented', //how to format the output (indented/none)  ?\n\tindentChar:'\\t', //char to use for indent\n\tindentation: 1, //how many indentChar to add per level\n\tnewLine: '\\n', //character to separate nodes when formatting\n\t//start a new document, cleanup if we are reusing\n\twriteStartDocument:function( standalone ){\n\t\tthis.close();//cleanup\n\t\tthis.stack = [ ];\n\t\tthis.standalone = standalone;\n\t},\n\t//get back to the root\n\twriteEndDocument:function(){\n\t\tthis.active = this.root;\n\t\tthis.stack = [ ];\n\t},\n\t//set the text of the doctype\n\twriteDocType:function( dt ){\n\t\tthis.doctype = dt;\n\t},\n\t//start a new node with this name, and an optional namespace\n\twriteStartElement:function( name, ns ){\n\t\tif( ns )//namespace\n\t\t\tname = ns + ':' + name;\n\n\t\tvar node = { n:name, a:{ }, c: [ ] };//(n)ame, (a)ttributes, (c)hildren\n\n\t\tif( this.active ){\n\t\t\tthis.active.c.push(node);\n\t\t\tthis.stack.push(this.active);\n\t\t}else\n\t\t\tthis.root = node;\n\t\tthis.active = node;\n\t},\n\t// Delete last node\n\tdeleteEndElement:function(){\n\t\tthis.stack.pop();\n\t\tthis.active.c.pop();\n\t},\n\t//go up one node, if we are in the root, ignore it\n\twriteEndElement:function(){\n\t\tthis.active = this.stack.pop() || this.root;\n\t},\n\t//add an attribute to the active node\n\twriteAttributeString:function( name, value ){\n\t\tif( this.active )\n\t\t\tthis.active.a[name] = htmlAttr(value);\n\t},\n\t//add a pre-escaped attribute to the active node\n\twriteRawAttributeString:function( name, value ){\n\t\tif( this.active )\n\t\t\tthis.active.a[name] = value;\n\t},\n\t//add a text node to the active node (XML will be escaped)\n\twriteString:function( text ){\n\t\tif( this.active )\n\t\t\tthis.active.c.push(html(text));\n\t},\n\t//add XML string to the active node without extra escaping\n\twriteXML:function( text ){\n\t\tif( this.active )\n\t\t\tthis.active.c.push(text);\n\t},\n\t//shortcut, open an element, write the text and close\n\twriteElementString:function( name, text, ns ){\n\t\tthis.writeStartElement( name, ns );\n\t\tthis.writeString(text);\n\t\tthis.writeEndElement();\n\t},\n\t//add a text node wrapped with CDATA\n\twriteCDATA:function( text ){\n\t\t// keep nested CDATA\n\t\ttext = text.replace(/>>]/g, \"]]><![CDATA[>\");\n\t\tthis.writeString( '<![CDATA[' + text + ']]>' );\n\t},\n\t//add a text node wrapped in a comment\n\twriteComment:function( text ){\n\t\tthis.writeString('<!-- ' + text + ' -->');\n\t},\n\t//generate the xml string, you can skip closing the last nodes\n\tflush:function(){\n\t\tif( this.stack && this.stack[0] )//ensure it's closed\n\t\t\tthis.writeEndDocument();\n\n\t\tvar\n\t\t\tchr = '', indent = '', num = this.indentation,\n\t\t\tformatting = this.formatting.toLowerCase() == 'indented',\n\t\t\tbuffer = '<?xml version=\"'+this.version+'\" encoding=\"'+this.encoding+'\"';\n\n\t\tif( this.standalone !== undefined )\n\t\t\tbuffer += ' standalone=\"' +  (this.standalone ? 'yes' : 'no') + '\" ';\n\t\tbuffer += ' ?>';\n\n\t\tbuffer = [buffer];\n\n\t\tif( this.doctype && this.root )\n\t\t\tbuffer.push('<!DOCTYPE '+ this.root.n + ' ' + this.doctype+'>');\n\n\t\tif( formatting ){\n\t\t\twhile( num-- )\n\t\t\t\tchr += this.indentChar;\n\t\t}\n\n\t\tif( this.root )//skip if no element was added\n\t\t\tformat( this.root, indent, chr, buffer );\n\n\t\treturn buffer.join( formatting ? this.newLine : '' );\n\t},\n\t//cleanup, don't use again without calling startDocument\n\tclose:function(){\n\t\tif( this.root )\n\t\t\tclean( this.root );\n\t\tthis.active = this.root = this.stack = null;\n\t},\n\tgetDocument: window.ActiveXObject\n\t\t? function(){ //MSIE\n\t\t\tvar doc = new ActiveXObject('Microsoft.XMLDOM');\n\t\t\tdoc.async = false;\n\t\t\tdoc.loadXML(this.flush());\n\t\t\treturn doc;\n\t\t}\n\t\t: function(){// Mozilla, Firefox, Opera, etc.\n\t\t\treturn (new DOMParser()).parseFromString(this.flush(),'text/xml');\n\t}\n};\n\nvar ESCAPES = {\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;',\n\t'\"': '&quot;',\n\t'\\t': '&#9;',\n\t'\\n': '&#10;',\n\t'\\r': '&#13;'\n};\n\nfunction html(s) {\n\treturn s.replace(/[&<>\"]/g, function (c) { return ESCAPES[c]; });\n}\n\n// Escape whitespace in attributes so it is preserved during in-browser\n// serialize/parse round-trip.\n// See http://www.w3.org/TR/REC-xml/#AVNormalize for browser parsing rules.\nfunction htmlAttr(s) {\n\treturn String(s).replace(/[&<>\"\\n\\r\\t]/g, function (c) { return ESCAPES[c]; });\n}\n\n//utility, you don't need it\nfunction clean( node ){\n\tvar l = node.c.length;\n\twhile( l-- ){\n\t\tif( typeof node.c[l] == 'object' )\n\t\t\tclean( node.c[l] );\n\t}\n\tnode.n = node.a = node.c = null;\n};\n\n//utility, you don't need it\nfunction format( node, indent, chr, buffer ){\n\tvar\n\t\txml = indent + '<' + node.n,\n\t\tnc = node.c.length,\n\t\tattr, child, i = 0;\n\n\tfor( attr in node.a )\n\t\txml += ' ' + attr + '=\"' + node.a[attr] + '\"';\n\n\txml += nc ? '>' : ' />';\n\n\tbuffer.push( xml );\n\n\tif( nc ){\n\t\tdo{\n\t\t\tchild = node.c[i++];\n\t\t\tif( typeof child == 'string' ){\n\t\t\t\tif( nc == 1 )//single text node\n\t\t\t\t\treturn buffer.push( buffer.pop() + child + '</'+node.n+'>' );\n\t\t\t\telse //regular text node\n\t\t\t\t\tbuffer.push( indent+chr+child );\n\t\t\t}else if( typeof child == 'object' ) //element node\n\t\t\t\tformat(child, indent+chr, chr, buffer);\n\t\t}while( i < nc );\n\t\tbuffer.push( indent + '</'+node.n+'>' );\n\t}\n};\n\n})();\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = XMLWriter;\n","define([\n    'vellum/tsv',\n    'vellum/richText'\n], function (\n    tsv,\n    richText\n) {\n    // todo: abstract out IText stuff into part of the plugin interface\n    var generateExportTSV = function (form) {\n        var languages = form.vellum.data.javaRosa.Itext.getLanguages();\n\n        var itextColumns = {\n            \"default\": \"Text\",\n            \"audio\": \"Audio\",\n            \"image\": \"Image\",\n            \"video\": \"Video\",\n            \"video-inline\": \"Video Inline\",\n        };\n\n        var columnOrder = [\n            \"Question\",\n            \"Type\"\n        ];\n\n        for (var type in itextColumns) {\n            var colName = itextColumns[type];\n\n            for (var i = 0; i < languages.length; i++) {\n                columnOrder.push(colName + \" (\" + languages[i] + \")\");\n            }\n        }\n\n        columnOrder = columnOrder.concat([\n            \"Display Condition\",\n            \"Validation Condition\",\n            \"Validation Message\",\n            \"Calculate Condition\",\n            \"Required\",\n            \"Hint Text\",\n            \"Help Text\",\n            \"Comment\",\n        ]);\n        const formContainsRepeatGroup = Boolean(form.getMugList().find(mug => mug.options.isRepeat));\n        if (formContainsRepeatGroup && form.vellum.opts().features.use_custom_repeat_button_text) {\n            columnOrder = columnOrder.concat([\"'Add New' Button Text\", \"'Add Another' Button Text\"]);\n        }\n\n        var mugToExportRow = function (mug) {\n            var row = {},\n                itext = mug.p.labelItext,\n                defaultLanguage = form.vellum.data.javaRosa.Itext.getDefaultLanguage(),\n                i;\n\n            var defaultOrNothing = function (item, language, form) {\n                return (item && item.hasForm(form)) ?\n                    item.getForm(form).getValueOrDefault(language) : \"\";\n                // TODO see newline treatment in javaRosa.js TSV logic\n                //return value.replace(/\\r?\\n/g, \"&#10;\");\n            };\n\n            // initialize all columns to empty string\n            for (i = 0; i < columnOrder.length; i++) {\n                row[columnOrder[i]] = \"\";\n            }\n\n            if (mug.options.tagName !== \"item\") {\n                row.Question = mug.absolutePathNoRoot;\n            } else {\n                row.Question = mug.parentMug.absolutePathNoRoot +\n                                \"-\" + mug.p.nodeID;\n            }\n            row.Type = mug.options.typeName;\n\n            if (!mug.options.isDataOnly) {\n                for (var type in itextColumns) {\n                    var colName = itextColumns[type];\n\n                    for (i = 0; i < languages.length; i++) {\n                        var key = colName + \" (\" + languages[i] + \")\";\n                        row[key] = defaultOrNothing(itext, languages[i], type);\n                    }\n                }\n            }\n\n            if (mug.p.getDefinition('relevantAttr')) {\n                row[\"Display Condition\"] = mug.p.relevantAttr;\n                row[\"Calculate Condition\"] = mug.p.calculateAttr;\n                row.Required = mug.p.requiredAttr ? 'yes' : 'no';\n                row[\"Required Condition\"] = mug.p.requiredCondition;\n\n                row[\"Validation Condition\"] = mug.p.constraintAttr;\n                row[\"Validation Message\"] = defaultOrNothing(\n                    mug.p.constraintMsgItext,\n                    defaultLanguage, 'default');\n            }\n\n            row[\"Hint Text\"] = defaultOrNothing(mug.p.hintItext, defaultLanguage, 'default');\n            row[\"Help Text\"] = defaultOrNothing(mug.p.helpItext, defaultLanguage, 'default');\n            if (formContainsRepeatGroup && mug.options.customRepeatButtonText) {\n                row[\"'Add New' Button Text\"] = defaultOrNothing(mug.p.addEmptyCaptionItext, defaultLanguage, 'default');\n                row[\"'Add Another' Button Text\"] = defaultOrNothing(mug.p.addCaptionItext, defaultLanguage, 'default');\n            }\n            row.Comment = richText.sanitizeInput(mug.p.comment);\n\n            // make sure there aren't any null values\n            for (var prop in row) {\n                if (row.hasOwnProperty(prop)) {\n                    row[prop] = row[prop] || \"\";\n                }\n            }\n\n            return columnOrder.map(function (column) { return row[column]; });\n        };\n\n        var rows = [columnOrder].concat(form.getMugList().map(mugToExportRow));\n        return tsv.tabDelimit(rows);\n    };\n\n    return {\n        generateExportTSV: generateExportTSV\n    };\n});\n","define([\n    'jquery',\n    'underscore',\n    'XMLWriter/XMLWriter',\n    'vellum/util',\n], function (\n    $,\n    _,\n    XMLWriter,\n    util\n) {\n    var createXForm = function (form) {\n        var xmlWriter = new XMLWriter('UTF-8', '1.0');\n        form.vellum.beforeSerialize();\n\n        xmlWriter.writeStartDocument();\n        //Generate header boilerplate up to instance level\n        xmlWriter.writeStartElement('h:html');\n        write_html_tag_boilerplate(xmlWriter, form);\n        xmlWriter.writeStartElement('h:head');\n        xmlWriter.writeStartElement('h:title');\n        xmlWriter.writeString(form.formName);\n        xmlWriter.writeEndElement();       //CLOSE TITLE\n\n        xmlWriter.writeStartElement('model');\n        xmlWriter.writeStartElement('instance');\n        _writeInstanceAttributes(xmlWriter, form.instanceMetadata[0]);\n\n        var dataTree = form.dataTree();\n        createDataBlock(form, dataTree, xmlWriter);\n        xmlWriter.writeEndElement(); //CLOSE MAIN INSTANCE\n        \n        // other instances\n        for (var i = 1; i < form.instanceMetadata.length; i++) {\n            _writeInstance(xmlWriter, form.instanceMetadata[i]);\n        }\n        \n        createBindList(dataTree, xmlWriter);\n        \n        createSetValues(dataTree, form, xmlWriter);\n\n        form.vellum.contributeToModelXML(xmlWriter, form);\n        \n        xmlWriter.writeEndElement(); //CLOSE MODEL\n\n        var hashtags = form.knownExternalReferences();\n        if (form.richText && !_.isEmpty(hashtags)) {\n            xmlWriter.writeStartElement('vellum:hashtags');\n            xmlWriter.writeString(JSON.stringify(hashtags));\n            xmlWriter.writeEndElement();\n        }\n        var transforms = form.knownHashtagTransforms();\n        if (form.richText && !_.isEmpty(hashtags)) {\n            xmlWriter.writeStartElement('vellum:hashtagTransforms');\n            xmlWriter.writeString(JSON.stringify(transforms));\n            xmlWriter.writeEndElement();\n        }\n\n        form.vellum.contributeToHeadXML(xmlWriter, form);\n\n        xmlWriter.writeEndElement(); //CLOSE HEAD\n\n        xmlWriter.writeStartElement('h:body');\n        createControlBlock(form, xmlWriter);\n        xmlWriter.writeEndElement(); //CLOSE BODY\n        xmlWriter.writeEndElement(); //CLOSE HTML\n        xmlWriter.writeEndDocument(); //CLOSE DOCUMENT\n        form.vellum.afterSerialize();\n\n        return xmlWriter.flush();\n    };\n\n    var createModelHeader = function (form, xmlWriter) {\n        var uuid, jrm;\n        //assume we're currently pointed at the opening date block tag\n        //e.g. <model><instance><data> <--- we're at <data> now.\n\n        jrm = form.formJRM;\n        if(!jrm) {\n            jrm = \"http://dev.commcarehq.org/jr/xforms\";\n        }\n\n        uuid = form.formUuid;\n        if(!uuid) {\n            uuid = \"http://openrosa.org/formdesigner/\" + util.generate_xmlns_uuid();\n        }\n\n        xmlWriter.writeAttributeString(\"xmlns:jrm\",jrm);\n        xmlWriter.writeAttributeString(\"xmlns\", uuid);\n        xmlWriter.writeAttributeString(\"uiVersion\", form.formUIVersion || \"1\");\n        xmlWriter.writeAttributeString(\"version\", form.formVersion || \"1\");\n        xmlWriter.writeAttributeString(\"name\", form.formName || gettext(\"New Form\"));\n    };\n\n    function write_html_tag_boilerplate (xmlWriter, form) {\n        xmlWriter.writeAttributeString( \"xmlns:h\", \"http://www.w3.org/1999/xhtml\" );\n        xmlWriter.writeAttributeString( \"xmlns:orx\", \"http://openrosa.org/jr/xforms\" );\n        xmlWriter.writeAttributeString( \"xmlns\", \"http://www.w3.org/2002/xforms\" );\n        xmlWriter.writeAttributeString( \"xmlns:xsd\", \"http://www.w3.org/2001/XMLSchema\" );\n        xmlWriter.writeAttributeString( \"xmlns:jr\", \"http://openrosa.org/javarosa\" );\n        xmlWriter.writeAttributeString( \"xmlns:vellum\", \"http://commcarehq.org/xforms/vellum\" );\n        var ignore = [];\n        if (form.mayDisableRichText && !form.richText) {\n            ignore.push('richText');\n        }\n        if (form.noMarkdown) {\n            ignore.push('markdown');\n        }\n        if (ignore.length) {\n            xmlWriter.writeAttributeString(\"vellum:ignore\", ignore.join(\" \"));\n        }\n    }\n\n    var _writeInstanceAttributes = function (writer, instanceMetadata) {\n        var attrs = instanceMetadata.attributes;\n        for (var attrId in attrs) {\n            if (attrs.hasOwnProperty(attrId) && attrs[attrId]) {\n                writer.writeAttributeString(attrId, attrs[attrId]);\n            }\n        }\n    };\n\n    var _writeInstance = function (writer, instanceMetadata) {\n        if (!instanceMetadata.internal) {\n            writer.writeStartElement('instance');\n            _writeInstanceAttributes(writer, instanceMetadata);\n            if (instanceMetadata.children.length) {\n                // seriously, this is what you have to do\n                // HT: http://stackoverflow.com/questions/652763/jquery-object-to-string\n                writer.writeXML($('<div>').append(instanceMetadata.children).clone().html());\n            }\n            writer.writeEndElement();\n        }\n    };\n\n    var createDataBlock = function (form, dataTree, xmlWriter) {\n        dataTree.walk(function (mug, nodeID, processChildren) {\n            if (mug && mug.options.getTagName) {\n                nodeID = mug.options.getTagName(mug, nodeID);\n                if (nodeID === null) {\n                    return;\n                }\n            }\n            xmlWriter.writeStartElement(nodeID);\n            if (!mug) {\n                // tree root\n                createModelHeader(form, xmlWriter);\n            } else {\n                var rawDataAttributes = mug.p.rawDataAttributes,\n                    extra = null;\n                if (mug.options.getExtraDataAttributes) {\n                    // call this early so it can munge raw attributes\n                    extra = mug.options.getExtraDataAttributes(mug);\n                }\n                // Write any custom attributes first\n                for (var k in rawDataAttributes) {\n                    if (rawDataAttributes.hasOwnProperty(k)) {\n                        xmlWriter.writeAttributeString(k, rawDataAttributes[k]);\n                    }\n                }\n\n                var dataValue = mug.p.dataValue,\n                    xmlnsAttr = mug.p.xmlnsAttr;\n                \n                if (dataValue){\n                    xmlWriter.writeString(dataValue);\n                }\n                if (mug.options.writeDataNodeXML) {\n                    mug.options.writeDataNodeXML(xmlWriter, mug);\n                }\n                if (mug.p.comment) {\n                    xmlWriter.writeAttributeString('vellum:comment', mug.p.comment);\n                }\n                if (xmlnsAttr){\n                    xmlWriter.writeAttributeString(\"xmlns\", xmlnsAttr);\n                }\n                if (extra) {\n                    for (k in extra) {\n                        if (extra.hasOwnProperty(k)) {\n                            xmlWriter.writeAttributeString(k, extra[k]);\n                        }\n                    }\n                }\n            }\n            processChildren(mug && mug.options.dataChildFilter);\n            xmlWriter.writeEndElement();\n        });\n    };\n\n    var createBindList = function (dataTree, xmlWriter) {\n        dataTree.walk(function (mug, nodeID, processChildren) {\n            if(mug && mug.options.getBindList) {\n                _.each(mug.options.getBindList(mug), function (attrs) {\n                    xmlWriter.writeStartElement('bind');\n                    _.each(attrs, function (value, key) {\n                        if (value) {\n                            util.writeHashtags(xmlWriter, key, value, mug);\n                        }\n                    });\n                    xmlWriter.writeEndElement();\n                });\n            }\n            processChildren();\n        });\n    };\n\n    var createSetValues = function (dataTree, form, xmlWriter) {\n        function writeSetValue(setValue, mug) {\n            xmlWriter.writeStartElement('setvalue');\n            xmlWriter.writeAttributeString('event', setValue.event);\n            util.writeHashtags(xmlWriter, 'ref', setValue.ref, mug);\n            util.writeHashtags(xmlWriter, 'value', setValue.value, mug);\n            xmlWriter.writeEndElement();\n        }\n\n        _.each(form.getSetValues(), function (sv) { writeSetValue(sv, {form: form}); });\n\n        dataTree.walk(function (mug, nodeID, processChildren) {\n            if(mug && mug.options.getSetValues) {\n                _.each(mug.options.getSetValues(mug), function (setValue) {\n                    writeSetValue(setValue, mug);\n                });\n            }\n            processChildren();\n        });\n    };\n\n    var createControlBlock = function (form, xmlWriter) {\n        form.tree.walk(function (mug, nodeID, processChildren) {\n            if(!mug) {\n                // root node\n                processChildren();\n                return;\n            }\n\n            var opts = mug.options;\n            if (opts.isDataOnly) {\n                return;\n            }\n            if (opts.writesOnlyCustomXML) {\n                opts.writeCustomXML(xmlWriter, mug);\n                return;\n            }\n\n            xmlWriter.writeStartElement(mug.options.tagName.toLowerCase());\n            if (opts.writeControlLabel) {\n                createLabel(xmlWriter, mug);\n            }\n            if (opts.writeControlHint) {\n                createHint(xmlWriter, mug);\n            }\n            if (opts.writeControlHelp) {\n                createHelp(xmlWriter, mug);\n            }\n            if (opts.writeControlAlert) {\n                createAlert(xmlWriter, mug);\n            }\n            if (opts.writeRepeatItexts) {\n                createRepeatButtonItexts(xmlWriter, mug);\n            }\n            // Write custom attributes first\n            var attributes = mug.p.rawControlAttributes;\n            for (var k in attributes) {\n                if (attributes.hasOwnProperty(k)) {\n                    xmlWriter.writeAttributeString(k, attributes[k]);\n                }\n            }\n            if (opts.writeCustomXML) {\n                opts.writeCustomXML(xmlWriter, mug);\n            }\n            if (opts.writeControlRefAttr) {\n                var hashtag = mug.hashtagPath;\n                util.writeHashtags(xmlWriter, opts.writeControlRefAttr, hashtag, mug);\n            }\n            var appearanceAttr = mug.getAppearanceAttribute();\n            if (appearanceAttr) {\n                xmlWriter.writeAttributeString(\"appearance\", appearanceAttr);\n            }\n\n            processChildren(opts.controlChildFilter);\n\n            xmlWriter.writeEndElement();\n        });\n    };\n\n    /**\n     * Creates the label tag inside of a control Element in the xform\n     */\n    function createLabel(xmlWriter, mug) {\n        var labelItext = mug.p.labelItext,\n            labelRef;\n        if (labelItext && labelItext.id) {\n            labelRef = \"jr:itext('\" + labelItext.id + \"')\";\n            // iID is optional so by extension Itext is optional.\n            if (labelItext.isEmpty() &&\n                    mug.getPresence(\"labelItext\") === 'optional') {\n                labelRef = '';\n            }\n        }\n        if (labelRef || mug.p.label) {\n            xmlWriter.writeStartElement('label');\n            if (labelRef) {\n                xmlWriter.writeAttributeString('ref', labelRef);\n            }\n            if (mug.p.label) {\n                xmlWriter.writeString(mug.p.label);\n            }\n            xmlWriter.writeEndElement(); // close label\n        }\n    }\n\n    function createHint(xmlWriter, mug) {\n        var hintLabel = mug.p.hintLabel,\n            hintItext = mug.p.hintItext;\n        if (hintLabel || (hintItext && !hintItext.isEmpty())) {\n            xmlWriter.writeStartElement('hint');\n            if (hintLabel) {\n                xmlWriter.writeString(hintLabel);\n            }\n            if (hintItext && !hintItext.isEmpty()) {\n                var ref = \"jr:itext('\" + hintItext.id + \"')\";\n                xmlWriter.writeAttributeString('ref', ref);\n            }\n            xmlWriter.writeEndElement();\n        }\n    }\n\n    function createHelp(xmlWriter, mug) {\n        var helpItext = mug.p.helpItext;\n        if (helpItext && !helpItext.isEmpty()) {\n            xmlWriter.writeStartElement('help');\n            var helpRef = \"jr:itext('\" + helpItext.id + \"')\";\n            xmlWriter.writeAttributeString('ref', helpRef);\n            xmlWriter.writeEndElement();\n        }\n    }\n\n    function createAlert(xmlWriter, mug) {\n        var alertItext = mug.p.constraintMsgItext;\n        if (alertItext && !alertItext.isEmpty()) {\n            xmlWriter.writeStartElement('alert');\n            var alertRef = \"jr:itext('\" + alertItext.id + \"')\";\n            xmlWriter.writeAttributeString('ref', alertRef);\n            xmlWriter.writeEndElement();\n        }\n    }\n\n    function createRepeatButtonItexts(xmlWriter, mug) {\n        var addEmptyCaptionItext = mug.p.addEmptyCaptionItext;\n        if (addEmptyCaptionItext && !addEmptyCaptionItext.isEmpty()) {\n            xmlWriter.writeStartElement('jr:addEmptyCaption');\n            var addEmptyCaptionRef = \"jr:itext('\" + addEmptyCaptionItext.id + \"')\";\n            xmlWriter.writeAttributeString('ref', addEmptyCaptionRef);\n            xmlWriter.writeEndElement();\n        }\n        var addCaptionItext = mug.p.addCaptionItext;\n        if (addCaptionItext && !addCaptionItext.isEmpty()) {\n            xmlWriter.writeStartElement('jr:addCaption');\n            var addCaptionRef = \"jr:itext('\" + addCaptionItext.id + \"')\";\n            xmlWriter.writeAttributeString('ref', addCaptionRef);\n            xmlWriter.writeEndElement();\n        }\n    }\n\n\n    return {\n        createXForm: createXForm\n    };\n});\n"],"names":["XMLWriter","encoding","version","this","prototype","formatting","indentChar","indentation","newLine","writeStartDocument","standalone","close","stack","writeEndDocument","active","root","writeDocType","dt","doctype","writeStartElement","name","ns","node","n","a","c","push","deleteEndElement","pop","writeEndElement","writeAttributeString","value","String","replace","ESCAPES","writeRawAttributeString","writeString","text","writeXML","writeElementString","writeCDATA","writeComment","flush","chr","num","toLowerCase","buffer","undefined","format","join","clean","getDocument","window","ActiveXObject","doc","async","loadXML","DOMParser","parseFromString","l","length","indent","attr","child","xml","nc","i","module","exports","tsv","richText","generateExportTSV","form","languages","vellum","data","javaRosa","Itext","getLanguages","itextColumns","columnOrder","type","colName","concat","formContainsRepeatGroup","Boolean","getMugList","find","mug","options","isRepeat","opts","features","use_custom_repeat_button_text","rows","map","row","itext","p","labelItext","defaultLanguage","getDefaultLanguage","defaultOrNothing","item","language","hasForm","getForm","getValueOrDefault","tagName","Question","absolutePathNoRoot","parentMug","nodeID","Type","typeName","isDataOnly","key","prop","getDefinition","relevantAttr","calculateAttr","Required","requiredAttr","requiredCondition","constraintAttr","constraintMsgItext","hintItext","helpItext","customRepeatButtonText","addEmptyCaptionItext","addCaptionItext","Comment","sanitizeInput","comment","hasOwnProperty","column","tabDelimit","$","_","util","_writeInstanceAttributes","writer","instanceMetadata","attrs","attributes","attrId","createXForm","xmlWriter","beforeSerialize","ignore","mayDisableRichText","noMarkdown","write_html_tag_boilerplate","formName","dataTree","walk","processChildren","getTagName","rawDataAttributes","extra","k","getExtraDataAttributes","dataValue","xmlnsAttr","writeDataNodeXML","uuid","jrm","formJRM","formUuid","generate_xmlns_uuid","formUIVersion","formVersion","gettext","createModelHeader","dataChildFilter","createDataBlock","internal","children","append","clone","html","getBindList","each","writeHashtags","createBindList","writeSetValue","setValue","event","ref","getSetValues","sv","createSetValues","contributeToModelXML","hashtags","knownExternalReferences","isEmpty","JSON","stringify","transforms","knownHashtagTransforms","contributeToHeadXML","tree","writesOnlyCustomXML","writeCustomXML","writeControlLabel","labelRef","id","getPresence","label","createLabel","writeControlHint","hintLabel","createHint","writeControlHelp","helpRef","createHelp","writeControlAlert","alertItext","alertRef","createAlert","writeRepeatItexts","addEmptyCaptionRef","addCaptionRef","createRepeatButtonItexts","rawControlAttributes","writeControlRefAttr","hashtag","hashtagPath","appearanceAttr","getAppearanceAttribute","controlChildFilter","createControlBlock","afterSerialize"],"sourceRoot":""}