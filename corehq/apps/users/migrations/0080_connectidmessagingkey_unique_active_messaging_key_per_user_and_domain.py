# Generated by Django 4.2.20 on 2025-05-23 13:56

from django.db import migrations, models


def remove_duplicates(apps, schema_editor):
    ConnectIDMessagingKey = apps.get_model('users', 'ConnectIDMessagingKey')

    # Keep the oldest record for each user+domain combination
    duplicates = ConnectIDMessagingKey.objects.filter(active=True).values(
        'connectid_user_link', 'domain'
    ).annotate(count=models.Count('id')).filter(count__gt=1)

    for dup in duplicates:
        records = ConnectIDMessagingKey.objects.filter(
            active=True,
            connectid_user_link=dup['connectid_user_link'],
            domain=dup['domain']
        ).order_by('created_on')

        # Keep first (oldest), deactivate the rest
        for record in records[1:]:
            record.active = False
            record.save()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0079_alter_sqluserdata_managers'),
    ]

    operations = [
        migrations.RunPython(remove_duplicates),
        migrations.AddConstraint(
            model_name='connectidmessagingkey',
            constraint=models.UniqueConstraint(condition=models.Q(('active', True)), fields=('connectid_user_link', 'domain'), name='unique_active_messaging_key_per_user_and_domain'),
        ),
    ]
