import logging

log = logging.getLogger(__name__)


def store_saml_data_in_session(request):
    """
    This stores SAML-related authentication data in the request's session
    :param request: HttpRequest
    """
    request.session['samlUserdata'] = request.saml2_auth.get_attributes()
    request.session['samlNameId'] = request.saml2_auth.get_nameid()
    request.session['samlNameIdFormat'] = request.saml2_auth.get_nameid_format()
    request.session['samlNameIdNameQualifier'] = request.saml2_auth.get_nameid_nq()
    request.session['samlNameIdSPNameQualifier'] = request.saml2_auth.get_nameid_spnq()
    request.session['samlSessionIndex'] = request.saml2_auth.get_session_index()


def _is_saml_session(request):
    return request.session.get('samlSessionIndex') is not None


def _get_saml_user_data_property(request, prop_slug):
    """
    Shortcut for getting samlUserData properties generated by python3-saml.
    These can sometimes manifest as lists or strings.
    :param request: HttpRequest
    :param prop_slug: string (property slug)
    :return: string or None
    """
    value = request.session.get('samlUserdata', {}).get(prop_slug)
    if isinstance(value, list):
        # for Entra ID the data is usually returned as a list
        value = value[0] if value else ''
    return value


def _get_oidc_user_data_property(request, prop_slug):
    """
    Shortcut for getting OIDC user data properties stored in the request
    :param request: HttpRequest
    :param prop_slug: string (property slug)
    :return: string or None
    """
    return request.session.get('oidcUserData', {}).get(prop_slug)


def _get_display_name_from_session(request):
    """
    This gets the display name from SSO user data stored in the session data (for OIDC or SAML)
    :param request: HttpRequest
    :return: string or None
    """
    if _is_saml_session(request):
        return _get_saml_user_data_property(
            request,
            'http://schemas.microsoft.com/identity/claims/displayname'
        )
    return _get_oidc_user_data_property(request, 'name')


def get_sso_user_first_name_from_session(request):
    """
    This gets the first name from sso user data stored in the session data (for OIDC or SAML)
    :param request: HttpRequest
    :return: string or None
    """
    if _is_saml_session(request):
        first_name = _get_saml_user_data_property(
            request,
            'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname'
        )
    else:
        first_name = _get_oidc_user_data_property(request, 'given_name')
    if not first_name:
        display_name = _get_display_name_from_session(request)
        first_name = display_name.split(' ')[0] if display_name else None
    return first_name


def get_sso_user_last_name_from_session(request):
    """
    This gets the last name from sso user data stored in the session data (for OIDC or SAML)
    :param request: HttpRequest
    :return: string or None
    """
    if _is_saml_session(request):
        last_name = _get_saml_user_data_property(
            request,
            'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname'
        )
    else:
        last_name = _get_oidc_user_data_property(request, 'family_name')
    if not last_name:
        display_name = _get_display_name_from_session(request)
        display_name_parts = display_name.split(' ') if display_name else []
        if len(display_name_parts) > 1:
            last_name = ' '.join(display_name_parts[1:])
    return last_name
