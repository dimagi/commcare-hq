--- 
+++ 
@@ -4,7 +4,7 @@
 import _ from 'underscore';
 import 'hqwebapp/js/components/pagination';
 import 'hqwebapp/js/components/search_box';
-import dataCorrections from 'reports/js/bootstrap3/data_corrections';
+import dataCorrections from 'reports/js/bootstrap5/data_corrections';
 import 'commcarehq';
 
 describe('Data Corrections', function () {
@@ -30,7 +30,7 @@
             $(".data-corrections-trigger").click();
         },
         closeModal = function () {
-            $(".data-corrections-modal .close").click();
+            $(".data-corrections-modal .btn-close").click();
         },
         updateProperty = function (name, newValue) {
             $(".data-corrections-modal [data-name='" + name + "']").val(newValue).change();
@@ -55,7 +55,7 @@
 
     beforeEach(function () {
         var $clone = $fixture.clone();
-        $clone.find(".modal").data("backdrop", 0);
+        $clone.find(".modal").attr("data-bs-backdrop", false);
         $("#mocha-sandbox").append($clone);
     });
 
@@ -67,11 +67,11 @@
         it('should appear on trigger and disappear on close', function (done) {
             initModel({ 'name': 'value' });
             var $modal = $(".data-corrections-modal");
-            assert(!$modal.is(":visible"), "Modal is invisible before being opened");
-            $modal.one("shown.bs.modal", function () {
-                assert($modal.is(":visible"), "Modal is visible after being opened");
+            assert(!$modal.is(":visible"));
+            $modal.one("shown.bs.modal", function () {
+                assert($modal.is(":visible"));
                 $modal.one("hidden.bs.modal", function () {
-                    assert(!$modal.is(":visible"), "Modal is invisible after being closed");
+                    assert(!$modal.is(":visible"));
                     done();
                 });
                 closeModal();
@@ -91,17 +91,13 @@
                 updateProperty("green", "gunpowder");
                 assertProperty("green", "gunpowder");
                 $modal.one("hidden.bs.modal", function () {
-                    $modal.one("shown.bs.modal", function () {
-                        assertProperty("green", "genmaicha");
-                        done();
-                    });
                     openModal();
+                    assertProperty("green", "genmaicha");
+                    done();
                 });
                 closeModal();
             });
             openModal();
-
-
         });
     });
 
@@ -112,7 +108,6 @@
                 'green': 'genmaicha',
                 'white': 'silver needle',
             });
-
             var $modal = $(".data-corrections-modal");
             $modal.one("shown.bs.modal", function () {
                 search("green");
@@ -128,7 +123,6 @@
                 'green': 'genmaicha',
                 'white': 'silver needle',
             });
-
             var $modal = $(".data-corrections-modal");
             $modal.one("shown.bs.modal", function () {
                 search("xyz");
@@ -144,21 +138,19 @@
                 'green': 'genmaicha',
                 'white': 'silver needle',
             });
-
-            var $modal = $(".data-corrections-modal");
-            $modal.one("shown.bs.modal", function () {
+            openModal();
+
+            _.defer(function () {
                 search("");
                 assertVisibleProperties(["black", "green", "white"]);
                 done();
             });
-            openModal();
         });
 
         it('should display multiple pages when there are many properties', function (done) {
             var itemCount = 100,
                 names = thingList(itemCount),
                 model = initModel(_.object(names, names));
-
             var $modal = $(".data-corrections-modal");
             $modal.one("shown.bs.modal", function () {
                 assert.equal($(".pagination li").length - 2, Math.ceil(itemCount / model.itemsPerPage()));
@@ -219,10 +211,10 @@
 
         it('should display translated properties in default language', function (done) {
             var model = initModel(multilingualProperties, multilingualOptions);
-
             var assertVisibleText = function (expected) {
                 assert.sameMembers(expected, _.map($(".data-corrections-modal .test-property:visible"), function (p) { return p.innerText; }));
             };
+
             var $modal = $(".data-corrections-modal");
             $modal.one("shown.bs.modal", function () {
                 assert($(".data-corrections-modal .nav > :first-child").hasClass("active"), "Should display first property by default");
@@ -237,7 +229,6 @@
 
         it('should display translated properties in non-default language', function (done) {
             var model = initModel(multilingualProperties, multilingualOptions);
-
             var assertVisibleText = function (expected) {
                 assert.sameMembers(expected, _.map($(".data-corrections-modal .test-property:visible"), function (p) { return p.innerText; }));
             };
