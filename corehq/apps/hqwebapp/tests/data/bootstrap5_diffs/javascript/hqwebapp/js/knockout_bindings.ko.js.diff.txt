--- 
+++ 
@@ -1,6 +1,7 @@
 import $ from "jquery";
 import _ from "underscore";
 import ko from "knockout";
+import { Modal, Popover } from "bootstrap5";
 import "jquery-ui/ui/widgets/sortable";
 import "jquery-ui-built-themes/redmond/jquery-ui.min.css";
 import "langcodes/js/langcodes";  // $.langcodes
@@ -337,20 +338,16 @@
 };
 
 ko.bindingHandlers.modal = {
-    init: function (element) {
-        $(element).addClass('modal fade').modal({
-            show: false,
-        });
-        //        ko.bindingHandlers['if'].init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
+    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {
+        viewModel.binding_modal = new Modal(element);
     },
     update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
         ko.bindingHandlers.visible.update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
-        var value = ko.utils.unwrapObservable(valueAccessor());
-        //        ko.bindingHandlers['if'].update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
+        let value = ko.utils.unwrapObservable(valueAccessor());
         if (value) {
-            $(element).modal('show');
+            viewModel.binding_modal.show();
         } else {
-            $(element).modal('hide');
+            viewModel.binding_modal.hide();
         }
     },
 };
@@ -371,25 +368,32 @@
      */
     init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
         let value = valueAccessor(),
-            templateID = value,
+            templateId = value,
             ifValue = true;
         if (typeof value === 'object') {
-            templateID = value.templateId;
+            templateId = value.templateId;
             ifValue = _.has(value, 'if') ? value.if : true;
         }
-        var modal = $('<div></div>').addClass('modal fade').appendTo('body'),
+        let modalElement = $('<div></div>')
+                .addClass('modal fade')
+                .attr("id", templateId)
+                .attr("aria-labelledby", templateId + "-title")
+                .attr("tabindex", "-1")
+                .appendTo('body'),
             newValueAccessor = function () {
-                var clickAction = function () {
+                let clickAction = function () {
                     if (!ifValue) {
                         return;
                     }
-                    ko.bindingHandlers.template.init(modal.get(0), function () {
-                        return templateID;
+                    ko.bindingHandlers.template.init(modalElement.get(0), function () {
+                        return templateId;
                     }, allBindingsAccessor, viewModel, bindingContext);
-                    ko.bindingHandlers.template.update(modal.get(0), function () {
-                        return templateID;
+                    ko.bindingHandlers.template.update(modalElement.get(0), function () {
+                        return templateId;
                     }, allBindingsAccessor, viewModel, bindingContext);
-                    modal.modal('show');
+
+                    let modal = new Modal(modalElement.get(0));
+                    modal.show();
                 };
                 return clickAction;
             };
@@ -399,11 +403,13 @@
 
 ko.bindingHandlers.openRemoteModal = {
     init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
-        var modal = $('<div></div>').addClass('modal fade').appendTo('body'),
+        var modalElement = $('<div></div>').addClass('modal fade').attr("tabindex", "-1").appendTo('body'),
             newValueAccessor = function () {
                 var clickAction = function () {
-                    modal.load($(element).data('ajaxSource'));
-                    modal.modal('show');
+                    modalElement.load($(element).data('ajaxSource'), function () {
+                        let modal = new Modal(modalElement.get(0));
+                        modal.show();
+                    });
                 };
                 return clickAction;
             };
@@ -638,7 +644,7 @@
             options.sanitize = false;
         }
         if (options.title || options.content) { // don't show empty popovers
-            $(element).popover(options);
+            new Popover(element, options);
         }
     },
 };
@@ -710,5 +716,3 @@
         });
     },
 };
-
-export default 1;
