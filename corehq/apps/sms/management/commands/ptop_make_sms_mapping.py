from datetime import datetime
import pprint
from django.core.management.base import NoArgsCommand
import sys
import os
from corehq.apps.sms.models import SMSLog
from corehq.apps.hqcase.management.commands.ptop_generate_mapping import MappingOutputCommand
from corehq.pillows import dynamic
from corehq.pillows.sms import SMSPillow
from corehq.pillows.dynamic import DEFAULT_MAPPING_WRAPPER
from django.conf import settings

class Command(MappingOutputCommand):
    help="Generate mapping JSON of our ES indexed types. For smslogs"
    option_list = NoArgsCommand.option_list + (
    )
    doc_class_str = "corehq.apps.sms.models.SMSLog"
    doc_class = SMSLog


    def finish_handle(self):

        filepath = os.path.join(settings.FILEPATH, 'corehq','pillows','mappings','sms_mapping.py')
        smspillow = SMSPillow(create_index=False)

        #current index
        #check current index
        aliased_indices = smspillow.check_alias()

        current_index = smspillow.es_index

        #regenerate the mapping dict
        m = DEFAULT_MAPPING_WRAPPER

        m['properties'] = dynamic.set_properties(self.doc_class)
        m['_meta']['comment'] = "Autogenerated [%s] mapping from ptop_generate_mapping %s" % (self.doc_class_str, datetime.utcnow().strftime('%m/%d/%Y'))
        smspillow.default_mapping = m
        if hasattr(smspillow, '_calc_meta'):
            delattr(smspillow, '_calc_meta')
        output = []
        output.append('SMS_INDEX="%s_%s"' % (smspillow.es_index_prefix, smspillow.calc_meta()))
        output.append('SMS_MAPPING=%s' % pprint.pformat(m))
        newcalc_index = "%s_%s" % (smspillow.es_index_prefix, smspillow.calc_meta())
        print "Writing new sms index and mapping: %s" % output[0]
        with open(filepath, 'w') as outfile:
            outfile.write('\n'.join(output))

        if newcalc_index not in aliased_indices and newcalc_index != current_index:
            sys.stderr.write("\n\tWarning, current index %s is not aliased at the moment\n" % current_index)
            sys.stderr.write("\tCurrent live aliased index: %s\n\n"  % (','.join(aliased_indices)))

        sys.stderr.write("File written to %s\n" % filepath)
