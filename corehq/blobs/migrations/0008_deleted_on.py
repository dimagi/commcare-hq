# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-11-14 19:12
from __future__ import absolute_import
from __future__ import unicode_literals

from django.db import migrations, models

import corehq.blobs.models
from corehq.sql_db.operations import RawSQLMigration
from corehq.sql_db.migrations import partitioned


migrator = RawSQLMigration(('corehq', 'blobs', 'sql_templates'), {})


class Migration(migrations.Migration):

    dependencies = [
        ('blobs', '0007_drop_blobmeta_view'),
    ]

    operations = [
        partitioned(migrations.AddField(
            model_name='blobmeta',
            name='deleted_on',
            field=models.DateTimeField(default=None, help_text='Timestamp when the blob was deleted.\n\n        This is used for blobs that do not expire but end up deleted for\n        some reason. It should help in researching blobs that are\n        missing at the content storage level.\n        ', null=True),
        )),
        partitioned(
            migrator.get_migration('delete_blob_meta_v2.sql', 'delete_blob_meta.sql'),
            apply_to_proxy=False,
        ),
        partitioned(
            migrator.get_migration('get_blobmetas_v2.sql', 'get_blobmetas.sql'),
            apply_to_proxy=False,
        ),
    ]
