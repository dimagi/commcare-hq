version: '2.3'
services:
  web:
    build:
      context: .
      dockerfile: "${DOCKERFILE}"
    environment:
      CI: "${CI}"
      CODECOV_TOKEN: "${CODECOV_TOKEN}"
      DATADOG_API_KEY: "${DATADOG_API_KEY}"
      DATADOG_APP_KEY: "${DATADOG_APP_KEY}"
      DEPENDENT_SERVICES: "couch:5984 postgres:5432 redis:6379 elasticsearch2:9200 minio:9980 kafka:9092"
      DOCKER_HQ_OVERLAY: "${DOCKER_HQ_OVERLAY}"
      DOCKER_HQ_OVERLAYFS_CHMOD: "${DOCKER_HQ_OVERLAYFS_CHMOD}"
      DOCKER_HQ_OVERLAYFS_METACOPY: "${DOCKER_HQ_OVERLAYFS_METACOPY}"
      GITHUB_ACTIONS: "${GITHUB_ACTIONS}"
      GITHUB_EVENT_NAME: "${GITHUB_EVENT_NAME}"
      JS_SETUP: "${JS_SETUP}"
      JS_TEST_EXTENSIONS: "${JS_TEST_EXTENSIONS}"
      NOSE_DIVIDED_WE_RUN: "${NOSE_DIVIDED_WE_RUN}"
      REUSE_DB: "${REUSE_DB}"
      TRAVIS: "${TRAVIS}"
      TRAVIS_BRANCH: "${TRAVIS_BRANCH}"
      TRAVIS_BUILD_ID: "${TRAVIS_BUILD_ID}"
      TRAVIS_BUILD_NUMBER: "${TRAVIS_BUILD_NUMBER}"
      TRAVIS_COMMIT: "${TRAVIS_COMMIT}"
      TRAVIS_EVENT_TYPE: "${TRAVIS_EVENT_TYPE}"
      TRAVIS_JOB_ID: "${TRAVIS_JOB_ID}"
      TRAVIS_JOB_NUMBER: "${TRAVIS_JOB_NUMBER}"
      TRAVIS_PULL_REQUEST: "${TRAVIS_PULL_REQUEST}"
      TRAVIS_PULL_REQUEST_BRANCH: "${TRAVIS_PULL_REQUEST_BRANCH}"
      TRAVIS_PULL_REQUEST_SHA: "${TRAVIS_PULL_REQUEST_SHA}"
      TRAVIS_REPO_SLUG: "${TRAVIS_REPO_SLUG}"
    privileged: true  # allows mount inside container
    links:
      - postgres
      - couch
      - redis
      - elasticsearch2
      - elasticsearch5
      - kafka
      - zookeeper
      - minio
    volumes:
      - ..:/mnt/commcare-hq-ro${RO}
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-lib:}/mnt/lib

  formplayer:
    image: dimagi/formplayer
    environment:
      COMMCARE_HOST: "http://host.docker.internal:8000"
      COMMCARE_ALTERNATE_ORIGINS: "http://localhost:8000,http://127.0.0.1:8000"
      AUTH_KEY: "secretkey"
      EXTERNAL_REQUEST_MODE: "replace-host"
    expose:
      - "8080"
      - "8081"

  postgres:
    extends:
      file: "${COMPOSE_OS_FILE}"
      service: postgres
    environment:
      POSTGRES_USER: commcarehq
      POSTGRES_PASSWORD: commcarehq
    expose:
      - "5432"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-postgresql:}/var/lib/postgresql/data

  couch:
    image: dimagi/couchdb-dev:3.1.1
    command: ["--with-haproxy", "--with-admin-party-please", "-n", "1"]
    ulimits:
      # fix high CPU usage (1048576 is the default, tried 65536, 1024 fixed it)
      # https://groups.google.com/forum/#!topic/rabbitmq-users/hO06SB-QBqc
      nofile:
        soft: 1024
        hard: 1048576
    expose:
      - "5984"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-couchdb2:}/usr/src/couchdb/dev/lib/node1/data

  redis:
    image: redis
    expose:
      - "6379"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-redis:}/data

  elasticsearch2:
    image: elasticsearch:2.4.6
    environment:
      ES_JAVA_OPTS: "-Des.script.engine.groovy.inline.aggs=true -Des.script.engine.groovy.inline.search=true"
    expose:
      - "9200"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-elasticsearch2:}/usr/share/elasticsearch/data
      - ./files/elasticsearch_2.yml:/usr/share/elasticsearch/config/elasticsearch.yml:rw

  elasticsearch5:
    image: elasticsearch:5.6.16
    environment:
      ES_JAVA_OPTS: "-Xms750m -Xmx750m -Des.script.engine.groovy.inline.aggs=true -Des.script.engine.groovy.inline.search=true"
    expose:
      - "9200"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-elasticsearch5:}/usr/share/elasticsearch/data
      - ./files/elasticsearch_5.yml:/usr/share/elasticsearch/config/elasticsearch.yml:rw

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-zookeeper:}/opt/zookeeper-3.4.13/data

  kafka:
      image: wurstmeister/kafka:2.13-2.6.0
      ports:
        - "9092:9092"
      environment:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_BROKER_ID: 1
          KAFKA_ADVERTISED_PORT: 9092
          CUSTOM_INIT_SCRIPT: |
            URL="https://raw.githubusercontent.com/vishnubob/wait-for-it/c096cface5fbd9f2d6b037391dfecae6fde1362e/wait-for-it.sh"
            if curl --max-time 10 $$URL > wait.sh ; then
              chmod +x ./wait.sh
              ./wait.sh -t 30 zookeeper:2181 || exit 1
            else
              echo "Wait script download failed"
            fi
          KAFKA_ADVERTISED_HOST_NAME: "kafka"
      volumes:
        - ${DOCKER_SOCK}:${DOCKER_SOCK}
        - ${VOLUME_PREFIX}${BLANK_IF_TESTS-kafka:}/kafka/kafka-logs-1

  minio:
    image: minio/minio
    command: server --address :9980 /data
    expose:
      - "9980"
    volumes:
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-minio-conf:}/root/.minio
      - ${VOLUME_PREFIX}${BLANK_IF_TESTS-minio-data:}/data
    environment:
      MINIO_ACCESS_KEY: admin-key
      MINIO_SECRET_KEY: admin-secret
