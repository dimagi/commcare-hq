name: Lint

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - investigation/lint-action

  pull_request:
    branches:
      - investigation/lint-action

permissions:
  checks: write
  contents: write

env:
  BRANCH_NAME: ${{ github.head_ref }}
  BASE_NAME: ${{ github.base_ref }}

jobs:
  lint-python:
    name: Lint Python
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14.6

      - name: Get .py files
        id: python-files
        run: |
          filenames=$(echo "${{ steps.changed-files.outputs.all_changed_files }}")
          python_file_present=false
          for filename in $filenames; do
            extension="${filename##*.}"

            if [[ "$extension" == "py" ]]; then
              python_file_present=true
              break
            fi
          done

          echo "{python-file-present}={python_file_present}" >> $GITHUB_OUTPUT
          echo "{python-file-names}={python_files"} >> $GITHUB_OUTPUT

      - name: Check if python files are present
        if: ${{ steps.python-files.outputs.python_file_present == 'true' }}
        run: echo "I'm running because apparently there's some .py files around here..."

      - name: Set up Python
        uses: actions/setup-python@v1
        if: ${{ steps.python-files.outputs.python_file_present == 'true' }}
        with:
          python-version: 3.8

      - name: Install Python dependencies
        if: ${{ steps.python-files.outputs.python_file_present == 'true' }}
        run: pip install flake8

      - name: Run flake8 linter
        if: ${{ steps.python-files.outputs.python_file_present == 'true' }}
        uses: wearerequired/lint-action@v2
        with:
          flake8: true
          flake8_auto_fix: false
          flake8_args: ${{ steps.python-files.outputs.python-file-names }}

  # If this is in the same step as python linting the annotations don't show up...sad face
  lint-javascript:
    name: Lint Javascript
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14.6

      - name: Get .js files
        id: javascript-files
        run: |
          output=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -o "\S*\.js" )
          echo "::set-output name=javascript-file-names::$output"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile

      - uses: sibiraj-s/action-eslint@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          eslint-args: ${{ steps.javascript-files.outputs.javascript-file-names }}
          annotations: true
